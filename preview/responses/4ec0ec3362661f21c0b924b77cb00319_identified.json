{
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><?rfc linefile=\"1:xml/complete/rfc2179.xml\"?> <!-- automatically generated by xml2rfc v1.36 on 2012-11-19T22:05:19Z --> <!DOCTYPE rfc SYSTEM \"rfc2629.dtd\"> <?rfc toc=\"yes\"?>  <!--      ASCII to XML transformation by Invisible Worlds, Inc.      http://invisible.net/      Last transformation: 03-Feb-1999, 02:04:23       Cannonical version of this document is at:      http://info.internet.isi.edu/in-notes/rfc/files/rfc2179.txt       Implementors should verify all content with      cannonical version.  Failure to do so may result in      protocol failures. -->  <rfc number=\"2179\"      category=\"info\"> <front> <title abbrev=\"Trade Show Security\">Network Security For Trade Shows</title> <author initials=\"R.A.\" surname=\"Gwinn\" fullname=\"R. Allen Gwinn, Jr.\"> <organization>Associate Director, Computing</organization> <address> <postal> <street>Business Information Center</street> <street>Southern Methodist University</street> <street>Dallas</street> <street>TX  75275</street> </postal> <phone>214/768-3186</phone> <email>allen@mail.cox.smu.edu</email> </address> </author> <date month=\"July\" year=\"1997\"/> <area>Operations</area> <area>Security</area> <keyword>attack</keyword> <keyword>security</keyword> <abstract> <t>    This document is designed to assist vendors and other participants in    trade shows, such as Networld+Interop, in designing effective    protection against network and system attacks by unauthorized    individuals.  Generally, it has been observed that many system    administrators and trade show coordinators tend to overlook the    importance of system security at trade shows. In fact, systems at    trade shows are at least as prone to attack as office-based    platforms. Trade show systems should be treated as seriously as an    office computer. A breach of security of a trade show system can    render -- and has rendered -- an exhibitor&apos;s demonstrations    inoperable -- sometimes for the entire event! </t> <t>    This document is not intended to replace the multitudes of    comprehensive books on the subject of Internet security.  Rather, its    purpose is to provide a checklist-style collection of frequently    overlooked, simple ways to minimize the chance of a costly attack.    We encourage exhibitors to pay special attention to this document and    share it with all associated representatives. </t> </abstract> </front> <middle> <section title=\"System Security\"> <t>    This section discusses technical security procedures for workstations    on the vendor network.  Although specifics tend to be for Unix    systems, general procedures apply to all platforms. </t> </section> <section title=\"Password Security\"> <t>    Lack of passwords or easy to guess passwords are a relatively low-    tech door into systems, but are responsible for a significant number    of breakins. Good passwords are a cornerstone of system security. </t> <t>    By default, PC operating systems like Windows 95 and MacOS do not    provide adequate password security. The Windows login password    provides no security (hitting the &quot;ESC&quot; key allows the user to bypass    password entry). Password security for these machines is possible,    but is beyond the scope of this document. </t> <t>    Tips: <list> <t>    * Check /etc/passwd on Unix systems and the user administration      application on other systems for lack of passwords. Some vendors      ship systems with null passwords, in some cases even for      privileged accounts. </t> <t>    * Change passwords, especially system and root passwords. </t> <t>    * Mix case, numbers and punctuation, especially on privileged      accounts. </t> <t>    * Change system passwords on a regular basis. </t> <t>    * Do not use passwords relating to the event, the company, or      products being displayed.  Systems personnel at Networld+Interop,      when asked to assist booth personnel, often guess even root      passwords! </t></list> </t> <t> Extra Privileged Accounts <list> <t>    Some system vendors have been known to ship systems with multiple    privileged accounts (for example, Unix systems with accounts that    have root privileges [UID=0]). Some vendors may include a separate    system administration account that places a user in a specific    administrative program. Each additional privileged account presents    yet another opportunity for abuse. </t> <t>    Generally, if a Unix system does not need additional root accounts,    these can be disabled by placing &quot;*&quot; in the password field of    /etc/passwd, or by using the administrative tool when a system    employees enhanced security. Verify all systems for extra privileged    accounts and either disable them or change their password as    appropriate. </t> <t>    Make certain that privileged accounts are inaccessible from anywhere    other than the system console.  Frequently systems rely on files such    as /etc/securettys for a list of &quot;secure&quot; terminals.  As a general    rule, unless a terminal is in this file, a root login is not    possible.  Specific use of this feature should be covered in the    system&apos;s documentation files. </t></list> </t> <t>    Tips: <list> <t>    * Check /etc/passwd on Unix systems and the user administration      application on other systems for additional privileged accounts. </t> <t>    * Disable remote login for privileged accounts. </t> <t>    * Disable any unnecessary privileged accounts. </t> <t>    * Limit logins from root accounts to &quot;secure&quot; terminals or the      system console. </t></list> </t> </section> <section title=\"Use of Authentication Tokens\"> <t>    Authentication tokens such as SecureID, Cryptocard, DES Gold and    others, provide a method of producing &quot;one-time&quot; passwords.  The    principle advantage in a trade-show environment is to render    worthless, packets captured by sniffers on the network.  It should be    treated as fact, that there are many packet sniffers and other    administration tools constantly (legitimately) watching the network-    -especially at a large network-oriented trade show. Typed passwords,    by default, are sent clear text across the network, allowing others    to view them. Authentication tokens provide a password that is only    valid for that one instance, and are useless after that.  A logical    extension of the use of authentication tokens would be to use them    for &quot;trips home&quot; (from the show network to a home site) to minimize    the chance of off-site security problems.    An alternative to these tokens is the secure shell (&quot;ssh&quot;) protocol    which provides an encrypted connection between clients and servers.    This connection can carry both login traffic and arbitrary port-to-    port communication, and is a powerful tool for securing an in-booth    network and communications to and from remote systems. </t> <t>    Tips: <list> <t>    * Contact vendors of authentication tokens/cards for further      information as to how to integrate into specific environments, or      on to specific platforms. </t> <t>    * The public-domain utility &quot;cryptosu&quot; (csu), when used with a      Cryptocard, provides a replacement for Unix&apos;s &quot;su&quot; command,      employing a challenge/response style of authentication for root      access. </t> <t>    * Explore the use of ssh clients and servers. </t></list> </t> </section> <section title=\"Anonymous FTP\"> <t>    Anonymous FTP accounts can easily turn into a security hole.  Disable    this service if not specifically needed.  In the event that anonymous    FTP is to be used, the following tips may help secure it. <list> <t>    * When a user logs in as &quot;anonymous&quot;, they should be locked into a      specific directory tree. Be sure that FTPd properly chroots to the      appropriate directory. A &quot;cd /&quot; should put an anonymous user at the      top of the &quot;public&quot; tree, and not the system&apos;s root directory. </t> <t>    * Some systems may allow symbolic links (or &quot;shortcuts&quot;) to take a      user outside the allowed tree. Verify all links inside the      anonymous FTP hierarchy. </t> <t>    * Make sure that ftp&apos;s root directory is &quot;owned&quot; by someone other      than the &apos;ftp&apos; account. Typically, it should be owned by &quot;root&quot;. </t> <t>    * Do not use a world-writable incoming directory unless absolutely      necessary. Many sites use these as a way for users to transfer      files into the site. This can, and frequently does, turn into an      archive for stolen software (referred to by the pirate community as      &quot;warez&quot;). </t> <t>    * Removing read permissions from the directory permissions (chmod 733      on Unix systems) prohibits an anonymous user from being able to      list the contents of a directory. Files can be deposited as usual,      but not retrieved unless the user knows the exact name of the file. </t></list> </t> </section> <section title=\"Network File Sharing\"> <t>    Writable file shares without some form of security are invitations to    destruction of information and demonstrations. Whether using NFS on    Unix systems, or PC sharing facilities like CIFS, AppleShare, or    NetWare, close attention should be paid to security of the files    exported.  Keep in mind that one&apos;s competition frequently shares the    same network at a trade show!  Security for both read and write    access should be employed and each access point examined. </t> <t>    Exporting a writable NFS filesystem to the world grants anyone the    ability to read and write any file in the exported mount point. If    this is done, for example, with a system directory such as &quot;/&quot; or    &quot;/etc&quot;, it is a simple matter to edit password files to create one-    self access to a system. Therefore, /etc/exports should be closely    examined to be certain that nothing of a sensitive nature is exported    to anyone but another trusted host. Anything exported to the general    public should be exported &quot;read-only&quot;, and verified for the    information that is available via the file shares. </t> <t>    Tips: <list> <t>    * Do not provide file sharing space unless needed. </t> <t>    * Verify where exported information will be &quot;visible&quot;. </t> <t>    * Do not maintain any writable shares unless absolutely necessary! </t></list> </t> </section> <section title=\"Trusted Hosts\"> <t>    Trusted host entries are a method for allowing other hosts    &quot;equivalent&quot; security access to another host computer. Some vendors    ship systems with open trusted host files.  Make certain that this    issue is addressed. </t> <t>    Tips: <list> <t>    * On Unix systems, check for a &apos;+&apos; entry (all systems trusted) in      /etc/hosts.equiv and all &quot;.rhosts&quot; files (there may be multiple      .rhosts files) and remove it. </t> <t>    * Check for an &quot;xhost +&quot; entry in the &quot;...X11/xdm/Xsession&quot; file.      Most often, an &quot;xhost&quot; entry will appear with a pathname such as      &quot;/usr/local/lib/xhost +&quot;. Remove this. </t></list> </t> </section> <section title=\"SetUID and SetGID binaries (Unix systems)\"> <t>    On Unix systems, the &quot;suid&quot; bit on a system executable program allows    the program to execute as the owner. A program that is setUID to    &quot;root&quot; will allow the program to execute with root privileges. There    are multiple legitimate reasons for a program to have root    privileges, and many do. However, it may be unusual to have suid    programs in individual user directories or other non-system places. A    scan of the filesystems can turn up any program with its suid or sgid    bit set.  Before disabling any programs, check the legitimacy of the    files. </t> <t>    Tips: <list> <t>    * &quot;find / -user root -perm -4000 -print&quot; will find any occurrence of      a setuid file anywhere in the system, including those on NFS      mounted partitions. </t> <t>    * &quot;find / -group kmem -perm -2000 -print&quot; will do the same for kmem      group permissions. </t></list> </t> </section> <section title=\"System Directory Ownership and Write Permissions\"> <t>    Check ownership of all system directories and permissions needed to    write or modify files. There is no simple way to do this on PC    operating systems like Windows NT without simply checking all files    and directories or using a version of &quot;ls&quot; that will list ACLs. </t> <t>    On Unix systems, a directory with permissions such as &quot;drwxrwxrwx&quot;    (such as /tmp) is world-writable and anyone can create or modify    files in such area. Pay special attention to &quot;/&quot; and &quot;/etc&quot;. These    should be owned by some system account-not by an individual user.    When in doubt, contact the vendor of the system software for    confirmation of the appropriate directory or file permissions. </t> </section> <section title=\"Network Services\"> <t>    Any servers not needed should be disabled. The notorious &quot;R services&quot;    (rexec, rsh, and rlogin) are particularly prone to security problems    and should be disabled unless specifically needed.  Pay particular    attention to trusted hosts files, and be aware of the risk of IP    spoofing attacks from machines &quot;pretending&quot; to be trusted hosts. </t> <t>    Tips: <list> <t>    * On Unix systems, comment out &quot;R services&quot; (rexec, rsh, rlogin) in      /etc/inetd.conf. </t> <t>    * Check for other unknown or unneeded services. </t></list> </t> </section> <section title=\"Trivial File Transfer Protocol (TFTP)\"> <t>    TFTP can be an easy way for an intruder to access system files. It is    good general practice to disable TFTP.  If TFTP is needed, verify    that only files targeted for export are accessible.  A simple way to    check security is to attempt to tftp files such as /etc/passwd or    /etc/motd to check accessiblity of system files. TCP Connection Monitoring </t> <t>    Public domain software (TCP Wrappers or &quot;tcpd&quot; for Unix systems)    allow restriction and monitoring of TCP connections on a host by host    basis. Systems can be configured to notify an administrator and    syslog when any unauthorized party attempts to access the host. This    software is available from: <list> <t>    * <eref target=\"ftp://info.cert.org/pub/tools/tcp_wrappers/\"/> </t></list> </t> </section> <section title=\"BIND (Berkeley Internet Name Daemon)\"> <t>    Earlier versions of BIND have been prone to various attacks. If a    host is going to be acting as DNS, use the latest version of BIND.    It is available at: <list> <t>    * <eref target=\"ftp://ftp.isc.org/isc/bind\"/> </t></list> </t> </section> <section title=\"Sendmail and Mailer Security\"> <t>    A great number of previous versions of Sendmail have known security    holes.  Check installed sendmail for the most recent version.    Alternatively, consult the operating system vendor to get the most    recent release for the platform. </t> </section> <section title=\"Web Server Scripting Security\"> <t>    All Web server scripts and binaries should be checked (especially the    &quot;...httpd/cgi-bin&quot; directory) for those that allow shell commands to    be executed. Many attacks in recent months have focused on the use of    utilities such as &quot;phf&quot; for accessing /etc/passwd on a target system.    Remove any script that is not needed in the course of operation of a    web server. </t> </section> <section title=\"Other Suggestions\"> <t><list><t>    * Check with the vendor of the operating system for known security      issues. Make certain that all systems have the latest version of      software--especially security patches to fix specific problems. </t> <t>    * Examine log files on the host frequently. On Unix systems, the      &quot;last&quot; command will furnish information on recent logins and where      they came from. The &quot;syslogs&quot; or &quot;Event Viewer&quot; will contain more      specific information on system events. </t> <t>    * Web server logfiles (...httpd/log/access_log and      ...httpd/log/error_log) will contain information on who has been      accessing a WWW server, what has been accessed, and what has      failed. </t> <t>    * Good backups are the best defense against system damage. Perform      backups before placing a system on the trade show network then      continue backups throughout the show and again following the event.      A final backup set is useful to examine for possible attempts at      (or successful) penetrations of system security. </t></list> </t> </section> <section title=\"General Network Security\"> <t>    As would be expected at network trade shows (large or otherwise),    there are many entities running packet sniffers. Most are exhibitors    who have a legitimate need to run them during the course of product    demonstrations. However, be aware that there are many &quot;listening    ears&quot; on network segments--any of whom can &quot;hear&quot; or &quot;see&quot;    information as it crosses the net. Particularly prone to    eavesdropping are telnet sessions. A good rule of thumb is to assume    that &quot;when you type your password, the only one that doesn&apos;t see it    is you!&quot; </t> <t>    It is a good practice to not log in (or &quot;su&quot;) to an account with    privileges across the network if at all possible. As mentioned    previously, authentication tokens and ssh are a simple way to add    security to system account access. </t> </section> <section title=\"Packet Filtering\"> <t>    Many routers support basic packet filtering.  If a router can be    deployed between the local network and the show&apos;s network, general    basic packet filtering should be employed.  Below is a good &quot;general&quot;    packet filter approach. The approach itself is ordered into    categories: <list> <t>    * General global denials/acceptance. </t> <t>    * Specific global service denials. </t> <t>    * Specific service acceptance. </t> <t>    * Final denial of all other TCP/UDP services. </t></list> </t> <t>    Based on the theory of denying everything that you don&apos;t know is    acceptable traffic, a good approach to a filter ruleset, in order of    execution priority, might be:    General Global Denials/Acceptance <list> <t>    1 Filter spoofed source addresses by interface. Match source      addresses to routing information available for the interface.      Discard packets with source addresses arriving on one interface      (from the &quot;outside&quot; for example) claiming a source address on      another interface (the &quot;inside&quot;). </t> <t>    2 Filter all source routed packets unless source routing is      specifically needed. </t> <t>    3 Allow outbound connections from &quot;inside&quot; hosts. </t> <t>    4 Allow established TCP connections (protocol field contains 6 and      the TCP flags field either contains ACK or does NOT contain SYN      bit). Only filter requests for &apos;new&apos; connections. </t> <t>    5 Filter &apos;new&apos; connections with source port of 25. Prevents people      from pretending to be a remote mail server. </t> <t>    6 Filter loopback address (source address 127.0.0.1). Prevents      packets from a misconfigured DNS resolver. </t></list> </t> <t>    Specific Global Service Denials <list> <t>    1 Specifically block all &quot;R-command&quot; ports      (destination ports 512-515). </t> <t>    2 Block telnet (destination port 23) from any host not requiring      telnet access from the outside. (If you use ssh, you can      block it from all hosts!) </t> <t>    3 Add specific filters to deny other specific protocols to the      network, as needed. </t></list> </t> <t>    Specific Host/Service Acceptance <list> <t>    1 Add specific access to specific &quot;public&quot; hosts&apos; services      (unsecure FTP or WWW servers). </t> <t>    2 Allow SMTP (source and destination port 25) for electronic mail      to the mail server(s). </t> <t>    3 Allow inbound FTP connections (source port 20) to the FTP server(s). </t> <t>    4 Allow DNS (source and destination port 53, UDP &amp; TCP) to name servers.      If zone transfers are not needed, block the TCP ports. </t> <t>    5 Allow RIP packets in (source and destination port 520, UDP), if      appropriate. </t> <t>    6 Add specific filters to allow other desired specific protocols      or to open certain ports to specific machines. </t></list> </t> <t>    Final Service Denial <list> <t>    1 Deny all other UDP and TCP services not allowed by the previous      filters. </t></list> </t> </section> <section title=\"Contributing Writer\"> <figure><artwork>    Stephen S. Hultquist    President    Worldwide Solutions, Inc.    4450 Arapahoe Ave., Suite 100    Boulder, CO  80303     Phone: +1.303.581.0800    EMail: ssh@wwsi.com </artwork></figure> </section> </middle> </rfc> ", 
    "identity": {
        "subtype": "", 
        "is_error": false, 
        "version": "", 
        "protocol": "", 
        "language": "", 
        "service": "", 
        "has_dataset": false, 
        "has_metadata": false
    }, 
    "digest": "4ec0ec3362661f21c0b924b77cb00319", 
    "source_url": "http://xml2rfc.tools.ietf.org/public/rfc/xml/rfc2179.xml"
}