{
    "content": "<?xml version=\"1.0\" ?> <?xml-stylesheet href=\"http://www.atomenabled.org/css/atom.css\" type=\"text/css\"?> <feed xmlns=\"http://www.w3.org/2005/Atom\">  <icon>http://www.lsoft.com/images/listserv-community.gif</icon> <logo>http://www.lsoft.com/images/listserv_small.gif</logo> <link rel=\"related\" href=\"http://www.lsoft.com/products/listserv-powered.asp\" title=\"Powered by L-Soft's LISTSERV mailing list manager\"/>  <title>COMP-FORTRAN-90 List</title> <subtitle>COMP-FORTRAN-90 List Archives</subtitle> <link rel=\"alternate\" href=\"https://www.jiscmail.ac.uk/cgi-bin/webadmin?A0=COMP-FORTRAN-90\"/> <link rel=\"self\" href=\"https://www.jiscmail.ac.uk/cgi-bin/webadmin?RSS&amp;L=COMP-FORTRAN-90&amp;v=ATOM1.0\"/> <id>https://www.jiscmail.ac.uk/cgi-bin/webadmin?RSS&amp;L=COMP-FORTRAN-90&amp;v=ATOM1.0</id> <div class=\"info\" xmlns=\"http://www.w3.org/1999/xhtml\">This is an Atom formatted XML site feed. It is intended to be viewed in a Newsreader. Alternatively you can view the HTML archives at https://www.jiscmail.ac.uk/cgi-bin/webadmin?A0=COMP-FORTRAN-90. </div> <generator uri=\"/cgi-bin/webadmin?DEBUG-SHOW-VERSION\">LISTSERV Web Interface 2.4.1</generator> <updated>2015-01-21T19:20:50Z</updated>   <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;f080bd8a.1501' title='Re: fortran sum intrinsic question '/>   <author>      <name>Tim Prince</name>   </author>   <published>2015-01-21T14:20:46-05:00</published>   <updated>2015-01-21T14:20:46-05:00</updated>   <title>Re: fortran sum intrinsic question </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;f080bd8a.1501</id>   <content type='html'>On 1/21/2015 2:10 PM, Tobias Burnus wrote:&lt;br&gt;&amp;gt; Ian D Chivers wrote:&lt;br&gt;&amp;gt;&amp;gt; Jane and I are writing some new examples&lt;br&gt;&amp;gt;&amp;gt; for the next edition of the book&lt;br&gt;&amp;gt;&amp;gt; and have been benchmarking an openmp&lt;br&gt;&amp;gt;&amp;gt; summation example and comparing the timing&lt;br&gt;&amp;gt;&amp;gt; against the sum intrinsic.&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; are we likely to see parallel&lt;br&gt;&amp;gt;&amp;gt; versions of any of the intrinsics?&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; For coarrays, there is CO_SUM. Otherwise, there the big problem of&lt;br&gt;&amp;gt; when it is profitable to use thread parallelization and when the&lt;br&gt;&gt; overhead is too big. (Besides the issue how many threads the [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;be85dc34.1501' title='Re: fortran sum intrinsic question '/>   <author>      <name>Tobias Burnus</name>   </author>   <published>2015-01-21T20:10:20+01:00</published>   <updated>2015-01-21T20:10:20+01:00</updated>   <title>Re: fortran sum intrinsic question </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;be85dc34.1501</id>   <content type='html'>Ian D Chivers wrote:&lt;br&gt;&amp;gt; Jane and I are writing some new examples&lt;br&gt;&amp;gt; for the next edition of the book&lt;br&gt;&amp;gt; and have been benchmarking an openmp&lt;br&gt;&amp;gt; summation example and comparing the timing&lt;br&gt;&amp;gt; against the sum intrinsic.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; are we likely to see parallel&lt;br&gt;&amp;gt; versions of any of the intrinsics?&lt;br&gt;&lt;br&gt;For coarrays, there is CO_SUM. Otherwise, there the big problem of when&lt;br&gt;it is profitable to use thread parallelization and when the overhead is&lt;br&gt;too big. (Besides the issue how many threads the user wants to have.) \\ufffd\\ufffd\\ufffd&lt;br&gt;That&apos;s the general problem and the reason [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;2ba3ba9a.1501' title='Re: fortran sum intrinsic question '/>   <author>      <name>Tim Prince</name>   </author>   <published>2015-01-21T09:52:39-05:00</published>   <updated>2015-01-21T09:52:39-05:00</updated>   <title>Re: fortran sum intrinsic question </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;2ba3ba9a.1501</id>   <content type='html'>On 1/21/2015 9:05 AM, Bill Long wrote:&lt;br&gt;&amp;gt; On Jan 21, 2015, at 1:15 AM, Ian D Chivers &amp;lt;ian.chivers@CHIVERSANDBRYAN.CO.UK&amp;gt; wrote:&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; Jane and I are writing some new examples&lt;br&gt;&amp;gt;&amp;gt; for the next edition of the book&lt;br&gt;&amp;gt;&amp;gt; and have been benchmarking an openmp&lt;br&gt;&amp;gt;&amp;gt; summation example and comparing the timing&lt;br&gt;&amp;gt;&amp;gt; against the sum intrinsic.&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; are we likely to see parallel&lt;br&gt;&amp;gt;&amp;gt; versions of any of the intrinsics?&lt;br&gt;&amp;gt; It depends on the implementation.&lt;br&gt;&amp;gt;&lt;br&gt;&gt; But, in general, routines that are BLAS 1 replacements will not be threaded (though very likely vectorized). Examples include SUM [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;681ee7b3.1501' title='Re: fortran sum intrinsic question '/>   <author>      <name>Bill Long</name>   </author>   <published>2015-01-21T14:05:09+00:00</published>   <updated>2015-01-21T14:05:09+00:00</updated>   <title>Re: fortran sum intrinsic question </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;681ee7b3.1501</id>   <content type='html'>On Jan 21, 2015, at 1:15 AM, Ian D Chivers &amp;lt;ian.chivers@CHIVERSANDBRYAN.CO.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt; Jane and I are writing some new examples&lt;br&gt;&amp;gt; for the next edition of the book&lt;br&gt;&amp;gt; and have been benchmarking an openmp&lt;br&gt;&amp;gt; summation example and comparing the timing&lt;br&gt;&amp;gt; against the sum intrinsic.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; are we likely to see parallel&lt;br&gt;&amp;gt; versions of any of the intrinsics? [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;50d54dc6.1501' title='Re: fortran sum intrinsic question '/>   <author>      <name>Tim Prince</name>   </author>   <published>2015-01-21T08:48:46-05:00</published>   <updated>2015-01-21T08:48:46-05:00</updated>   <title>Re: fortran sum intrinsic question </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;50d54dc6.1501</id>   <content type='html'>On 1/21/2015 2:15 AM, Ian D Chivers wrote:&lt;br&gt;&amp;gt; Jane and I are writing some new examples&lt;br&gt;&amp;gt; for the next edition of the book&lt;br&gt;&amp;gt; and have been benchmarking an openmp&lt;br&gt;&amp;gt; summation example and comparing the timing&lt;br&gt;&amp;gt; against the sum intrinsic.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; are we likely to see parallel&lt;br&gt;&amp;gt; versions of any of the intrinsics?&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Ian Chivers&lt;br&gt;&amp;gt; Jane Sleightholme&lt;br&gt;When you say parallel, I assume you mean threading, as opposed to omp&lt;br&gt;simd reduction, which ought to be close to the sum intrinsic with&lt;br&gt;auto-vectorization. You would not want to give up the [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d5f45e39.1501' title='fortran sum intrinsic question '/>   <author>      <name>Ian D Chivers</name>   </author>   <published>2015-01-21T07:15:59-00:00</published>   <updated>2015-01-21T07:15:59-00:00</updated>   <title>fortran sum intrinsic question </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d5f45e39.1501</id>   <content type='html'>Jane and I are writing some new examples&lt;br&gt;for the next edition of the book&lt;br&gt;and have been benchmarking an openmp&lt;br&gt;summation example and comparing the timing&lt;br&gt;against the sum intrinsic.&lt;br&gt;&lt;br&gt;are we likely to see parallel&lt;br&gt;versions of any of the intrinsics?&lt;br&gt;&lt;br&gt;Ian Chivers&lt;br&gt;Jane Sleightholme </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;9b920422.1501' title='Re: TS18508 collectives: synchronisation and coarray vs noncoarray variables '/>   <author>      <name>Bill Long</name>   </author>   <published>2015-01-15T22:02:26+00:00</published>   <updated>2015-01-15T22:02:26+00:00</updated>   <title>Re: TS18508 collectives: synchronisation and coarray vs noncoarray variables </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;9b920422.1501</id>   <content type='html'>On Jan 15, 2015, at 4:50 AM, Anton Shterenlikht &amp;lt;mexas@BRIS.AC.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt; It is not clear to me from TS18508&lt;br&gt;&amp;gt; whether synchronisation is required&lt;br&gt;&amp;gt; before and after the invocation&lt;br&gt;&amp;gt; of a collective subroutine.&lt;br&gt;&lt;br&gt;Generally not.&lt;br&gt;&lt;br&gt;&amp;gt; Note 7.4 mentions a &amp;quot;partial synchronisation&lt;br&gt;&amp;gt; of invocations of a collective subroutine&amp;quot;.&lt;br&gt;&amp;gt; But I&apos;m not sure if this answers my question. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;b96d61ab.1501' title='TS18508 collectives: synchronisation and coarray vs noncoarray variables '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2015-01-15T02:50:38-08:00</published>   <updated>2015-01-15T02:50:38-08:00</updated>   <title>TS18508 collectives: synchronisation and coarray vs noncoarray variables </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;b96d61ab.1501</id>   <content type='html'>It is not clear to me from TS18508&lt;br&gt;whether synchronisation is required&lt;br&gt;before and after the invocation&lt;br&gt;of a collective subroutine.&lt;br&gt;Note 7.4 mentions a &amp;quot;partial synchronisation&lt;br&gt;of invocations of a collective subroutine&amp;quot;.&lt;br&gt;But I&apos;m not sure if this answers my question.&lt;br&gt;&lt;br&gt;Examples in A.3.1 are also confusing.&lt;br&gt;&lt;br&gt;In the first example, why x and y are defined&lt;br&gt;as coarray variables? This fact seems to be&lt;br&gt;completely unused. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d07c03c1.1501' title='parallel coarray IO via Cray extension assign -m on: performance data '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2015-01-10T15:42:15-08:00</published>   <updated>2015-01-10T15:42:15-08:00</updated>   <title>parallel coarray IO via Cray extension assign -m on: performance data </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d07c03c1.1501</id>   <content type='html'>A long mail for discussion.&lt;br&gt;Please advise if another mailing list is more appropriate.&lt;br&gt;&lt;br&gt;On Archer I&apos;m trying to use Cray extension &amp;quot;assign -m on&amp;quot;&lt;br&gt;to write coarray data in parallel to a shared direct access file.&lt;br&gt;There&apos;s only a single non-standard subroutine:&lt;br&gt;&lt;br&gt;call asnfile( trim(fname), &apos;-m on -F system&apos;, errstat )&lt;br&gt;&lt;br&gt;which sets the assign environment for file specified&lt;br&gt;by the character variable &amp;quot;fname&amp;quot;. The key flag is&lt;br&gt;&amp;quot;-m on&amp;quot;, which allows the same file to be connected to multiple&lt;br&gt;images [1]. &amp;quot;-F system&amp;quot; specifies &amp;quot;No library buffering&amp;quot;. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;18e226dc.1501' title='Re: vacancies at Nag in the USA '/>   <author>      <name>Ian Chivers</name>   </author>   <published>2015-01-08T10:12:15-00:00</published>   <updated>2015-01-08T10:12:15-00:00</updated>   <title>Re: vacancies at Nag in the USA </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;18e226dc.1501</id>   <content type='html'>Thanks Phillip, I will.&lt;br&gt;&lt;br&gt;-----Original Message-----&lt;br&gt;From: Fortran 90 List [mailto:COMP-FORTRAN-90@JISCMAIL.AC.UK] On Behalf Of&lt;br&gt;Phillip Helbig&lt;br&gt;Sent: 07 January 2015 22:23&lt;br&gt;To: COMP-FORTRAN-90@JISCMAIL.AC.UK&lt;br&gt;Subject: Re: vacancies at Nag in the USA&lt;br&gt;&lt;br&gt;&amp;gt; I&apos;ve just been contacted by Nag. They are increasing their technical&lt;br&gt;&amp;gt; support staff in the USA.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Here is an extract from the mail I received.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; If you know anyone who may be interested Could you please pass the&lt;br&gt;&amp;gt; details on. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;645c113.1501' title='Re: vacancies at Nag in the USA '/>   <author>      <name>Phillip Helbig</name>   </author>   <published>2015-01-07T23:23:19+01:00</published>   <updated>2015-01-07T23:23:19+01:00</updated>   <title>Re: vacancies at Nag in the USA </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;645c113.1501</id>   <content type='html'>&amp;gt; I&apos;ve just been contacted by Nag. They are increasing&lt;br&gt;&amp;gt; their technical support staff in the USA.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Here is an extract from the mail I received.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; If you know anyone who may be interested&lt;br&gt;&amp;gt; Could you please pass the details on.&lt;br&gt;&lt;br&gt;Perhaps you should post it to comp.lang.fortran? </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;fa6177cf.1501' title='vacancies at Nag in the USA '/>   <author>      <name>Ian Chivers</name>   </author>   <published>2015-01-07T15:50:29-00:00</published>   <updated>2015-01-07T15:50:29-00:00</updated>   <title>vacancies at Nag in the USA </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;fa6177cf.1501</id>   <content type='html'>I&apos;ve just been contacted by Nag. They are increasing&lt;br&gt;&lt;br&gt;their technical support staff in the USA.&lt;br&gt;&lt;br&gt;Here is an extract from the mail I received.&lt;br&gt;&lt;br&gt;If you know anyone who may be interested&lt;br&gt;&lt;br&gt;Could you please pass the details on.&lt;br&gt;&lt;br&gt;Maybe a happy new year for a couple of people in the US!&lt;br&gt;&lt;br&gt;Cheers&lt;br&gt;&lt;br&gt;Ian Chivers&lt;br&gt;&lt;br&gt;About NAG [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;e3540202.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Dan Nagle</name>   </author>   <published>2014-12-26T05:46:58-07:00</published>   <updated>2014-12-26T05:46:58-07:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;e3540202.1412</id>   <content type='html'>Hi,&lt;br&gt;&lt;br&gt;&amp;gt; On Dec 25, 2014, at 12:33 , Dick Hendrickson &amp;lt;dick.hendrickson@ATT.NET&amp;gt; wrote:&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Unfortunately, the real (sorry) historical reason isn&apos;t very interesting.&lt;br&gt;&lt;br&gt;Agreed. The conspiracies are much better reading.&lt;br&gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Basically, someone went through the then current C math library&lt;br&gt;&amp;gt; (I forget which one) and picked out all of the intrinsics that&lt;br&gt;&amp;gt; weren&apos;t already in Fortran and just added them to chapter 13. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;4d9a8c1b.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Dick Hendrickson</name>   </author>   <published>2014-12-25T13:33:36-06:00</published>   <updated>2014-12-25T13:33:36-06:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;4d9a8c1b.1412</id>   <content type='html'>Unfortunately, the real (sorry) historical reason isn't very interesting.&lt;br&gt;&lt;br&gt;Basically, someone went through the then current C math library&lt;br&gt;(I forget which one) and picked out all of the intrinsics that&lt;br&gt;weren't already in Fortran and just added them to chapter 13.&lt;br&gt;The argument (sorry again) was that if Fortran is the premier&lt;br&gt;scientific programming language, then it ought to have the&lt;br&gt;same capabilities as the competition. Presumably, the C&lt;br&gt;people did the thinking about which functions would be used&lt;br&gt;enough to be worth doing. [...]</content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;5cddfebb.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Robin Vowels</name>   </author>   <published>2014-12-26T00:38:15+11:00</published>   <updated>2014-12-26T00:38:15+11:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;5cddfebb.1412</id>   <content type='html'>From: &amp;quot;Van Snyder&amp;quot; &amp;lt;Van.Snyder@JPL.NASA.GOV&amp;gt;&lt;br&gt;Sent: Tuesday, December 23, 2014 10:30 AM&lt;br&gt;&lt;br&gt;&amp;gt; Even though Don Amos had published ACM TOMS algorithm 644 in 1986, with&lt;br&gt;&amp;gt; remarks to improve it in 1990 and 1995, there was sentiment that&lt;br&gt;&amp;gt; extending beyond real arguments and integer orders would have resulted&lt;br&gt;&amp;gt; in the proposal being rejected as too much work for implementers. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;adbd649b.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Van Snyder</name>   </author>   <published>2014-12-23T10:17:01-08:00</published>   <updated>2014-12-23T10:17:01-08:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;adbd649b.1412</id>   <content type='html'>On Tue, 2014-12-23 at 04:12 -0800, Anton Shterenlikht wrote:&lt;br&gt;&amp;gt; &amp;gt;From: Van Snyder &amp;lt;Van.Snyder@JPL.NASA.GOV&amp;gt;&lt;br&gt;&amp;gt; &amp;gt;&lt;br&gt;&amp;gt; &amp;gt;Even though Don Amos had published ACM TOMS algorithm 644 in 1986, with&lt;br&gt;&amp;gt; &amp;gt;remarks to improve it in 1990 and 1995, there was sentiment that&lt;br&gt;&amp;gt; &amp;gt;extending beyond real arguments and integer orders would have resulted&lt;br&gt;&amp;gt; &amp;gt;in the proposal being rejected as too much work for implementers.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; I&apos;m confused. 644 does indeed&lt;br&gt;&amp;gt; include algorithms for complex arguments [1,2].&lt;br&gt;&amp;gt; These went into Slatec, and I still use them,&lt;br&gt;&amp;gt; just checked ZBESJ [3] with complex args yesterday. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;1668f9f1.1412' title='Re: parallel i/o [WAS: Re: f2008: why bessel functions of only real arg?] '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-23T15:45:20+00:00</published>   <updated>2014-12-23T15:45:20+00:00</updated>   <title>Re: parallel i/o [WAS: Re: f2008: why bessel functions of only real arg?] </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;1668f9f1.1412</id>   <content type='html'>On Dec 23, 2014, at 7:47 AM, Anton Shterenlikht &amp;lt;mexas@BRIS.AC.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt;&amp;gt; From: Bill Long &amp;lt;longb@CRAY.COM&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; 1 UK-12 J3/14-174 Allow a file to be connected to more than one unit&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; at one time 8-2-5&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; This sounds like parallel I/O, which I thought was&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; decisively ruled out of the next revision. Am I wrong?&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&gt;&gt; The change was to make it processor dependent whether this is allowed, rather than strictly prohibited as was the case previously. There are no rules specified for how this works. However, it is certainly reasonable and straightforward to have [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;781948e1.1412' title='parallel i/o [WAS: Re: f2008: why bessel functions of only real arg?] '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-23T05:47:46-08:00</published>   <updated>2014-12-23T05:47:46-08:00</updated>   <title>parallel i/o [WAS: Re: f2008: why bessel functions of only real arg?] </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;781948e1.1412</id>   <content type='html'>&amp;gt;From: Bill Long &amp;lt;longb@CRAY.COM&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; 1 UK-12 J3/14-174 Allow a file to be connected to more than one unit&lt;br&gt;&amp;gt;&amp;gt; at one time 8-2-5&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; This sounds like parallel I/O, which I thought was&lt;br&gt;&amp;gt;&amp;gt; decisively ruled out of the next revision. Am I wrong?&lt;br&gt;&amp;gt;&lt;br&gt;&gt;The change was to make it processor dependent whether this is allowed, rather than strictly prohibited as was the case previously. There are no rules specified for how this works. However, it is certainly reasonable and straightforward to have a read-only file connected on multiple images, and this has been done in [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;8b4fd9d0.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-23T13:31:40+00:00</published>   <updated>2014-12-23T13:31:40+00:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;8b4fd9d0.1412</id>   <content type='html'>On Dec 23, 2014, at 5:49 AM, Anton Shterenlikht &amp;lt;mexas@BRIS.AC.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt;&amp;gt; From: John Reid &amp;lt;John.Reid@STFC.AC.UK&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; Are there any plans to extend these intrinsics&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; to accept complex args?&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; No. The list of extensions beyond those in the two TSs (on further&lt;br&gt;&amp;gt;&amp;gt; interoperability and further coarray features) is in WG5 document N2023.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; The first item on that list is&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; 1 UK-12 J3/14-174 Allow a file to be connected to more than one unit&lt;br&gt;&amp;gt; at one time 8-2-5&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; This sounds like parallel I/O, which I thought was&lt;br&gt;&gt; [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;be8e4215.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-23T04:12:49-08:00</published>   <updated>2014-12-23T04:12:49-08:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;be8e4215.1412</id>   <content type='html'>&amp;gt;From: Van Snyder &amp;lt;Van.Snyder@JPL.NASA.GOV&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;Even though Don Amos had published ACM TOMS algorithm 644 in 1986, with&lt;br&gt;&amp;gt;remarks to improve it in 1990 and 1995, there was sentiment that&lt;br&gt;&amp;gt;extending beyond real arguments and integer orders would have resulted&lt;br&gt;&amp;gt;in the proposal being rejected as too much work for implementers.&lt;br&gt;&lt;br&gt;I&apos;m confused. 644 does indeed&lt;br&gt;include algorithms for complex arguments [1,2].&lt;br&gt;These went into Slatec, and I still use them,&lt;br&gt;just checked ZBESJ [3] with complex args yesterday. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;c98370ff.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-23T03:49:01-08:00</published>   <updated>2014-12-23T03:49:01-08:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;c98370ff.1412</id>   <content type='html'>&amp;gt;From: John Reid &amp;lt;John.Reid@STFC.AC.UK&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; Are there any plans to extend these intrinsics&lt;br&gt;&amp;gt;&amp;gt; to accept complex args?&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;No. The list of extensions beyond those in the two TSs (on further&lt;br&gt;&amp;gt;interoperability and further coarray features) is in WG5 document N2023.&lt;br&gt;&lt;br&gt;The first item on that list is&lt;br&gt;&lt;br&gt;1 UK-12 J3/14-174 Allow a file to be connected to more than one unit&lt;br&gt;at one time 8-2-5 [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;6bf1b0c5.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>Van Snyder</name>   </author>   <published>2014-12-22T15:30:17-08:00</published>   <updated>2014-12-22T15:30:17-08:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;6bf1b0c5.1412</id>   <content type='html'>On Mon, 2014-12-22 at 03:30 -0800, Anton Shterenlikht wrote:&lt;br&gt;&amp;gt; Surprised to see that the new f2008 Bessel&lt;br&gt;&amp;gt; functions cannot take complex arguments.&lt;br&gt;&amp;gt; If somebody lobbied for these to be put in&lt;br&gt;&amp;gt; the standard, they should&apos;ve insisted on&lt;br&gt;&amp;gt; full complex capability. With only real&lt;br&gt;&amp;gt; argument the usefulness of these new intrinsics&lt;br&gt;&amp;gt; is severely limited. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;13b7cb45.1412' title='Re: f2008: why bessel functions of only real arg? '/>   <author>      <name>John Reid</name>   </author>   <published>2014-12-22T18:57:06+00:00</published>   <updated>2014-12-22T18:57:06+00:00</updated>   <title>Re: f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;13b7cb45.1412</id>   <content type='html'>Anton Shterenlikht wrote:&lt;br&gt;&amp;gt; Surprised to see that the new f2008 Bessel&lt;br&gt;&amp;gt; functions cannot take complex arguments.&lt;br&gt;&amp;gt; If somebody lobbied for these to be put in&lt;br&gt;&amp;gt; the standard, they should&apos;ve insisted on&lt;br&gt;&amp;gt; full complex capability. With only real&lt;br&gt;&amp;gt; argument the usefulness of these new intrinsics&lt;br&gt;&amp;gt; is severely limited.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Are there any plans to extend these intrinsics&lt;br&gt;&amp;gt; to accept complex args?&lt;br&gt;&amp;gt; [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;2213c0ec.1412' title='f2008: why bessel functions of only real arg? '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-22T03:30:39-08:00</published>   <updated>2014-12-22T03:30:39-08:00</updated>   <title>f2008: why bessel functions of only real arg? </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;2213c0ec.1412</id>   <content type='html'>Surprised to see that the new f2008 Bessel&lt;br&gt;functions cannot take complex arguments.&lt;br&gt;If somebody lobbied for these to be put in&lt;br&gt;the standard, they should&apos;ve insisted on&lt;br&gt;full complex capability. With only real&lt;br&gt;argument the usefulness of these new intrinsics&lt;br&gt;is severely limited.&lt;br&gt;&lt;br&gt;Are there any plans to extend these intrinsics&lt;br&gt;to accept complex args?&lt;br&gt;&lt;br&gt;Thanks&lt;br&gt;&lt;br&gt;Anton </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;ad316402.1412' title='Re: Question regarding behavior under assignment '/>   <author>      <name>John Reid</name>   </author>   <published>2014-12-20T11:22:27+00:00</published>   <updated>2014-12-20T11:22:27+00:00</updated>   <title>Re: Question regarding behavior under assignment </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;ad316402.1412</id>   <content type='html'>Tom Clune wrote:&lt;br&gt;&amp;gt; In the program below, I believe that the finally print statement should&lt;br&gt;&amp;gt; return true. I have attempted to change the value of the target of a&lt;br&gt;&amp;gt; pointer through default assignment. For the three compilers that I&lt;br&gt;&amp;gt; have, 2 return .true. for the 2nd print, and one returns .false. for the&lt;br&gt;&amp;gt; 2nd print. Before I submit a bug report, I&#8217;d like to verify that my&lt;br&gt;&amp;gt; expectations on behavior are correct. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d935a228.1412' title='Re: Question regarding behavior under assignment '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-20T01:59:24+00:00</published>   <updated>2014-12-20T01:59:24+00:00</updated>   <title>Re: Question regarding behavior under assignment </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d935a228.1412</id>   <content type='html'>I tried the code with compilers from 4 different vendors and all 4 returned T for the second test. An ordinary assignment should not cause the pointer association of the variable to change.&lt;br&gt;&lt;br&gt;Cheers,&lt;br&gt;Bill&lt;br&gt;&lt;br&gt;On Dec 19, 2014, at 12:21 PM, Tom Clune &amp;lt;Thomas.L.Clune@NASA.GOV&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&gt; In the program below, I believe that the finally print statement should return true. I have attempted to change the value of the target of a pointer through default assignment. For the three compilers that I have, 2 return .true. for the 2nd print, and one returns .false. for the 2nd print. Before [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;c560b349.1412' title='Question regarding behavior under assignment '/>   <author>      <name>Tom Clune</name>   </author>   <published>2014-12-19T17:21:53-05:00</published>   <updated>2014-12-19T17:21:53-05:00</updated>   <title>Question regarding behavior under assignment </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;c560b349.1412</id>   <content type='html'>In the program below, I believe that the finally print statement should return true. I have attempted to change the value of the target of a pointer through default assignment. For the three compilers that I have, 2 return .true. for the 2nd print, and one returns .false. for the 2nd print. Before I submit a bug report, I&#8217;d like to verify that my expectations on behavior are correct. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;ee8c7a09.1412' title='Re: seeking guidance on managing merged f77 and f90 code '/>   <author>      <name>John Harper</name>   </author>   <published>2014-12-04T08:56:16+13:00</published>   <updated>2014-12-04T08:56:16+13:00</updated>   <title>Re: seeking guidance on managing merged f77 and f90 code </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;ee8c7a09.1412</id>   <content type='html'>Nearly but not quite true that &amp;quot;Valid f77 code is valid f90 code (with&lt;br&gt;exception of deprecated features)&amp;quot;. If the f77 code has a function&lt;br&gt;or subroutine with the same name as an f90 intrinsic that wasn&apos;t an f77&lt;br&gt;intrinsic, (SUM for example) then you must specify EXTERNAL SUM if you&lt;br&gt;use an f90 compiler but you may not have had to with an f77 one. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;4a82888d.1412' title='Re: seeking guidance on managing merged f77 and f90 code '/>   <author>      <name>Tom Clune</name>   </author>   <published>2014-12-03T14:29:58-05:00</published>   <updated>2014-12-03T14:29:58-05:00</updated>   <title>Re: seeking guidance on managing merged f77 and f90 code </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;4a82888d.1412</id>   <content type='html'>I would add the following cautionary note: Although modernizing and re-engineering code can be very fun and rewarding, one should first make certain that the effort is warranted. From the limited description, it would seem to be easier and _safer_ to leave the f77 code more-or-less untouched. If updating does make sense, then I strongy encourage you to establish a variety of test cases to ensure that the results are preserved during transformations. Automated tools such as SPAG reduce risk, but changes should still be confirmed. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;825f7456.1412' title='Re: seeking guidance on managing merged f77 and f90 code '/>   <author>      <name>Andres Legarra</name>   </author>   <published>2014-12-03T17:32:37+01:00</published>   <updated>2014-12-03T17:32:37+01:00</updated>   <title>Re: seeking guidance on managing merged f77 and f90 code </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;825f7456.1412</id>   <content type='html'>I would bet for option 2.&lt;br&gt;A judicious choice that I have seen is to encapsulate the f77 code in a&lt;br&gt;module, and create interfaces to the functions in the module, in order to&lt;br&gt;have a simpler syntax when you call the subroutines. So, instead of having&lt;br&gt;&lt;br&gt;call invert_matrix(A,wrk,n,rank,B)&lt;br&gt;&lt;br&gt;you have&lt;br&gt;&lt;br&gt;B=invert(A)&lt;br&gt;&lt;br&gt;A spaghetti subroutine is no big deal if it is standard f77, it works, and&lt;br&gt;one has not to modify it every week. If it works, do not touch it. [...]</content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;9e9fb41e.1412' title='Re: seeking guidance on managing merged f77 and f90 code '/>   <author>      <name>W.J. Metzger</name>   </author>   <published>2014-12-03T17:08:36+01:00</published>   <updated>2014-12-03T17:08:36+01:00</updated>   <title>Re: seeking guidance on managing merged f77 and f90 code </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;9e9fb41e.1412</id>   <content type='html'>For translating f77 spaghetti code to f77 structured code there is a program&lt;br&gt;from Polyhedron. Google on spag f77. If it is a one-off thing (or if you&lt;br&gt;qualify as educational or academic use) the trial version is free.&lt;br&gt;The paid for version also converts to f90. However there are other, free,&lt;br&gt;programs to do this: Google on convert f77 to f90 </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;93ea4969.1412' title='Re: seeking guidance on managing merged f77 and f90 code '/>   <author>      <name>Alois Steindl</name>   </author>   <published>2014-12-03T16:14:45+01:00</published>   <updated>2014-12-03T16:14:45+01:00</updated>   <title>Re: seeking guidance on managing merged f77 and f90 code </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;93ea4969.1412</id>   <content type='html'>Hello,&lt;br&gt;I think, that it is quite impossible to give a solid answer without&lt;br&gt;knowing more details. So I mention just a few thoughts about the issue:&lt;br&gt;How old is the code? Can you understand the semantics? I ask, because I&lt;br&gt;know from my own experience, that really old code can be very hard to&lt;br&gt;understand and convert into useful routines. (I started to learn Fortran&lt;br&gt;40 years ago.) It might be easier to start from scratch.&lt;br&gt;How well structured is the code? Converting a 10k lines spaghetti code&lt;br&gt;to one subroutine doesn&apos;t seem to make sense for me. If [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;8c9a4637.1412' title='seeking guidance on managing merged f77 and f90 code '/>   <author>      <name>bennie blackwell</name>   </author>   <published>2014-12-03T06:59:41-07:00</published>   <updated>2014-12-03T06:59:41-07:00</updated>   <title>seeking guidance on managing merged f77 and f90 code </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;8c9a4637.1412</id>   <content type='html'>I am a FORmula TRANslator (not professional programmer nor computer&lt;br&gt;scientist) faced with the task of taking a legacy F77 code (~10K lines) and&lt;br&gt;turning it into a subroutine that can be called from a to-be-written F90&lt;br&gt;driver code. There are a lot of different way to approach the problem with&lt;br&gt;two extremes possibilities as follows: [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d9216fa.1412' title='Re: TS 18508, N2033 - question on stalled images '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-02T17:03:40+00:00</published>   <updated>2014-12-02T17:03:40+00:00</updated>   <title>Re: TS 18508, N2033 - question on stalled images </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;d9216fa.1412</id>   <content type='html'>On Dec 2, 2014, at 8:22 AM, Tom Clune &amp;lt;Thomas.L.Clune@NASA.GOV&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt; Bill,&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; Regarding your last point:&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; On Dec 2, 2014, at 8:59 AM, Bill Long &amp;lt;longb@cray.com&amp;gt; wrote:&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; &amp;lt;snip&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&gt;&gt; A stalled image is not executing additional statements, at least until the other images get to the END TEAM statement, at which point the stalled image can come back to life. Again, the answer depends on the scope of \\ufffd\\ufffd\\ufffdcommunicate\\ufffd\\ufffd\\ufffd. If other images try to execute a SYNC ALL, for example, the stalled image will not participate. On the other hand, remote reference [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;6113fce7.1412' title='Re: TS 18508, N2033 - question on stalled images '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-02T06:23:20-08:00</published>   <updated>2014-12-02T06:23:20-08:00</updated>   <title>Re: TS 18508, N2033 - question on stalled images </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;6113fce7.1412</id>   <content type='html'>&amp;gt; Operationally, a stalled image is similar to a STOPPED image.&lt;br&gt;&amp;gt; Remote reference and definition still work, but the stalled/stopped&lt;br&gt;&amp;gt; image is not executing program statements, so will not execute&lt;br&gt;&amp;gt; ones that are supposed to be executed collectively,&lt;br&gt;&amp;gt; except for END TEAM (for stalled) or STOP/END PROGRAM (for stopped).&lt;br&gt;&lt;br&gt;That makes sense, thank you. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;7699b826.1412' title='Re: TS 18508, N2033 - question on stalled images '/>   <author>      <name>Tom Clune</name>   </author>   <published>2014-12-02T09:22:45-05:00</published>   <updated>2014-12-02T09:22:45-05:00</updated>   <title>Re: TS 18508, N2033 - question on stalled images </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;7699b826.1412</id>   <content type='html'>Bill,&lt;br&gt;&lt;br&gt;Regarding your last point:&lt;br&gt;&lt;br&gt;On Dec 2, 2014, at 8:59 AM, Bill Long &amp;lt;longb@cray.com&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;lt;snip&amp;gt;&lt;br&gt;&lt;br&gt;&gt; A stalled image is not executing additional statements, at least until the other images get to the END TEAM statement, at which point the stalled image can come back to life. Again, the answer depends on the scope of \\ufffd\\ufffd\\ufffdcommunicate\\ufffd\\ufffd\\ufffd. If other images try to execute a SYNC ALL, for example, the stalled image will not participate. On the other hand, remote reference and definition of variables on a stalled image should succeed, including atomic modifications. Operationally, a stalled image is similar [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;b1055c4d.1412' title='Re: TS 18508, N2033 - question on stalled images '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-02T13:59:48+00:00</published>   <updated>2014-12-02T13:59:48+00:00</updated>   <title>Re: TS 18508, N2033 - question on stalled images </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;b1055c4d.1412</id>   <content type='html'>On Dec 2, 2014, at 3:19 AM, Anton Shterenlikht &amp;lt;mexas@BRIS.AC.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt; I wanted to check whether I understand the&lt;br&gt;&amp;gt; logic of TS 18508 regarding failed and stalled&lt;br&gt;&amp;gt; images.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; My understanding is that trying to communicate&lt;br&gt;&amp;gt; with a failed image will make the invoking&lt;br&gt;&amp;gt; image stalled (sec. 5.9). Is that correct?&lt;br&gt;&amp;gt; [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;45446bf9.1412' title='TS 18508, N2033 - question on stalled images '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-02T01:19:18-08:00</published>   <updated>2014-12-02T01:19:18-08:00</updated>   <title>TS 18508, N2033 - question on stalled images </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;45446bf9.1412</id>   <content type='html'>I wanted to check whether I understand the&lt;br&gt;logic of TS 18508 regarding failed and stalled&lt;br&gt;images.&lt;br&gt;&lt;br&gt;My understanding is that trying to communicate&lt;br&gt;with a failed image will make the invoking&lt;br&gt;image stalled (sec. 5.9). Is that correct?&lt;br&gt;&lt;br&gt;To prevent this one can use e.g. FAILED_IMAGES&lt;br&gt;to know if any images have failed, and then&lt;br&gt;avoid communicating with those (sec. 7.6.14).&lt;br&gt;Is that correct? [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;99c42b05.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-02T00:02:23-08:00</published>   <updated>2014-12-02T00:02:23-08:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;99c42b05.1412</id>   <content type='html'>John, thank you. It&apos;s all clear now.&lt;br&gt;&lt;br&gt;Anton </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;bad6e59d.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-01T20:13:29+00:00</published>   <updated>2014-12-01T20:13:29+00:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;bad6e59d.1412</id>   <content type='html'>On Dec 1, 2014, at 9:13 AM, Anton Shterenlikht &amp;lt;mexas@BRIS.AC.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; The program:&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; use, intrinsic :: iso_fortran_env&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; implicit none&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; integer :: errstat=0&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; sync all ( stat=errstat )&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; if ( errstat .eq. stat_stopped_image) write (*,*) &amp;quot;mumu&amp;quot;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; end&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; My understanding from MFE sec. 19.13.6&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; and FDIS (10-007r1) sec 8.5.7 par 2 is that&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; the correct behaviour of this program is:&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 1. Image 1 initiates normal termination&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 2. At &amp;quot;sync all (stat=errstat)&amp;quot; errstat&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; becomes defined with &amp;quot;stat_stopped_image&amp;quot;&lt;br&gt; [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;647fe8d2.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>John Reid</name>   </author>   <published>2014-12-01T17:43:11+00:00</published>   <updated>2014-12-01T17:43:11+00:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;647fe8d2.1412</id>   <content type='html'>Anton Shterenlikht wrote:&lt;br&gt;&amp;gt;&amp;gt; From: John Reid &amp;lt;John.Reid@STFC.AC.UK&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; Subject: Re: sync and stat_stopped_image clarification&lt;br&gt;&amp;gt;&amp;gt; To: COMP-FORTRAN-90@JISCMAIL.AC.UK&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; Anton Shterenlikht wrote:&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; I think I might have asked this question about a year ago.&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; There have been at least one new version of both Cray&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; and Intel compilers since then.&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; I&apos;m still not sure what behaviour is correct.&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; The program:&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; use, intrinsic :: iso_fortran_env&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; implicit none&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; integer :: errstat=0&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; sync all ( stat=errstat )&lt;br&gt;&gt;&gt;&gt; if ( errstat .eq. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;7a483e3c.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>Lionel, Steve</name>   </author>   <published>2014-12-01T15:13:26+00:00</published>   <updated>2014-12-01T15:13:26+00:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;7a483e3c.1412</id>   <content type='html'>Bill Long writes:&lt;br&gt;&lt;br&gt;&amp;gt;&amp;gt; My understanding from MFE sec. 19.13.6 and FDIS (10-007r1) sec 8.5.7&lt;br&gt;&amp;gt;&amp;gt; par 2 is that the correct behaviour of this program is:&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; 1. Image 1 initiates normal termination 2. At &amp;quot;sync all&lt;br&gt;&amp;gt;&amp;gt; (stat=errstat)&amp;quot; errstat&lt;br&gt;&amp;gt;&amp;gt; becomes defined with &amp;quot;stat_stopped_image&amp;quot;&lt;br&gt;&amp;gt;&amp;gt; on all images, but image 1.&lt;br&gt;&amp;gt;&amp;gt; 3. Hence all images, but image 1, must output &amp;quot;mumu&amp;quot;. [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;c55b81eb.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-01T07:13:13-08:00</published>   <updated>2014-12-01T07:13:13-08:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;c55b81eb.1412</id>   <content type='html'>&amp;gt;&amp;gt;&amp;gt; The program:&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; use, intrinsic :: iso_fortran_env&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; implicit none&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; integer :: errstat=0&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; sync all ( stat=errstat )&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; if ( errstat .eq. stat_stopped_image) write (*,*) &amp;quot;mumu&amp;quot;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; end&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; My understanding from MFE sec. 19.13.6&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; and FDIS (10-007r1) sec 8.5.7 par 2 is that&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; the correct behaviour of this program is:&lt;br&gt;&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; 1. Image 1 initiates normal termination&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; 2. At &amp;quot;sync all (stat=errstat)&amp;quot; errstat&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; becomes defined with &amp;quot;stat_stopped_image&amp;quot;&lt;br&gt;&amp;gt;&amp;gt;&amp;gt; on all images, but image 1.&lt;br&gt;&gt;&gt;&gt; 3. Hence all [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;441f8293.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-01T06:59:07-08:00</published>   <updated>2014-12-01T06:59:07-08:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;441f8293.1412</id>   <content type='html'>&amp;gt;From: John Reid &amp;lt;John.Reid@STFC.AC.UK&amp;gt;&lt;br&gt;&amp;gt;Subject: Re: sync and stat_stopped_image clarification&lt;br&gt;&amp;gt;To: COMP-FORTRAN-90@JISCMAIL.AC.UK&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;Anton Shterenlikht wrote:&lt;br&gt;&amp;gt;&amp;gt; I think I might have asked this question about a year ago.&lt;br&gt;&amp;gt;&amp;gt; There have been at least one new version of both Cray&lt;br&gt;&amp;gt;&amp;gt; and Intel compilers since then.&lt;br&gt;&amp;gt;&amp;gt; I&apos;m still not sure what behaviour is correct.&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; The program:&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; use, intrinsic :: iso_fortran_env&lt;br&gt;&amp;gt;&amp;gt; implicit none&lt;br&gt;&amp;gt;&amp;gt; integer :: errstat=0&lt;br&gt;&amp;gt;&amp;gt; if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;&amp;gt;&amp;gt; sync all ( stat=errstat )&lt;br&gt;&amp;gt;&amp;gt; if ( errstat .eq. stat_stopped_image) write (*,*) &amp;quot;mumu&amp;quot;&lt;br&gt;&amp;gt;&amp;gt; end&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt; [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;88948b7d.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>Bill Long</name>   </author>   <published>2014-12-01T14:35:08+00:00</published>   <updated>2014-12-01T14:35:08+00:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;88948b7d.1412</id>   <content type='html'>On Dec 1, 2014, at 7:56 AM, John Reid &amp;lt;John.Reid@STFC.AC.UK&amp;gt; wrote:&lt;br&gt;&lt;br&gt;&amp;gt; Anton Shterenlikht wrote:&lt;br&gt;&amp;gt;&amp;gt; I think I might have asked this question about a year ago.&lt;br&gt;&amp;gt;&amp;gt; There have been at least one new version of both Cray&lt;br&gt;&amp;gt;&amp;gt; and Intel compilers since then.&lt;br&gt;&amp;gt;&amp;gt; I&apos;m still not sure what behaviour is correct.&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; The program:&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt; use, intrinsic :: iso_fortran_env&lt;br&gt;&amp;gt;&amp;gt; implicit none&lt;br&gt;&amp;gt;&amp;gt; integer :: errstat=0&lt;br&gt;&amp;gt;&amp;gt; if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;&amp;gt;&amp;gt; sync all ( stat=errstat )&lt;br&gt;&amp;gt;&amp;gt; if ( errstat .eq. stat_stopped_image) write (*,*) &amp;quot;mumu&amp;quot;&lt;br&gt;&amp;gt;&amp;gt; end&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt;&amp;gt;&amp;gt;&lt;br&gt; [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;4dd6cac2.1412' title='Re: sync and stat_stopped_image clarification '/>   <author>      <name>John Reid</name>   </author>   <published>2014-12-01T13:56:04+00:00</published>   <updated>2014-12-01T13:56:04+00:00</updated>   <title>Re: sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;4dd6cac2.1412</id>   <content type='html'>Anton Shterenlikht wrote:&lt;br&gt;&amp;gt; I think I might have asked this question about a year ago.&lt;br&gt;&amp;gt; There have been at least one new version of both Cray&lt;br&gt;&amp;gt; and Intel compilers since then.&lt;br&gt;&amp;gt; I&apos;m still not sure what behaviour is correct.&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; The program:&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; use, intrinsic :: iso_fortran_env&lt;br&gt;&amp;gt; implicit none&lt;br&gt;&amp;gt; integer :: errstat=0&lt;br&gt;&amp;gt; if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;&amp;gt; sync all ( stat=errstat )&lt;br&gt;&amp;gt; if ( errstat .eq. stat_stopped_image) write (*,*) &amp;quot;mumu&amp;quot;&lt;br&gt;&amp;gt; end&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt;&lt;br&gt;&amp;gt; My understanding from MFE sec. 19.13.6&lt;br&gt;&gt; and FDIS (10-007r1) sec [...] </content> </entry>  <entry xmlns='http://www.w3.org/2005/Atom'>   <link rel='alternate' href='https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;bfcb87a2.1412' title='sync and stat_stopped_image clarification '/>   <author>      <name>Anton Shterenlikht</name>   </author>   <published>2014-12-01T05:25:48-08:00</published>   <updated>2014-12-01T05:25:48-08:00</updated>   <title>sync and stat_stopped_image clarification </title>   <id>https://www.jiscmail.ac.uk:443/cgi-bin/webadmin?A2=COMP-FORTRAN-90;bfcb87a2.1412</id>   <content type='html'>I think I might have asked this question about a year ago.&lt;br&gt;There have been at least one new version of both Cray&lt;br&gt;and Intel compilers since then.&lt;br&gt;I&apos;m still not sure what behaviour is correct.&lt;br&gt;&lt;br&gt;The program:&lt;br&gt;&lt;br&gt;use, intrinsic :: iso_fortran_env&lt;br&gt;implicit none&lt;br&gt;integer :: errstat=0&lt;br&gt;if ( this_image() .eq. 1 ) stop &amp;quot;kuku&amp;quot;&lt;br&gt;sync all ( stat=errstat )&lt;br&gt;if ( errstat .eq. stat_stopped_image) write (*,*) &amp;quot;mumu&amp;quot;&lt;br&gt;end [...] </content> </entry>  </feed> ", 
    "identity": {
        "subtype": "", 
        "is_error": false, 
        "version": "", 
        "protocol": "", 
        "language": "", 
        "service": "", 
        "has_dataset": false, 
        "has_metadata": false
    }, 
    "digest": "2e7376ccc836da74a732409271147a15", 
    "source_url": "https://www.jiscmail.ac.uk/cgi-bin/webadmin?RSS&L=COMP-FORTRAN-90&v=ATOM1.0"
}