{
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <iCalendar xmlns:xCal=\"urn:ietf:params:xml:ns:xcal\" xmlns:pentabarf=\"http://pentabarf.org\">   <vcalendar>     <version>2.0</version>     <prodid>-//Pentabarf//Schedule 1.0//EN</prodid>     <x-wr-caldesc/>     <x-wr-calname>Schedule for sessions at </x-wr-calname>     <vevent>       <method>PUBLISH</method>       <uid>2756@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2756</pentabarf:event-id>       <pentabarf:event-slug>allwinner_upstream</pentabarf:event-slug>       <pentabarf:event-tag>allwinner_upstream</pentabarf:event-tag>       <pentabarf:title>Upstream Allwinner ARM SoC (A10 / sunxi) support status</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 10:30:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 10:55:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150131T103000</dtstart>       <dtend>20150131T105500</dtend>       <duration>00:25:00:00</duration>       <summary>Upstream Allwinner ARM SoC (A10 / sunxi) support status</summary>       <description>&lt;p&gt;What is the current status of Allwinner support in upstream u-boot and the kernel, which SoCs are supported, and which features (sound, video, etc.) are supported ?&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/allwinner_upstream/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Hans de Goede</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2975@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2975</pentabarf:event-id>       <pentabarf:event-slug>freertos</pentabarf:event-slug>       <pentabarf:event-tag>freertos</pentabarf:event-tag>       <pentabarf:title>FreeRTOS introduction</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 11:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 11:25:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150131T110000</dtstart>       <dtend>20150131T112500</dtend>       <duration>00:25:00:00</duration>       <summary>FreeRTOS introduction</summary>       <description>&lt;p&gt;Not all free operating systems are feature-full POSIX systems. FreeRTOS is a minimal operating system which is designed to run on microcontrollers, and provide real-time scheduling. It is used in industrial automation and automotive.&lt;/p&gt;  &lt;p&gt;A brief introduction to FreeRTOS, depending on audience preference, will be followed by either a hands-on workshop using PCs, or a demonstration on a board. The workshop includes how to get started, what can be done with it, and what type of features and pitfalls to expect from FreeRTOS.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/freertos/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Atilla Filiz</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3004@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3004</pentabarf:event-id>       <pentabarf:event-slug>car_hypervisor</pentabarf:event-slug>       <pentabarf:event-tag>car_hypervisor</pentabarf:event-tag>       <pentabarf:title>Xvisor: An open-source, lightweight, embedded hypervisor for your car</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 11:30:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 11:55:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150131T113000</dtstart>       <dtend>20150131T115500</dtend>       <duration>00:25:00:00</duration>       <summary>Xvisor: An open-source, lightweight, embedded hypervisor for your car</summary>       <description>&lt;p&gt;As ADAS and infotainment require more electronics, using an hypervisor is a solution to gather multiple boards into one. Xvisor is an open source lightweight hypervisor for embedded systems that perfectly fits the needs of the automative industry. It is a complete monolithic type-1 hypervisor with full virtualization and paravirtualisation support, showing better performances than KVM.&lt;/p&gt;  &lt;p&gt;We, OpenWide and the Institute for Technological Research SystemX, are working on its port on i.MX6 boards.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/car_hypervisor/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Jimmy Durand Wesolowski</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2641@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2641</pentabarf:event-id>       <pentabarf:event-slug>fish_fly</pentabarf:event-slug>       <pentabarf:event-tag>fish_fly</pentabarf:event-tag>       <pentabarf:title>Teaching Fish to Fly</pentabarf:title>       <pentabarf:subtitle>Embedded platforms take to the air.</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 12:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 12:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150131T120000</dtstart>       <dtend>20150131T124500</dtend>       <duration>00:45:00:00</duration>       <summary>Teaching Fish to Fly- Embedded platforms take to the air.</summary>       <description>&lt;p&gt;In 2013, at the Embedded Linux Conference in Europe in Edinburgh, there was a race between a dog and a blimp. It was said that despite the dogs win, that the blimp had participated in the miracle of flight. In 2014 we intend to show that the brains of that dog can be transplanted and that it too, can participate in the miracle of flight. The talk is mainly targeting taking an off the shelf embedded platform, MinnowBoard Max, and it's use in UAVs, specifically quad-copters. With the ability to do real time computer vision, as well as various GPIO capabilities we'll explore the directions that significantly more autonomous UAVs can take with Linux and embedded platforms using, mostly, off the shelf components.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/fish_fly/</url>       <location>UB2.252A (Lameere)</location>       <attendee>John 'Warthog9' Hawley</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3035@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3035</pentabarf:event-id>       <pentabarf:event-slug>sailfishos</pentabarf:event-slug>       <pentabarf:event-tag>sailfishos</pentabarf:event-tag>       <pentabarf:title>Recycle your Android devices for anything : run real Linux on them</pentabarf:title>       <pentabarf:subtitle>Routing around the breakage of closed binary blobs</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 13:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 13:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150131T130000</dtstart>       <dtend>20150131T134500</dtend>       <duration>00:45:00:00</duration>       <summary>Recycle your Android devices for anything : run real Linux on them- Routing around the breakage of closed binary blobs</summary>       <description>&lt;p&gt;Our world is full of small powerful devices; but most of them run Android.&lt;/p&gt;  &lt;p&gt;I'll show how Mer, SailfishOS and HADK lets us reuse them as full blown linux systems - with touchscreens, 3D graphics, modem, wifi, usb...&lt;/p&gt;  &lt;p&gt;At the heart is libhybris - talked about at FOSDEM; found inside the Ubuntu Touch distro, invented and developed at Mer &amp;amp; Jolla where it's used in the Jolla phone (ARM) and soon the Jolla tablet (x86).&lt;/p&gt;  &lt;p&gt;Together we can route around the breakage of closed binary blobs and work on FOSS on these devices.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/sailfishos/</url>       <location>UB2.252A (Lameere)</location>       <attendee>David Greaves</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2646@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2646</pentabarf:event-id>       <pentabarf:event-slug>hack_your_camera</pentabarf:event-slug>       <pentabarf:event-tag>hack_your_camera</pentabarf:event-tag>       <pentabarf:title>How to program your camera!</pentabarf:title>       <pentabarf:subtitle>An introduction to CHDK</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 14:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 14:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150131T140000</dtstart>       <dtend>20150131T144500</dtend>       <duration>00:45:00:00</duration>       <summary>How to program your camera!- An introduction to CHDK</summary>       <description>&lt;p&gt;Digital cameras provide almost every feature you could want. But if they don't, you are forced to upgrade or go without. CHDK is a project which allows you to program new functionality to the majority of Canon cameras, in either C, Lua, or Basic. The talk features background on the project, code, tools, and the methods of compiling and introducing a new firmware into the camera.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/hack_your_camera/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Steven Goodwin</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3186@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3186</pentabarf:event-id>       <pentabarf:event-slug>embedded_freedom</pentabarf:event-slug>       <pentabarf:event-tag>embedded_freedom</pentabarf:event-tag>       <pentabarf:title>Embedded  freedom roundtable</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 15:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 15:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150131T150000</dtstart>       <dtend>20150131T154500</dtend>       <duration>00:45:00:00</duration>       <summary>Embedded  freedom roundtable</summary>       <description>&lt;p&gt;GNU and Linux are now embedded on more kinds of hardware than ever, but often only by requiring proprietary bits. Plus, we now have tablets and phones loaded with nonfree software on top of a free core -- how do we get the freedom we all want, and how do we create the market for that? Roundtable discussion.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/embedded_freedom/</url>       <location>UB2.252A (Lameere)</location>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2738@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2738</pentabarf:event-id>       <pentabarf:event-slug>arm_perf</pentabarf:event-slug>       <pentabarf:event-tag>arm_perf</pentabarf:event-tag>       <pentabarf:title>perf status on ARM and ARM64</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 16:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 16:25:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150131T160000</dtstart>       <dtend>20150131T162500</dtend>       <duration>00:25:00:00</duration>       <summary>perf status on ARM and ARM64</summary>       <description>&lt;p&gt;Kernel profiling tools status on ARM and ARM64: - perf status, - ARM and ARM64 support, - callchain unwinding mechanisms and support, - patches status: merged, pending, in development, - links to discussions (LKML) and patches.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/arm_perf/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Jean Pihet</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3098@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3098</pentabarf:event-id>       <pentabarf:event-slug>medical_monitoring</pentabarf:event-slug>       <pentabarf:event-tag>medical_monitoring</pentabarf:event-tag>       <pentabarf:title>Building a medical monitoring connected device with Yocto</pentabarf:title>       <pentabarf:subtitle>Professional OS with yocto</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 16:30:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 16:55:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150131T163000</dtstart>       <dtend>20150131T165500</dtend>       <duration>00:25:00:00</duration>       <summary>Building a medical monitoring connected device with Yocto- Professional OS with yocto</summary>       <description>&lt;p&gt;Building a medical device requires to follow certain rules specially when health care depend on it. The presentation will explain how Yocto help us in Kaptalia to solve this issue. In particular we will focus on fast boot, update with unskilled user base, Bluetooth Low Energy, security and data privacy.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/medical_monitoring/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Adrien Renault</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3028@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3028</pentabarf:event-id>       <pentabarf:event-slug>lava_bugs</pentabarf:event-slug>       <pentabarf:event-tag>lava_bugs</pentabarf:event-tag>       <pentabarf:title>Using LAVA for bisecting bugs</pentabarf:title>       <pentabarf:subtitle>The Linaro Automated Validation Architecture</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 17:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 17:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150131T170000</dtstart>       <dtend>20150131T174500</dtend>       <duration>00:45:00:00</duration>       <summary>Using LAVA for bisecting bugs- The Linaro Automated Validation Architecture</summary>       <description>&lt;p&gt;LAVA is a python service created by Linaro for testing software on hardware which accepts test jobs to perform on selected hardware to provide a black box to continuous integration tests. Bisecting is a technique for finding commit in version control system that broke the software. Git provides the powerful \"git bisect\" subcommand for this purposes. In this talk we give and introduction to LAVA and explain howto combine LAVA and git bisect to automatically find offending commits in the Linux kernel.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/lava_bugs/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Riku Voipio</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3023@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3023</pentabarf:event-id>       <pentabarf:event-slug>diy_dvr</pentabarf:event-slug>       <pentabarf:event-tag>diy_dvr</pentabarf:event-tag>       <pentabarf:title>How to record all TV</pentabarf:title>       <pentabarf:subtitle>Creating a 30 channel DVR</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-01-31 18:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-01-31 18:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150131T180000</dtstart>       <dtend>20150131T184500</dtend>       <duration>00:45:00:00</duration>       <summary>How to record all TV- Creating a 30 channel DVR</summary>       <description>&lt;p&gt;Prospero Technologies has made a Linux based Digital Video Recorder which constantly records all UK broadcast TV so that the consumer no longer needs to schedule recordings. This will be a talk on the technologies used to achieve this, the open source software on the consumer device and how you can build your own 30 channel DVR.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/diy_dvr/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Philip Downer</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2749@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2749</pentabarf:event-id>       <pentabarf:event-slug>tizen_iot_security</pentabarf:event-slug>       <pentabarf:event-tag>tizen_iot_security</pentabarf:event-tag>       <pentabarf:title>Adding advance Connectivity and Security to an embedded project</pentabarf:title>       <pentabarf:subtitle>Tizen-meta as a security and Connectivity layers for Yocto</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 10:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 10:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150201T100000</dtstart>       <dtend>20150201T104500</dtend>       <duration>00:45:00:00</duration>       <summary>Adding advance Connectivity and Security to an embedded project- Tizen-meta as a security and Connectivity layers for Yocto</summary>       <description>&lt;p&gt;More and more embedded projects require support for advance connectivity. With it, comes the requirement to enforce a better security as well as private data protection. Using the layer model of Yocto, we show how we can extract from a complex project such as Tizen, advance connectivity and security and apply it to any embedded project.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/tizen_iot_security/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Dominig ar Foll</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3052@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3052</pentabarf:event-id>       <pentabarf:event-slug>8bit_compiler</pentabarf:event-slug>       <pentabarf:event-tag>8bit_compiler</pentabarf:event-tag>       <pentabarf:title>Small Device C Compiler</pentabarf:title>       <pentabarf:subtitle>An optimizing standard C compiler for 8-bit architectures</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 11:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 11:25:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150201T110000</dtstart>       <dtend>20150201T112500</dtend>       <duration>00:25:00:00</duration>       <summary>Small Device C Compiler- An optimizing standard C compiler for 8-bit architectures</summary>       <description>&lt;p&gt;SDCC is a standard (ANSI C89, ISO C90, ISO C99, ISO C11) C compiler targeting 8-bit architectures (MCS51, DS80C390, Z80, Z180, Rabbit 2000, Rabbit 3000A, GBZ80, TLCS-90, HC08, S08, STM8, PIC). It works on many host systems (Linux, Windows, Mac OS, Solaris, NetBSD, FreeBSD, ...). The talk starts with a view on SDCC from a user perspective - standard compliance, targets. There is a short interlude on how the SDCC project is set up. The second part is about some of SDCC's unusual optimizations currently not found in any other compiler, in particular an optimal register allocator and bytewise register allocation.&lt;/p&gt;  &lt;p&gt;The presentation will be held jointly with sdcc developer Maarten Brock.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/8bit_compiler/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Philipp Klaus Krause</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3105@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3105</pentabarf:event-id>       <pentabarf:event-slug>uc_qtcreator</pentabarf:event-slug>       <pentabarf:event-tag>uc_qtcreator</pentabarf:event-tag>       <pentabarf:title>Update on QtCreator for \\ufffd\\ufffdC</pentabarf:title>       <pentabarf:subtitle>On the way to the best C/C++ embedded IDE.</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 11:30:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 11:55:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150201T113000</dtstart>       <dtend>20150201T115500</dtend>       <duration>00:25:00:00</duration>       <summary>Update on QtCreator for \\ufffd\\ufffdC- On the way to the best C/C++ embedded IDE.</summary>       <description>&lt;p&gt;This is an update on the first talk about QtCreator for embedded devices. There will be an short overview and then the presentation of the improvements from the last year:&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/uc_qtcreator/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Tim Sander</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3103@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3103</pentabarf:event-id>       <pentabarf:event-slug>backporting_drivers</pentabarf:event-slug>       <pentabarf:event-tag>backporting_drivers</pentabarf:event-tag>       <pentabarf:title>Backporting Linux mainline drivers</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 12:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 12:25:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150201T120000</dtstart>       <dtend>20150201T122500</dtend>       <duration>00:25:00:00</duration>       <summary>Backporting Linux mainline drivers</summary>       <description>&lt;p&gt;This talk will give an overview over the Linux backports project and how to use it. The Linux backports project makes it possible to use a driver from a recent Linux mainline kernel with an older kernel version.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/backporting_drivers/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Hauke Mehrtens</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2745@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2745</pentabarf:event-id>       <pentabarf:event-slug>embedded_multiuser</pentabarf:event-slug>       <pentabarf:event-tag>embedded_multiuser</pentabarf:event-tag>       <pentabarf:title>Multi User support in an embedded secured environment</pentabarf:title>       <pentabarf:subtitle>Pratical return of experience from Tizen 3 in Automotive</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 12:30:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 12:55:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150201T123000</dtstart>       <dtend>20150201T125500</dtend>       <duration>00:25:00:00</duration>       <summary>Multi User support in an embedded secured environment- Pratical return of experience from Tizen 3 in Automotive</summary>       <description>&lt;p&gt;The multi-user support is a new feature of Tizen 3 which aims to enable multiple profile in connected devices while enabling a strict application containment. This new feature responds to a secured multi-seat context as Tizen IVI (In-Vehicle Infotainment) project.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/embedded_multiuser/</url>       <location>UB2.252A (Lameere)</location>       <attendee>K\\ufffd\\ufffdvin Thierry</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2681@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2681</pentabarf:event-id>       <pentabarf:event-slug>curl_device</pentabarf:event-slug>       <pentabarf:event-tag>curl_device</pentabarf:event-tag>       <pentabarf:title>Internet all the things - using curl in your device</pentabarf:title>       <pentabarf:subtitle>everyone uses curl - how did this happen and how do you use it?</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 13:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 13:25:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150201T130000</dtstart>       <dtend>20150201T132500</dtend>       <duration>00:25:00:00</duration>       <summary>Internet all the things - using curl in your device- everyone uses curl - how did this happen and how do you use it?</summary>       <description>&lt;p&gt;libcurl is the world's most used and most popular internet transfer library, already used in every imaginable sort of embedded device out there. How did this happen and how do you use libcurl to transfer data to or from your device?&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/curl_device/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Daniel Stenberg</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2766@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2766</pentabarf:event-id>       <pentabarf:event-slug>open_hw_tizen</pentabarf:event-slug>       <pentabarf:event-tag>open_hw_tizen</pentabarf:event-tag>       <pentabarf:title>Porting Tizen to open source hardware devices</pentabarf:title>       <pentabarf:subtitle>DIY open source hardware devices with open source software</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 13:30:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 13:55:00 +0100</pentabarf:end>       <pentabarf:duration>00:25:00:00</pentabarf:duration>       <dtstart>20150201T133000</dtstart>       <dtend>20150201T135500</dtend>       <duration>00:25:00:00</duration>       <summary>Porting Tizen to open source hardware devices- DIY open source hardware devices with open source software</summary>       <description>&lt;p&gt;This presentation will reveal the process of porting Tizen:Common to open source hardware developer boards with SoC manufactured by Allwinner, Rockchip or Intel such as OLinuXino, Radxa Rock, Minnowboard. The following topics will be covered: - Building Tizen ARMv7 and x86 images from scratch, - Adapting the Linux kernel, bootloader and Tizen:Common to popular single board computers, - Do it yourself (DIY) open-source hardware Tizen tablet or laptop, - Sharing knowledge and experience of the community.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/open_hw_tizen/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Phil Coval (rzr)</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>3066@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>3066</pentabarf:event-id>       <pentabarf:event-slug>replicant_embedded_freedom</pentabarf:event-slug>       <pentabarf:event-tag>replicant_embedded_freedom</pentabarf:event-tag>       <pentabarf:title>Reached milestones and ongoing development on Replicant</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 14:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 14:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150201T140000</dtstart>       <dtend>20150201T144500</dtend>       <duration>00:45:00:00</duration>       <summary>Reached milestones and ongoing development on Replicant</summary>       <description>&lt;p&gt;Replicant was started as a pragmatic way to achieve software freedom on mobile devices, as a fully free version of Android. Over the years, support was added for a dozen of different mainstream devices. However, most of these are severely flawed when it comes to software freedom and privacy/security. Thus, it was decided to focus the development effort on a few specific devices that perform better than others from those perspectives, instead of trying to catch up with the latest mainstream devices.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/replicant_embedded_freedom/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Paul Kocialkowski</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2689@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2689</pentabarf:event-id>       <pentabarf:event-slug>starting_yocto</pentabarf:event-slug>       <pentabarf:event-tag>starting_yocto</pentabarf:event-tag>       <pentabarf:title>Starting with the Yocto Project</pentabarf:title>       <pentabarf:subtitle/>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 15:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 15:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150201T150000</dtstart>       <dtend>20150201T154500</dtend>       <duration>00:45:00:00</duration>       <summary>Starting with the Yocto Project</summary>       <description>&lt;p&gt;Yocto has an alleged steep learning curve. It can be a challenge for modules and evaluation board manufacturers to add support for their devices in Yocto as they don't necessarily have a software background. This talk will highlight the steps required, techniques and good practices to create a well integrated machine configuration allowing to build images using the Yocto Linux build system. The Crystalfontz support from meta-fsl-arm-extra will be used to illustrate the talk.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/starting_yocto/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Alexandre Belloni</attendee>     </vevent>     <vevent>       <method>PUBLISH</method>       <uid>2803@FOSDEM15@pentabarf.org</uid>       <pentabarf:event-id>2803</pentabarf:event-id>       <pentabarf:event-slug>bitbox_game_console</pentabarf:event-slug>       <pentabarf:event-tag>bitbox_game_console</pentabarf:event-tag>       <pentabarf:title>the bitbox console</pentabarf:title>       <pentabarf:subtitle>making of a small, open &amp; DIY ARM game machine</pentabarf:subtitle>       <pentabarf:language>en</pentabarf:language>       <pentabarf:language-code>en_US</pentabarf:language-code>       <pentabarf:track>Embedded</pentabarf:track>       <pentabarf:start>2015-02-01 16:00:00 +0100</pentabarf:start>       <pentabarf:end>2015-02-01 16:45:00 +0100</pentabarf:end>       <pentabarf:duration>00:45:00:00</pentabarf:duration>       <dtstart>20150201T160000</dtstart>       <dtend>20150201T164500</dtend>       <duration>00:45:00:00</duration>       <summary>the bitbox console- making of a small, open &amp; DIY ARM game machine</summary>       <description>&lt;p&gt;The bitbox console is a small open hardware &amp;amp; open source game console. I will present the rationale behind it and the current status of the project, detail the hardware conception and particularly video signal generation from a cortex-m4 chip with no video subsystem. I will then proceed to show the different elements of the software stack : kernel, video engines, the boot loader and, finally, current programs and games, including a Gameboy emulator and a full motion video player.&lt;/p&gt;</description>       <class>PUBLIC</class>       <status>CONFIRMED</status>       <categories>Embedded</categories>       <url>https:/fosdem.org/2015/schedule/2015/schedule/event/bitbox_game_console/</url>       <location>UB2.252A (Lameere)</location>       <attendee>Xavier Moulet</attendee>     </vevent>   </vcalendar> </iCalendar>  ", 
    "identity": {
        "subtype": "", 
        "is_error": false, 
        "version": "", 
        "protocol": "", 
        "language": "", 
        "service": "", 
        "has_dataset": false, 
        "has_metadata": false
    }, 
    "digest": "6b27f4981f28f440af3cffb905fe68ad", 
    "source_url": "https://fosdem.org/2015/schedule/track/embedded.xcs"
}