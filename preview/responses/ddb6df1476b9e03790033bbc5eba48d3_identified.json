{
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><?xml-stylesheet type=\"text/xsl\" href=\"xsl/oaitohtml.xsl\"?><OAI-PMH xmlns=\"http://www.openarchives.org/OAI/2.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/ http://www.openarchives.org/OAI/2.0/OAI-PMH.xsd\"><responseDate>2015-03-04T14:51:43Z</responseDate><request from=\"2011-06-01T00:00:00Z\" metadataPrefix=\"oai_dc\" verb=\"ListRecords\">http://oai.datacite.org/oai</request><ListRecords> <record><header><identifier>oai:oai.datacite.org:32153</identifier><datestamp>2011-06-08T08:57:11Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.WDCC</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Climate Simulation with CLM, Climate of the 20th Century run no.3, Data Stream 3: European region MPI-M/MaD</dc:title>    <dc:creator>Lautenschlager, Michael</dc:creator>    <dc:creator>Keuler, Klaus</dc:creator>    <dc:creator>Wunram, Claudia</dc:creator>    <dc:creator>Keup-Thiel, Elke</dc:creator>    <dc:creator>Schubert, Martina</dc:creator>    <dc:creator>Will, Andreas</dc:creator>    <dc:creator>Rockel, Burkhardt</dc:creator>    <dc:creator>Boehm, Uwe</dc:creator>    <dc:publisher>World Data Center for Climate (WDCC)</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.1594/WDCC/CLM_C20_3_D3</dc:identifier>    <dc:identifier>urn:nbn:de:tib-10.1594/WDCC/CLM_C20_3_D36</dc:identifier>    <dc:subject>Climate</dc:subject>    <dc:description>Abstract</dc:description>    <dc:description>Project: CLM regional climate model runs forced by the global IPCC scenario runs These regional climate simulations have been funded by the BMBF and computed at DKRZ by the group \"Model and Data\" of MPI-M, Hamburg, in close cooperation with BTU Cottbus, GKSS Geesthacht and PIK Potsdam. Serving as community model, the climate version of the local model (CLM) of the DWD was used to simulate the regional climate of the 20th century (1960-2000) and 21st century (2001-2100) in Europe. The regional model runs are forced by the global IPCC scenario runs (http://www.grida.no/climate/ipcc/emission/index.htm ) to explore future developments in the European climate on a regional scale. CLM (see http://clm.gkss.de ) was run in non hydrostatic mode with 0.165 degree horizontal grid resolution and was forced 6 hourly by the output of the global climate model runs with ECHAM5/MPIOM. The climate of the 20th century was simulated by three 20th century realization runs, set off at different initialization times. The climate of the 21st century was modeled with respect to two IPCC-climate scenarios (A1B and B1) with different assumptions regarding the development of global greenhouse gas concentrations. For storage in and download from this data base, the data has been transformed into time series of single model variables and is provided in two different data streams (referenced as \"data stream 2\" and \"data stream 3\"). Data stream 2 is given on a rotated grid with 0.165 deg. spatial resolution (rotated coordinates). Data stream 3 is projected onto a non-rotated grid with 0.2 deg. spatial resolution (usual geographical coordinates). For the data transformation between the respective grids the cdo-routines have been used. For the original model output (referenced as \"data stream 0\" and \"data stream 1\") please contact model(at)dkrz.de for further information. See http://sga.wdc-climate.de for more details on CLM simulations in the context of the BMBF funding priority \"klimazwei\", some useful information on handling climate model data and the data access regulations. Summary: The experiment CLM_C20_3_D3 contains European regional climate simulations of the years 1960-2000 on a regular geographical grid. The data are generated during post processing of the corresponding data stream 2 experiment (CLM_C20_3_D2) of regional climate model runs (CLM non hydrostatic, see http://clm.gkss.de ). The simulations of the 20th century (1960-2000) have been forced by the third (_3_) run of the global 20th century climate (EH5-T63L31_OM-GR1.5L40_20C_3_6H) with observed anthropogenic forcing. In data stream 3 (_D3) the output variables of CLM data stream 2 and some additionally derived parameters are stored as time series on a regular grid with a horizontal spacing of 0.2 degree. The model parameters have been transformed onto the regular geographical grid by the CDO routines. Please note, that none of the variables has been corrected for topographical differences between the two grids. The model domain of data stream 3 covers the European region starting at 34.6/-10.6 (lat/lon, centre of lower left grid box) with an increment of 0.2 degree. The number of grid points is 177/238 (lat/lon). For some model variables and additionally derived parameters some statistics on daily, monthly or yearly basis are available. See also http://sga.wdc-climate.de for a list of available parameters. Please contact sga\"at\"dkrz.de for data request details. See http://sga.wdc-climate.de for more details on CLM simulations in the context of the BMBF funding priority \"klimazwei\", some useful information on handling climate model data and the data access regulations. The output format is netCDF Experiment with CLM 2.4.11 on NEC-SX6(hurrikan) raw data: hpss:/dxul/ut/k/k204095/prism/experiments/C20_3</dc:description>    <dc:contributor>Lautenschlager, Michael</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Dataset</dc:type>    <dc:type>Digital</dc:type>    <dc:format>2302106804800 Bytes</dc:format>    <dc:format>NetCDF</dc:format>    <dc:rights>Open access data at least for academic use.</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32200</identifier><datestamp>2011-06-20T08:12:41Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Online Privacy: Towards Informational Self-Determination on the Internet (Dagstuhl Perspectives Workshop 11061)</dc:title>    <dc:creator>Fischer-H\\ufffd\\ufffdbner, Simone</dc:creator>    <dc:creator>Hoofnagle, Chris</dc:creator>    <dc:creator>Rannenberg, Kai</dc:creator>    <dc:creator>Waidner, Michael</dc:creator>    <dc:creator>Krontiris, Ioannis</dc:creator>    <dc:creator>Marh\\ufffd\\ufffdfer, Michael</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.2.1</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   The Dagstuhl Perspectives Workshop \"Online Privacy: Towards Informational Self-Determination on the Internet\" (11061)                 has been held in February 6-11, 2011 at Schloss Dagstuhl. 30 participants from academia, public sector, and industry                  have identified the current status-of-the-art of and challenges for online privacy as well as derived recommendations                  for improving online privacy. Whereas the  Dagstuhl Manifesto of this workshop concludes the results of the working                  groups and panel discussions, this article presents the talks of this workshop by their abstracts.    </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>15 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32220</identifier><datestamp>2011-06-28T14:11:08Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Theory and Applications of Graph Searching Problems  (GRASTA 2011) (Dagstuhl Seminar 11071)</dc:title>    <dc:creator>Fedor V., Fomin</dc:creator>    <dc:creator>Pierre, Fraigniaud</dc:creator>    <dc:creator>Stephan, Kreutzer</dc:creator>    <dc:creator>Dimitrios M., Thilikos</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.2.30</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>  From February 14, 2012 to February 18, 2012, the Dagstuhl Seminar 11071  ``Theory and Applications of Graph Searching Problems  (GRASTA 2011)''  was held in Schloss Dagstuhl~--~Leibniz Center for Informatics. During the seminar, participants presented their current research, and ongoing work and open problems were discussed. Abstracts of the presentations given during the seminar as well as abstracts of seminar results and open problems are put together in this paper. The first section describes the seminar topics and goals in general. The second section contains the abstracts of the talks and the third section includes the open problems presented during the seminar.  </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>17 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32241</identifier><datestamp>2011-06-30T13:24:45Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Self-Repairing Programs (Dagstuhl Seminar 11062)</dc:title>    <dc:creator>Mauro, Pezz\\ufffd\\ufffd</dc:creator>    <dc:creator>Martin C., Rinard</dc:creator>    <dc:creator>Westley, Weimer</dc:creator>    <dc:creator>Andreas, Zeller</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.2.16</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>  Dagstuhl seminar 11062 ``Self-Repairing Programs'' included 23 participants and organizers from research and industrial communities.  Self-Repairing Programs are a new and emerging area, and many participants reported that they initially felt their first research home to be in another  area, such as testing, program synthesis, debugging, self-healing systems,  or security. Over the course of the seminar, the participants found  common ground in discussions of concerns, challenges, and the state of the art.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>14 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32255</identifier><datestamp>2011-07-01T12:09:24Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Combinatorial and Algorithmic Aspects of Sequence Processing (Dagstuhl Seminar 11081)</dc:title>    <dc:creator>Crochemore, Maxime</dc:creator>    <dc:creator>Kari, Lila</dc:creator>    <dc:creator>Mohri, Mehryar</dc:creator>    <dc:creator>Nowotka, Dirk</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.2.47</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>  Sequences form the most basic and natural data structure. They occur whenever information is electronically transmitted (as bit streams), when natural language text is spoken or written down (as words over, for example, the latin alphabet), in the process of heredity transmission in living cells (as DNA sequence) or the protein synthesis (as sequence of amino acids), and in many more different contexts.  Given this universal form of representing information, the need to process strings is apparent and actually a core purpose of computer use. Algorithms to efficiently search through, analyze, (de-)compress, match, learn, and encode/decode strings are therefore of chief interest.  Combinatorial problems about strings lie at the core of such algorithmic questions. Many such combinatorial problems are common in the string processing efforts in the different fields of application.  Scientists working in the fields of Combinatorics on Words, Computational Biology, Stringology, Natural Computing, and Machine Learning were invited to consider the seminar's topic from a~wide range of perspectives. This report documents the program and the outcomes of Dagstuhl Seminar 11081 ``Combinatorial and Algorithmic Aspects of Sequence Processing''.  </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>20 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32282</identifier><datestamp>2011-07-05T09:08:10Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Packing and Scheduling Algorithms for Information and Communication Services (Dagstuhl Seminar 11091)</dc:title>    <dc:creator>Jansen, Klaus</dc:creator>    <dc:creator>Matieu, Claire</dc:creator>    <dc:creator>Shachnai, Hadas</dc:creator>    <dc:creator>Young, Neal E.</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.2.67</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>  From 27.02.2011 to 4.03.2011, the Dagstuhl Seminar 11091 ``Packing and Scheduling Algorithms for Information and Communication Services'' was held in Schloss Dagstuhl Leibniz Center for Informatics. During the seminar, several participants presented their current research, and on-going work and open problems were discussed. Abstracts of the presentations given during the seminar as well as abstracts of seminar results and ideas are put together in this paper. The first section describes the seminar topics and goals in general. Links to extended abstracts or full papers are provided, if available.  </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>27 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32309</identifier><datestamp>2011-07-06T12:30:54Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Reasoning about Interaction: From Game Theory to Logic and Back (Dagstuhl Seminar 11101)</dc:title>    <dc:creator>Dix, J\\ufffd\\ufffd\\ufffd\\ufffdrgen</dc:creator>    <dc:creator>Jamroga, Wojtek</dc:creator>    <dc:creator>Samet, Dov</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.3.1</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>  This report documents the program and the outcomes of Dagstuhl Seminar 11101 ``Reasoning about Interaction: From Game Theory to Logic and Back''.  The notion of interaction is crucial in several disciplines, including social science, operational research, and economics. Two frameworks are most prominent in the formal treatment of interaction: game theory and mathematical logic. Quantitative analysis is usually conducted using models and tools of game theory. At the same time, logic provides vocabulary and methods to study interaction in a qualitative way.  The aim of the seminar was to bring together researchers who approach interaction-related phenomena from different perspectives (and with different conceptual tools). We hoped that, by synergy and exchange of expertise, a more integrative view of interaction could be obtained. In particular, we focussed on how interaction between individual entities (be it humans, robots and/or virtual creatures) can lead to emergence of social structures, collective behavior, and teamwork - and, ultimately, help all involved parties benefit from cooperation.  </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>18 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32310</identifier><datestamp>2011-07-06T12:42:32Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Dagstuhl Reports, Table of Contents, Volume 1, Issue 2, 2011</dc:title>    <dc:creator>Herbstritt, Marc</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/DagRep.1.2.i</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>TableOfContents</dc:description>    <dc:description>                 Dagstuhl Reports, Volume 1, Issue 2, Table of Contents.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>Article</dc:type>    <dc:format>2 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32325</identifier><datestamp>2011-07-07T11:17:46Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Frontmatter, Table of Contents, Preface, Conference Organization</dc:title>    <dc:creator>Gallagher, John P.</dc:creator>    <dc:creator>Gelfond, Michael</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.i</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Frontmatter, Table of Contents, Preface, Conference Organization   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>9 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32326</identifier><datestamp>2011-07-07T11:18:47Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Transaction Logic with Defaults and Argumentation Theories</dc:title>    <dc:creator>Fodor, Paul</dc:creator>    <dc:creator>Kifer, Michael</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.162</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Transaction Logic is an extension of classical logic that gracefully integrates both declarative and procedural knowledge and has proved itself as a powerful formalism for many advanced applications, including modeling robot movements, actions specification, and planning in artificial intelligence. In a parallel development, much work has been devoted to various theories of defeasible reasoning. In this paper, we unify these two streams of research and develop Transaction Logic with Defaults and Argumentation Theories, an extension of both Transaction Logic and the recently proposed unifying framework for defeasible reasoning called Logic Programs with Defaults and Argumentation Theories. We show that this combination has a number of interesting applications, including specification of defaults in action theories and heuristics for directed search in artificial intelligence planning problems. We also demonstrate the usefulness of the approach by experimenting with a prototype of the logic and showing how heuristics expressed as defeasible actions can significantly reduce the search space as well as execution time and space requirements.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>13 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32327</identifier><datestamp>2011-07-07T11:18:48Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>BAAC: A Prolog System for Action Description and Agents Coordination</dc:title>    <dc:creator>Dovier, Agostino</dc:creator>    <dc:creator>Formisano, Andrea</dc:creator>    <dc:creator>Pontelli, Enrico</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.187</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   The paper presents a system for knowledge representation and coordination, where autonomous agents reason and act in a shared environment. Agents autonomously pursue individual goals, but can interact through a shared knowledge repository. In their interactions, agents deal with problems of synchronization and concurrency, and have to realize coordination by developing proper strategies in order to ensure a consistent global execution of their autonomously derived plans. This kind of knowledge is modeled using an extension of the action description language B. A distributed planning problem is formalized by providing a number of declarative specifications of the portion of the problem pertaining a single agent. Each of these specifications is executable by a stand-alone CLP-based planner. The coordination platform, implemented in Prolog, is easily modifiable and extensible. New user-defined interaction protocols can be integrated.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32328</identifier><datestamp>2011-07-07T11:18:48Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Multi-Criteria Optimization in Answer Set Programming</dc:title>    <dc:creator>Gebser, Martin</dc:creator>    <dc:creator>Kaminski, Roland</dc:creator>    <dc:creator>Kaufmann, Benjamin</dc:creator>    <dc:creator>Schaub, Torsten</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.1</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   We elaborate upon new strategies and heuristics for solving multi-criteria optimization problems via Answer Set Programming (ASP). In particular, we conceive a new solving algorithm, based on conflictdriven learning, allowing for non-uniform descents during optimization. We apply these techniques to solve realistic Linux package configuration problems. To this end, we describe the Linux package configuration tool aspcud and compare its performance with systems pursuing alternative approaches.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>10 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32329</identifier><datestamp>2011-07-07T11:18:49Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Declarative Processing of Semistructured Web Data</dc:title>    <dc:creator>Hanus, Michael</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.198</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   In order to give application programs access to data stored in the web in semistructured formats, in particular, in XML format, we propose a domain-specific language (DSL) for declarative processing such data. Our language is embedded in the functional logic programming language Curry and offers powerful matching constructs that enable a declarative description of accessing and transforming XML data. We exploit advanced features of functional logic programming to provide a high-level and maintainable implementation of our language. Actually, this paper contains the complete code of our implementation so that the source text of this paper is an executable implementation of our embedded DSL.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32330</identifier><datestamp>2011-07-07T11:18:49Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>CDAOStore: A Phylogenetic Repository Using Logic Programming and Web Services</dc:title>    <dc:creator>Chisham, Brandon</dc:creator>    <dc:creator>Pontelli, Enrico</dc:creator>    <dc:creator>Son, Tran  Cao</dc:creator>    <dc:creator>Wright, Ben</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.209</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   The CDAOStore is a portal aimed at facilitating the storage and retrieval of data and metadata associated to studies in the field of evolutionary biology and phylogenetic analysis. The novelty of CDAOStore lies in the use of a semantic-based approach to the storage and querying of data. This enables CDAOStore to overcome the data format restrictions and complexities of other repositories (e.g., TreeBase) and to provide a domain-specific query interface, derived from studies of querying requirements for phylogenetic databases.  CDAOStore represents the first full implementation of the EvoIO stack, an inter-operation stack composed of a formal ontology (the Comparative Data Analysis Ontology), an XML exchange format (NeXML), and a web services API (PhyloWS). CDAOStore has been implemented on top of an RDF triple store, using a combination of standard web technologies and logic programming technology. In particular, we employed Prolog to support some of the format transformation tasks and, more importantly, in the implementation of several of the domain-specific queries, whose structure is beyond the reach of standard RDF query languages (e.g., SPARQL). CDAOStore is operational and it already hosts over 90 million RDF triples, imported from TreeBase or submitted by other domain scientists.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32331</identifier><datestamp>2011-07-07T11:18:50Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Bayesian Annotation Networks for Complex Sequence Analysis</dc:title>    <dc:creator>Christiansen, Henning</dc:creator>    <dc:creator>Theil Have, Christian</dc:creator>    <dc:creator>Torp Lassen, Ole</dc:creator>    <dc:creator>Petit, Matthieu</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.220</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Probabilistic models that associate annotations to sequential data are widely used in computational biology and a range of other applications. Models integrating with logic programs provide, furthermore, for sophistication and generality, at the cost of potentially very high computational complexity. A methodology is proposed for modularization of such models into sub-models, each representing a particular interpretation of the input data to be analysed. Their composition forms, in a natural way, a Bayesian network, and we show how standard methods for prediction and training can be adapted for such composite models in an iterative way, obtaining reasonable complexity results. Our methodology can be implemented using the probabilistic-logic PRISM system, developed by Sato et al, in a way that allows for practical applications.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32332</identifier><datestamp>2011-07-07T11:18:51Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Improving the Outcome of a Probabilistic Logic Music System Generator by Using Perlin Noise</dc:title>    <dc:creator>Nicholson, Colin J.</dc:creator>    <dc:creator>De Schreye, Danny</dc:creator>    <dc:creator>Sneyers, Jon</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.231</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   APOPCALEAPS is a logic-based music generation program that uses high level probabilistic rules. The music produced by APOPCALEAPS is controlled by parameters that can be customized by a user to create personalized songs. Perlin noise is a type of gradient noise algorithm which generates smooth and controllable variations of random numbers. This paper introduces the idea of using a Perlin noise algorithm on songs produced by APOPCALEAPS to alter their melody. The noise system modifies the song&#146;s melody with noise values that fluctuate as measures change in a song. Songs with more notes and more elaborate differences between the notes are modified by the system more than simpler songs. The output of the system is a different but similar song. This research can be used for generation of music with structure where one would need to generate variants on a theme.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>9 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32333</identifier><datestamp>2011-07-07T11:18:51Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Minimizing the overheads of dependent {AND}-parallelism</dc:title>    <dc:creator>Wang, Peter</dc:creator>    <dc:creator>Somogyi, Zoltan</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.128</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Parallel implementations of programming languages need to control synchronization overheads. Synchronization is essential for ensuring the correctness of parallel code, yet it adds overheads that aren't present in sequential programs. This is an important problem for parallel logic programming systems, because almost every action in such programs requires accessing variables, and the traditional approach of adding synchronization code to all such accesses is so prohibitively expensive that a parallel version of the program may run more slowly on four processors than a sequential version would run on one processor. We present a program transformation for implementing dependent AND-parallelism in logic programming languages that uses mode information to add synchronization code only to the variable accesses that actually need it.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32334</identifier><datestamp>2011-07-07T11:18:52Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Yet Another Characterization of Strong Equivalence</dc:title>    <dc:creator>Bochman, Alexander</dc:creator>    <dc:creator>Lifschitz, Vladimir</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.11</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Strong equivalence of disjunctive logic programs is characterized here by a calculus that operates with syntactically simple formulas.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>5 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32335</identifier><datestamp>2011-07-07T11:18:52Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Constraints in Non-Boolean Contexts</dc:title>    <dc:creator>De Koninck, Leslie</dc:creator>    <dc:creator>Brand, Sebastian</dc:creator>    <dc:creator>Stuckey, Peter J.</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.117</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   In high-level constraint modelling languages, constraints can occur in non-Boolean contexts: implicitly, in the form of partial functions, or more explicitly, in the form of constraints on local variables in non-Boolean expressions. Specifications using these facilities are often more succinct. However, these specifications are typically executed on solvers that only support questions of the form of existentially quantified conjunctions of constraints.  We show how we can translate expressions with constraints appearing in non-Boolean contexts into conjunctions of ordinary constraints. The translation is clearly structured into constrained type elimination, local variable lifting and partial function elimination. We explain our approach in the context of the modelling language Zinc. An implementation of it is an integral part of our Zinc compiler.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32336</identifier><datestamp>2011-07-07T11:18:53Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Abduction in Annotated Probabilistic Temporal Logic</dc:title>    <dc:creator>Molinaro, Cristian</dc:creator>    <dc:creator>Sliva, Amy</dc:creator>    <dc:creator>Subrahmanian, V. S.</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.240</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Annotated Probabilistic Temporal (APT) logic programs are a form of logic programs that allow users to state (or systems to automatically learn)rules of the form ``formula G becomes true K time units after formula F became true with L to U% probability.''  In this paper, we develop a theory of abduction for APT logic programs. Specifically, given an APT logic program Pi, a set of formulas H that can be ``added'' to Pi, and a goal G, is there a subset S of H such that Pi \\\\cup S is consistent and entails the goal G? In this paper, we study the complexity of the Basic APT Abduction Problem (BAAP). We then leverage a geometric characterization of BAAP to suggest a set of pruning strategies when solving BAAP and use these intuitions to develop a sound and complete algorithm.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32337</identifier><datestamp>2011-07-07T11:18:53Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Smart test data generators via logic programming</dc:title>    <dc:creator>Bulwahn, Lukas</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.139</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   We present a novel counterexample generator for the interactive theorem prover Isabelle based on a compiler that synthesizes test data generators for functional programming languages (e.g. Standard ML, OCaml) from specifications in Isabelle. In contrast to naive type-based test data generators, the smart generators take the preconditions into account and only generate tests that fulfill the preconditions. The smart generators are constructed by a compiler that reformulates the preconditions as logic programs and analyzes them by an enriched mode inference. From this inference, the compiler can construct the desired generators in the functional programming language. These test data generators are applied to find errors in specifications, as we show in a case study of a hotel key card system.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>12 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32338</identifier><datestamp>2011-07-07T11:18:54Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Static Type Checking for the Q Functional Language in Prolog</dc:title>    <dc:creator>Zombori, Zsolt</dc:creator>    <dc:creator>Csorba, J\\ufffd\\ufffdnos</dc:creator>    <dc:creator>Szeredi, P\\ufffd\\ufffdter</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.62</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   We describe an application of Prolog: a type checking tool for the Q functional language. Q is a terse vector processing language, a descendant of APL, which is getting more and more popular, especially in financial applications. Q is a dynamically typed language, much like Prolog. Extending Q with static typing improves both the readability of programs and programmer productivity, as type errors are discovered by the tool at compile time, rather than through  debugging the program execution. We designed a type description syntax for Q and implemented a parser for both the Q language  and its type extension. We then implemented a type checking algorithm using constraints. As most built-in function names of Q are overloaded, i.e. their meaning depends on the argument types, a quite complex system of constraints had to be implemented. Prolog proved to be an ideal implementation language for the task at hand. We used Definite Clause Grammars for parsing and Constraint Handling Rules for the type checking algorithm. In the paper we describe the main problems solved and the experiences gained in the development of the type checking tool.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32339</identifier><datestamp>2011-07-07T11:18:54Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Modelling Grammar Constraints with Answer Set Programming</dc:title>    <dc:creator>Drescher, Christian</dc:creator>    <dc:creator>Walsh, Toby</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.28</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Representing and solving constraint satisfaction problems is one of the challenges of artificial intelligence. In this paper, we present answer set programming (ASP) models for an important and very general class of constraints, including all constraints specified via grammars or automata that recognise some formal language. We argue that our techniques are effective and efficient, e.g., unit-propagation of an ASP solver can achieve domain consistency on the original constraint. Experiments demonstrate computational impact.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>12 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32340</identifier><datestamp>2011-07-07T11:18:55Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Multi-agent Confidential Abductive Reasoning</dc:title>    <dc:creator>Ma, Jiefei</dc:creator>    <dc:creator>Russo, Alessandra</dc:creator>    <dc:creator>Broda, Krysia</dc:creator>    <dc:creator>Lupu, Emil</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.175</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   In the context of multi-agent hypothetical reasoning, agents typically have partial knowledge about their environments, and the union of such knowledge is still incomplete to represent the whole world. Thus, given a global query they collaborate with each other to make correct inferences and hypothesis, whilst maintaining global constraints. Most collaborative reasoning systems operate on the assumption that agents can share or communicate any information they have. However, in application domains like multi-agent systems for healthcare or distributed software agents for security policies in coalition networks, confidentiality of knowledge is an additional  primary concern. These agents are required to collaborately compute consistent answers for a query whilst preserving their own private information. This paper addresses this issue showing how this dichotomy between \"open communication\" in collaborative reasoning and protection of confidentiality can be accommodated. We present a general-purpose distributed abductive logic programming system for multi-agent hypothetical reasoning with confidentiality. Specifically, the system computes consistent conditional answers for a query over a set of distributed normal logic programs with possibly unbound domains and arithmetic constraints, preserving the private information within the logic programs. A case study on security policy analysis in distributed coalition networks is described, as an example of many applications of this system.    </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>12 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32341</identifier><datestamp>2011-07-07T11:18:55Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Evolution of Ontologies using ASP</dc:title>    <dc:creator>Ostrowski, Max</dc:creator>    <dc:creator>Flouris, Giorgos</dc:creator>    <dc:creator>Schaub, Torsten</dc:creator>    <dc:creator>Antoniou, Grigoris</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.16</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   RDF/S ontologies are often used in e-science to express domain knowledge regarding the respective field of investigation (e.g., cultural informatics, bioinformatics etc). Such ontologies need to change often to reflect the latest scientific understanding on the domain at hand, and are usually associated with constraints expressed using various declarative formalisms to express domain-specific requirements, such as cardinality or acyclicity constraints. Addressing the evolution of ontologies in the presence of ontological constraints imposes extra difficulties, because it forces us to respect the associated constraints during evolution. While these issues were addressed in previous work, this is the first work to examine how ASP techniques can be applied to model and implement the evolution process. ASP was chosen for its advantages in terms of a principled, rather than ad hoc implementation, its modularity and flexibility, and for being a state-of-the-art technique to tackle hard combinatorial problems. In particular, our approach consists in providing a general translation of the problem into ASP, thereby reducing it to an instance of an ASP program that can be solved by an ASP solver. Our experiments are promising, even for large ontologies, and also show that the scalability of the approach depends on the morphology of the input.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>12 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32342</identifier><datestamp>2011-07-07T11:18:56Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>An Inductive Approach for Modal Transition System Refinement</dc:title>    <dc:creator>Alrajeh, Dalal</dc:creator>    <dc:creator>Kramer, Jeff</dc:creator>    <dc:creator>Russo, Alessandra</dc:creator>    <dc:creator>Uchitel, Sebastian</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.106</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Modal Transition Systems (MTSs) provide an appropriate framework for modelling software behaviour when only a partial specification is available. A key characteristic of an MTS is that it explicitly models events that a system is required to provide and is proscribed from exhibiting, and those for which no specification is available, called maybe events. Incremental elaboration of maybe events into either required or proscribed events can be seen as a process of MTS refinement, resulting from extending a given partial specification with more information about the system behaviour. This paper focuses on providing automated support for computing strong refinements  of an MTS with respect to event traces that describe required and proscribed behaviours using a non-monotonic inductive logic programming technique. A real case study is used to illustrate  the practical application of the approach.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32343</identifier><datestamp>2011-07-07T11:18:56Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Compiling Prolog to Idiomatic Java</dc:title>    <dc:creator>Eichberg, Michael</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.84</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Today, Prolog is often used to solve well-defined, domain-specific problems that are part of larger applications. In such cases, a tight integration of the Prolog program and the rest of the application, which is commonly written in a different language, is necessary. One common approach is to compile the Prolog code to (native) code in the target language. In this case, the effort necessary to build, test and deploy the final application is reduced. However, most of the approaches that achieve reasonable performance compile Prolog to  object-oriented code that relies on some kind of virtual machine (VM). These VMs are libraries implemented in the target language and implement Prolog's execution semantics. This adds a significant layer to the object-oriented program and results in code that does not look and feel native to developers of object-oriented programs. Further, if Prolog's execution semantics is implemented as a library the potential of modern runtime environments for object-oriented  programs, such as the Java Virtual Machine, to effectively optimize the program is more limited. In this paper, we report on our approach to compile Prolog to high-level, idiomatic object-oriented  Java code. The generated Java code closely resembles code written by Java developers and is effectively optimized by the Java Virtual Machine.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32344</identifier><datestamp>2011-07-07T11:18:57Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Declarative Output by Ordering Text Pieces</dc:title>    <dc:creator>Brass, Stefan</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.151</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Most real-world programs must produce output. If a deductive database is used to implement database application programs, it should be possible to specify the output declaratively. There is no generally accepted, completely satisfying solution for this. In this paper we propose to specify an output document by defining the position of text pieces (building blocks of the document). These text pieces are then ordered by their position and concatenated. This way of specifying output fits well to the bottom-up way of thinking about rules (from right to left) which is common in deductive databases. Of course, when evaluating such programs, one wants to avoid sorting operations as far as possible. We show how rules involving ordering can be efficiently implemented.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32345</identifier><datestamp>2011-07-07T11:18:57Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Representing the Language of the Causal Calculator in Answer Set Programming</dc:title>    <dc:creator>Casolary, Michael</dc:creator>    <dc:creator>Lee, Joohyung</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.51</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Action language C+, a formalism based on nonmonotonic causal logic, was designed for describing properties of actions. The definite fragment of C+ was implemented in system the Causal Calculator (CCalc), based on a reduction of nonmonotonic causal logic to propositional logic. On the other hand, in this paper, we represent the language of CCalc in answer set programming (ASP), by translating nonmonotonic causal logic into formulas under the stable model semantics. We design a standard library which describes the constructs of the input language of CCalc in terms of ASP, allowing a simple modular method to represent CCalc input programs in the language of ASP. Using the combination of system f2lp and answer set solvers, our prototype implementation of this approach, which we call Cplus2ASP, achieves functionality close to CCalc while taking advantage of answer set solvers to yield efficient computation that is orders of magnitude faster than CCalc on several benchmark examples.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32346</identifier><datestamp>2011-07-07T11:18:58Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Hybrid ASP</dc:title>    <dc:creator>Brik, Alex</dc:creator>    <dc:creator>Remmel, Jeffrey B.</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.40</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   This paper introduces an extension of Answer Set Programming (ASP) called Hybrid ASP which will allow the user to reason about dynamical systems that exhibit both discrete and continuous aspects. The unique feature of Hybrid ASP is that it allows the use of ASP type rules as controls for when to apply algorithms to advance the system to the next position. That is, if the prerequisites of a rule are satisfied and the constraints of the rule are not violated, then the algorithm associated with the rule is invoked.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32347</identifier><datestamp>2011-07-07T11:18:59Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Canonical Regular Types</dc:title>    <dc:creator>Jackson, Ethan K.</dc:creator>    <dc:creator>Bj\\ufffd\\ufffdrner, Nikolaj</dc:creator>    <dc:creator>Schulte, Wolfram</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.73</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Regular types represent sets of structured data, and have been used in logic programming (LP) for verification. However, first-class regular type systems are uncommon in LP languages. In this paper we present a new approach to regular types, based on type canonization, aimed at providing a practical first-class regular type system.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32348</identifier><datestamp>2011-07-07T11:18:59Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Synthesis of Logic Programs from Object-Oriented Formal Specifications</dc:title>    <dc:creator>Herranz, \\ufffd\\ufffdngel</dc:creator>    <dc:creator>Mari\\ufffd\\ufffdo, Julio</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.95</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Early validation of requirements is crucial for the rigorous development of software. Without it, even the most formal of the methodologies will produce the wrong outcome. One successful approach, popularised by some of the so-called lightweight formal methods, consists in generating (finite, small) models of the specifications. Another possibility is to build a running prototype from those specifications. In this paper we show how to obtain executable prototypes from formal specifications written in an object oriented notation by translating them into logic programs. This has some advantages over other lightweight methodologies. For instance, we recover the possibility of dealing with recursive data types as specifications that use them often lack finite models.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>11 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32349</identifier><datestamp>2011-07-07T11:19:00Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Automatic Parallelism in Mercury</dc:title>    <dc:creator>Bone, Paul</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.251</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Our project is concerned with the automatic parallelization of Mercury programs. Mercury is a purely-declarative logic programming language, this makes it easy to determine whether a set of computations may be performed in parallel with one-anther. However, the problem of how to determine which computations should be executed in parallel in order to make the program perform optimally is unsolved. Therefore, our work concentrates on building a profiler-feedback automatic parallelization system for Mercury that creates programs with very good parallel performance with as little help from the programmer as possible.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>4 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32350</identifier><datestamp>2011-07-07T11:19:00Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Consistency Techniques for Hybrid Simulations</dc:title>    <dc:creator>Bottalico, Marco</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.255</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   The goal of this paper is to show consistency techniques methods and hybrid stochastic/deterministic models to describe biochemical systems and their behaviour through the ordinary differential equations.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>6 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32351</identifier><datestamp>2011-07-07T11:19:01Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Extensions of Answer Set Programming </dc:title>    <dc:creator>Brik, Alex</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.261</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   This paper describes a doctoral research in three areas: Hybrid ASP - an extension of Answer Set Programming for reasoning about dynamical systems, an extension of Set Constraint atoms for reasoning about preferences, computing stable models of logic programs using Metropolis type algorithms. The paper discusses a possible application of all three areas to the problem of maximizing total expected reward.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>7 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32352</identifier><datestamp>2011-07-07T11:19:02Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>A Semiring-based framework for fair resources allocation</dc:title>    <dc:creator>Campli, Paola</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.268</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   In this paper a general framework (based on soft constraints) to model and solve the fair allocation problem is proposed. Our formal approach allows to model different allocation problems, ranging from goods and resources allocation to task and chore division. Soft constraints are employed to find a fair solution by respecting the agent&#146;s preferences; indeed these can be modeled in a natural fashion by using the Semiring-based framework for soft constraints. The fairness property is considered following an economical point of view, that is, taking into account the notions of envy-freeness (each player likes its allocation at least as much as those that the other players receive, so it does not envy anybody else) and efficiency (there is no other division better for everybody, or better for some players and not worse for the others).   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>6 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32353</identifier><datestamp>2011-07-07T11:19:02Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Promoting Modular Nonmonotonic Logic Programs</dc:title>    <dc:creator>Krennwallner, Thomas</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.274</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Modularity in Logic Programming has gained much attention over the past years. To date, many formalisms have been proposed that feature various aspects of modularity. In this paper, we present our current work on Modular Nonmonotonic Logic Programs (MLPs), which are logic programs under answer set semantics with modules that have contextualized input provided by other modules. Moreover, they allow for (mutually) recursive module calls. We pinpoint issues that are present in such cyclic module systems and highlight how MLPs addresses them.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>6 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32354</identifier><datestamp>2011-07-07T11:19:03Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Correct Reasoning about Logic Programs </dc:title>    <dc:creator>Kriener, Jael</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.280</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   In this PhD project, we present an approach to the problem of determinacy inference in logic programs with cut, which treats cut uniformly and contextually. The overall aim is to develop a theoretical analysis, abstract it to a suitable domain and prove both the concrete analysis and the abstraction correct in a formal theorem prover (Coq). A crucial advantage of this approach, besides the guarantee of correctness, is the possibility of automatically extracting an implementation of the analysis.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>4 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32355</identifier><datestamp>2011-07-07T11:19:03Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Accepting the natural order of rules in a logic program with preferences</dc:title>    <dc:creator>&#138;imko, Alexander</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.284</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Preference is a natural part of common sense reasoning. It allows us to select preferred conclusions from broader range of alternative conclusions. It is typically specified on parts of conclusions or on rules. Different semantics have been proposed that deal with preference on rules. None fully meets our requirements.  We are interested in a descriptive approach to preference handling in logic programs under answer set semantics that always selects preferred answer set when standard one exists. Existing semantics that meet this criterion also give non intuitive conclusions on some programs. We think this kind of problem is related to the problem of not accepting natural order of rules induced by underlying answer set semantics.  Our goal is to define semantics that would always select preferred answer set when standard one exists, accept natural order on rules, and satisfy principles for preference handling.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>6 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32356</identifier><datestamp>2011-07-07T11:19:04Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Implementation of Axiomatic Language </dc:title>    <dc:creator>Wilson, Walter W.</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.290</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   This report summarizes a PhD research effort to implement a type of logic programming language called \"axiomatic language\". Axiomatic language is intended as a specification language, so its implementation involves the transformation of specifications to efficient algorithms. The language is described and the implementation task is discussed.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>6 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32357</identifier><datestamp>2011-07-07T11:19:04Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.DAGST</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Two Phase Description Logic Reasoning for Efficient Information Retrieval </dc:title>    <dc:creator>Zombori, Zsolt</dc:creator>    <dc:publisher>Schloss Dagstuhl - Leibniz-Zentrum fuer Informatik GmbH, Wadern/Saarbruecken, Germany</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.4230/LIPIcs.ICLP.2011.296</dc:identifier>    <dc:subject>Computer Science</dc:subject>    <dc:subject>000 Computer science, knowledge, general works</dc:subject>    <dc:description>Other</dc:description>    <dc:description>   Description Logics are used more and more frequently for knowledge  representation, creating an increasing demand for efficient automated  DL reasoning. However, the existing implementations are inefficient in  the presence of large amounts of data. This paper summarizes the  results in transforming DL axioms to a set of function-free clauses of  first-order logic which can be used for efficient, query oriented data  reasoning. The described method has been implemented in a module of  the DLog reasoner openly available on SourceForge to download.   </dc:description>    <dc:contributor>Herbstritt, Marc</dc:contributor>    <dc:language>eng</dc:language>    <dc:type>Text</dc:type>    <dc:type>ConferencePaper</dc:type>    <dc:format>5 pages</dc:format>    <dc:format>application/pdf</dc:format>    <dc:rights>Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported license (CC-BY-NC-ND)</dc:rights> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:29737</identifier><datestamp>2011-07-08T09:54:42Z</datestamp><setSpec>DK</setSpec><setSpec>DK.DTIC</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Advanced stormwater runoff characterization</dc:title>    <dc:creator>Kayhanian, M.</dc:creator>    <dc:publisher>DTU Library, Technical University of Denmark (DTU)</dc:publisher>    <dc:date>2005</dc:date>    <dc:identifier>doi:10.4122/1.1000001753</dc:identifier>    <dc:relation>doi:10.4122/1.1000001754</dc:relation>    <dc:subject>Stormwater runoff characterization</dc:subject>    <dc:subject>data validation</dc:subject>    <dc:subject>hydrologic utility</dc:subject>    <dc:subject>data analysis tool</dc:subject>    <dc:subject>rational database</dc:subject>    <dc:description>Abstract</dc:description>    <dc:description>During the past seven years the California Department of Transportation has developed an extensive stormwater characterization program to evaluate the physical, chemical and biological quality of the runoff from their representative facilities. Initially the program has utilized many laboratories and environmental consultants who may not have necessarily used the same method of sample collection, quality assurance and quality control, data reporting and data validation standards. Faced with this deficiency, a set of standard protocols and several software tools were developed to improve the consistency among all characterization studies and enhance the quality of water quality data. Software tools developed to deal with these problems include: 1) automated data validation, 2) hydrologic utility, 3) rational database, and 4) data analysis tool. The description and practical application of these software tools are discussed in this paper.</dc:description>    <dc:contributor>University of California, Department of Civil and Environmental Engineering</dc:contributor>    <dc:language>en</dc:language>    <dc:type>Event</dc:type>    <dc:type>Conference presentation</dc:type>    <dc:format>text/xml</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32426</identifier><datestamp>2011-07-12T09:51:31Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Untersuchung von Werkstoffen f\\ufffd\\ufffdr die Katalyse mit Elektronentomographie - Investigation of materials for catalysis with electron tomography</dc:title>    <dc:creator>Grothausmann, Roman</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.5442/D0008</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Applied physics</dc:subject>    <dc:subject>621 Applied physics</dc:subject>    <dc:language>eng</dc:language>    <dc:format>76600 kb</dc:format>    <dc:format>161 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:32152</identifier><datestamp>2011-07-12T10:21:28Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>A study of charge transfer kinetics in dye-sensitized surface conductivity solar cells</dc:title>    <dc:creator>Friedrich, Dennis</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.5442/D0007</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Physics</dc:subject>    <dc:subject>537 Electricity &amp; electronics</dc:subject>    <dc:subject>Applied physics</dc:subject>    <dc:subject>621 Applied physics</dc:subject>    <dc:language>eng</dc:language>    <dc:format>12760 kb</dc:format>    <dc:format>141 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:25453</identifier><datestamp>2011-07-12T10:25:31Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>The Role of Cd and Ga in the Cu(In,Ga)S2/CdS Heterojunction Studied with X-Ray Spectroscopic Methods</dc:title>    <dc:creator>Johnson, Benjamin E.</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2010</dc:date>    <dc:identifier>doi:10.5442/D0006</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Physics</dc:subject>    <dc:subject>537 Electricity &amp; electronics</dc:subject>    <dc:subject>Applied physics</dc:subject>    <dc:subject>621 Applied physics</dc:subject>    <dc:language>eng</dc:language>    <dc:format>27300 kb</dc:format>    <dc:format>142 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:25452</identifier><datestamp>2011-07-12T10:29:27Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Hydrogen Passivation of Polycrystalline Si Thin Film Solar Cells</dc:title>    <dc:creator>Gorka, Benjamin</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2010</dc:date>    <dc:identifier>doi:10.5442/D0005</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Physics</dc:subject>    <dc:subject>537 Electricity &amp; electronics</dc:subject>    <dc:subject>Applied physics</dc:subject>    <dc:subject>621 Applied physics</dc:subject>    <dc:language>eng</dc:language>    <dc:format>8170 kb</dc:format>    <dc:format>143 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:25451</identifier><datestamp>2011-07-12T10:34:53Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Nanochemische Zusammensetzungsanalyse mittels anomaler R\\ufffd\\ufffdntgenkleinwinkelstreuung (ASAXS): Erbium und Ytterbium dotierte Oxyfluorid-Glaskeramiken</dc:title>    <dc:creator>Haas, Sylvio</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2010</dc:date>    <dc:identifier>doi:10.5442/D0004</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Chemistry</dc:subject>    <dc:subject>543 Analytical chemistry</dc:subject>    <dc:subject>Applied physics</dc:subject>    <dc:subject>621 Applied physics</dc:subject>    <dc:language>ger</dc:language>    <dc:format>6513 kb</dc:format>    <dc:format>167 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:25450</identifier><datestamp>2011-07-12T10:38:45Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Benchmarking surface signals when growing GaP on Si in CVD ambients</dc:title>    <dc:creator>D\\ufffd\\ufffdscher, Henning</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2010</dc:date>    <dc:identifier>doi:10.5442/D0003</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Applied physics</dc:subject>    <dc:subject>621 Applied physics</dc:subject>    <dc:language>eng</dc:language>    <dc:format>6728 kb</dc:format>    <dc:format>176 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:25449</identifier><datestamp>2011-07-12T10:43:34Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Struktur und Gitterdynamik von Gruppe-V-Elementen in ZnO</dc:title>    <dc:creator>Friedrich, Felice</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2010</dc:date>    <dc:identifier>doi:10.5442/D0002</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Physics</dc:subject>    <dc:subject>537 Electricity &amp; electronics</dc:subject>    <dc:language>ger</dc:language>    <dc:format>9631 kb</dc:format>    <dc:format>127 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <record><header><identifier>oai:oai.datacite.org:25407</identifier><datestamp>2011-07-12T10:48:05Z</datestamp><setSpec>TIB</setSpec><setSpec>TIB.HZB</setSpec><setSpec>TIB.HZB.REFQUALITY</setSpec><setSpec>TIB.REFQUALITY</setSpec></header><metadata><oai_dc:dc xmlns:dc=\"http://purl.org/dc/elements/1.1/\"            xmlns:oai_dc=\"http://www.openarchives.org/OAI/2.0/oai_dc/\"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"            xsi:schemaLocation=\"http://www.openarchives.org/OAI/2.0/oai_dc/ http://www.openarchives.org/OAI/2.0/oai_dc.xsd\">    <dc:title>Electrochemical and Photochemical Functionalization of Au and Si Surfaces by Grafting of Diazonium and Azide Compounds</dc:title>    <dc:creator>Zhang, Xin</dc:creator>    <dc:publisher>Helmholtz-Zentrum Berlin f\\ufffd\\ufffdr Materialien und Energy</dc:publisher>    <dc:date>2011</dc:date>    <dc:identifier>doi:10.5442/D0001</dc:identifier>    <dc:identifier>issn:1868-5781</dc:identifier>    <dc:subject>Chemistry</dc:subject>    <dc:subject>541 Physical &amp; theoretical chemistry</dc:subject>    <dc:language>eng</dc:language>    <dc:format>7065 kb</dc:format>    <dc:format>123 pages</dc:format>    <dc:format>text/plain</dc:format> </oai_dc:dc></metadata></record> <resumptionToken expirationDate=\"2015-03-04T15:51:47Z\" completeListSize=\"5169627\" cursor=\"0\">1425480707555,2011-06-01T00:00:00Z,9999-12-31T23:59:59Z,50,null,oai_dc</resumptionToken></ListRecords></OAI-PMH>", 
    "identity": {
        "subtype": "service", 
        "is_error": false, 
        "version": "", 
        "protocol": "OAI-PMH", 
        "language": "", 
        "service": "", 
        "has_dataset": false, 
        "has_metadata": false
    }, 
    "digest": "ddb6df1476b9e03790033bbc5eba48d3", 
    "source_url": "http://oai.datacite.org/oai?verb=ListRecords&from=2011-06-01T00:00:00Z&metadataPrefix=oai_dc"
}