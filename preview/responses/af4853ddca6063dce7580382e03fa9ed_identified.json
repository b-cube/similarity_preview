{
    "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <!-- * Description: Huddl Monolithic Schema * Set: HUDDL Core Schemas (HCS) for HUDDL Specification v.1.0 ALPHA * File: huddl_monolithic.xsd * Info: huddl.ccom.unh.edu * Support: huddl@ccom.unh.edu * Copyright 2014 CCOM/JHC University of New Hampshire. All rights reserved. --> <xs:schema xmlns=\"http://huddl.ccom.unh.edu\" xmlns:huddl=\"http://huddl.ccom.unh.edu\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" targetNamespace=\"http://huddl.ccom.unh.edu\" elementFormDefault=\"qualified\" attributeFormDefault=\"unqualified\" version=\"1.0\">  <!--    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--    +++++++++++++++++++++++++++++++++++++++++       COMMON TYPES         ++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <xs:annotation>   <xs:documentation>Common types, elements and attributes schema belonging to Huddl Core Schemas (HCS) set for HUDDL Specification v.0.3</xs:documentation>  </xs:annotation>  <!-- version type -->  <xs:simpleType name=\"VersionType\">   <xs:annotation>    <xs:documentation>The version is represented as dotted 2-digit numbers. It may be with 1 or 2 dots.</xs:documentation>    <xs:documentation>The first number (1 or 2 digits) is the major version.</xs:documentation>    <xs:documentation>The second (1 or 2 digits) number is the minor version.</xs:documentation>    <xs:documentation>The third (from 1 to 3 digits) number is optional, and it represents the patch version.</xs:documentation>    <xs:documentation>This type is used as an attribute by the root huddl:hfd element.</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:string\">    <xs:minLength value=\"3\"/>    <xs:maxLength value=\"9\"/>    <xs:pattern value=\"[0-9]{1,2}[.]{1,2}[0-9]{1,2}([.]{1}[0-9]{1,3})*\"/>   </xs:restriction>  </xs:simpleType>  <!-- scope name type -->  <xs:simpleType name=\"ScopeNameType\">   <xs:annotation>    <xs:documentation>The scope name is used to provide a realm scope for the data structures.</xs:documentation>    <xs:documentation>The first value must be a lower-case letter. The remaining optional values (less than 99) can be a number or a lower-case letter.</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:string\">    <xs:minLength value=\"1\"/>    <xs:maxLength value=\"100\"/>    <xs:pattern value=\"[a-z]{1}[a-z0-9]{0,99}\"/>   </xs:restriction>  </xs:simpleType>  <!-- revID type -->  <xs:simpleType name=\"RevIDType\">   <xs:annotation>    <xs:documentation>The revID is loosely typed. It is just represented as an alphanumeric string (starting with a letter). This solution wants to avoid limitations in the existing approach followed by manufacturer.</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:string\">    <xs:minLength value=\"1\"/>    <xs:maxLength value=\"100\"/>    <xs:pattern value=\"[a-zA-Z]{1}[a-zA-Z0-9]{0,99}\"/>   </xs:restriction>  </xs:simpleType>  <!-- Statements Type -->  <xs:complexType name=\"StatementsType\">   <xs:annotation>    <xs:documentation>Container for at least one statement.</xs:documentation>   </xs:annotation>   <xs:sequence>    <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>   </xs:sequence>  </xs:complexType>  <!--    +++++++++++++++++++++++++++++++++++++++++++       BASIC  ELEMENTS       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- note element -->  <xs:element name=\"note\" id=\"note\">   <xs:annotation>    <xs:documentation>A generic textual note</xs:documentation>    <xs:documentation>It may have a 'source' attribute to an URI resource used as reference</xs:documentation>    <xs:documentation>It may also have any attribute and any content, the 'lax' processing content avoid errors in case of missing schema description.</xs:documentation>   </xs:annotation>   <xs:complexType mixed=\"true\">    <xs:sequence minOccurs=\"0\" maxOccurs=\"unbounded\">     <xs:any processContents=\"lax\"/>    </xs:sequence>    <xs:attribute name=\"source\" type=\"xs:anyURI\"/>    <xs:anyAttribute namespace=\"##other\" processContents=\"lax\"/>   </xs:complexType>  </xs:element>  <!-- documentation element -->  <xs:element name=\"documentation\" id=\"documentation\">   <xs:annotation>    <xs:documentation>A container of multiple notes used to document huddl containers (e.g., copyright, disclaimer, and content data structures)</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"unbounded\">     <xs:element ref=\"huddl:note\" minOccurs=\"1\" maxOccurs=\"1\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!--    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--    +++++++++++++++++++++++++++++++++++++++++          DATA TYPES            ++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--   +++++++++++++++++++++++++++++++++++++++++                  ATTRS               ++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- number of bits or \"variable\" token -->  <xs:element name=\"bits\" id=\"bits\">   <xs:annotation>    <xs:documentation>Used to signal the number of used bits</xs:documentation>   </xs:annotation>   <xs:simpleType>    <xs:union memberTypes=\"xs:positiveInteger\">     <xs:simpleType>      <xs:restriction base=\"xs:token\">       <xs:enumeration value=\"variable\"/>      </xs:restriction>     </xs:simpleType>    </xs:union>   </xs:simpleType>  </xs:element>  <!-- signed or unsigned information -->  <xs:element name=\"signed\" id=\"signed\">   <xs:annotation>    <xs:documentation>Used to signal if the value is signed</xs:documentation>   </xs:annotation>   <xs:simpleType>    <xs:restriction base=\"xs:token\">     <xs:enumeration value=\"yes\"/>     <xs:enumeration value=\"no\"/>    </xs:restriction>   </xs:simpleType>  </xs:element>  <!-- endianess -->  <xs:element name=\"endianess\" id=\"endianess\">   <xs:annotation>    <xs:documentation>Used to signal the byte-order</xs:documentation>   </xs:annotation>   <xs:simpleType>    <xs:restriction base=\"xs:token\">     <xs:enumeration value=\"notApplicable\"/>     <xs:enumeration value=\"littleEndian\"/>     <xs:enumeration value=\"bigEndian\"/>     <xs:enumeration value=\"mixedEndian\"/>     <xs:enumeration value=\"variable\"/>    </xs:restriction>   </xs:simpleType>  </xs:element>  <!-- 1-bit -->  <xs:simpleType name=\"bit\" id=\"bit\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>1</huddl:bits>    </xs:appinfo>    <xs:documentation>A bit of information</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:boolean\"/>  </xs:simpleType>  <!--INTEGER BUILTIN DATA TYPES-->  <!--8 BITS-->  <!-- signed 8-bit integer -->  <xs:simpleType name=\"s8\" id=\"s8\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>8</huddl:bits>     <huddl:signed>yes</huddl:signed>    </xs:appinfo>    <xs:documentation>Signed 8-bit integer [-128..127]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:byte\"/>  </xs:simpleType>  <!-- unsigned 8-bit integer -->  <xs:simpleType name=\"u8\" id=\"u8\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>8</huddl:bits>     <huddl:signed>no</huddl:signed>    </xs:appinfo>    <xs:documentation>Unsigned 8-bit integer [0...255]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:unsignedByte\"/>  </xs:simpleType>  <!--16 BITS-->  <!-- signed 16-bit integer -->  <xs:simpleType name=\"s16\" id=\"s16\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>16</huddl:bits>     <huddl:signed>yes</huddl:signed>    </xs:appinfo>    <xs:documentation>Signed 16-bit integer [-32,768..32,767]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:short\"/>  </xs:simpleType>  <!-- unsigned 16-bit integer -->  <xs:simpleType name=\"u16\" id=\"u16\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>16</huddl:bits>     <huddl:signed>no</huddl:signed>    </xs:appinfo>    <xs:documentation>Unsigned 16-bit integer [0..65,535]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:unsignedShort\"/>  </xs:simpleType>  <!--32 BITS-->  <!-- signed 32-bit integer -->  <xs:simpleType name=\"s32\" id=\"s32\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>32</huddl:bits>     <huddl:signed>yes</huddl:signed>    </xs:appinfo>    <xs:documentation>Signed 32-bit integer [-2,147,483,648..2,147,483,647]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:int\"/>  </xs:simpleType>  <!-- unsigned 32-bit integer -->  <xs:simpleType name=\"u32\" id=\"u32\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>32</huddl:bits>     <huddl:signed>no</huddl:signed>    </xs:appinfo>    <xs:documentation>Unsigned 32-bit integer [0..4,294,967,295]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:unsignedInt\"/>  </xs:simpleType>  <!--64 BITS-->  <!-- signed 64-bit integer -->  <xs:simpleType name=\"s64\" id=\"s64\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>64</huddl:bits>     <huddl:signed>yes</huddl:signed>    </xs:appinfo>    <xs:documentation>Signed 64-bit integer [-9,223,372,036,854,775,808..9,223,372,036,854,775,807]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:long\"/>  </xs:simpleType>  <!-- unsigned 64-bit integer -->  <xs:simpleType name=\"u64\" id=\"u64\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>64</huddl:bits>     <huddl:signed>no</huddl:signed>    </xs:appinfo>    <xs:documentation>Unsigned 64-bit integer [0..18,446,744,073,709,551,615]</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:unsignedLong\"/>  </xs:simpleType>  <!--FLOATING-POINT BUILTIN DATA TYPES-->  <!-- 32-bit float -->  <xs:simpleType name=\"f32\" id=\"f32\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>32</huddl:bits>    </xs:appinfo>    <xs:documentation>32-bit floating-point number</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:float\"/>  </xs:simpleType>  <!-- 64-bit float -->  <xs:simpleType name=\"f64\" id=\"f64\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>64</huddl:bits>    </xs:appinfo>    <xs:documentation>64-bit floating-point number</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:double\"/>  </xs:simpleType>  <!--EXTENDED PRECISION-->  <xs:simpleType name=\"f80\" id=\"f80\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>80</huddl:bits>    </xs:appinfo>    <xs:documentation>80-bit floating-point number</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:double\"/>  </xs:simpleType>  <xs:simpleType name=\"f96\" id=\"f96\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>96</huddl:bits>    </xs:appinfo>    <xs:documentation>96-bit floating-point number</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:double\"/>  </xs:simpleType>  <xs:simpleType name=\"f128\" id=\"f128\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>128</huddl:bits>    </xs:appinfo>    <xs:documentation>128-bit floating-point number</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:double\"/>  </xs:simpleType>  <xs:simpleType name=\"string\" id=\"string\">   <xs:annotation>    <xs:appinfo source=\"http://huddl.ccom.unh.edu\">     <huddl:bits>variable</huddl:bits>    </xs:appinfo>    <xs:documentation>A string of variable length</xs:documentation>   </xs:annotation>   <xs:restriction base=\"xs:normalizedString\"/>  </xs:simpleType>  <!--    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--    +++++++++++++++++++++++++++++++++++++++++     DATA DESCRIPTORS     +++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- primitives types dictionary -->  <xs:simpleType name=\"PrimitiveType\">   <xs:restriction base=\"xs:token\">    <xs:enumeration value=\"huddl:bit\"/>    <xs:enumeration value=\"huddl:s8\"/>    <xs:enumeration value=\"huddl:u8\"/>    <xs:enumeration value=\"huddl:s16\"/>    <xs:enumeration value=\"huddl:u16\"/>    <xs:enumeration value=\"huddl:s32\"/>    <xs:enumeration value=\"huddl:u32\"/>    <xs:enumeration value=\"huddl:s64\"/>    <xs:enumeration value=\"huddl:u64\"/>    <xs:enumeration value=\"huddl:f32\"/>    <xs:enumeration value=\"huddl:f64\"/>    <xs:enumeration value=\"huddl:f80\"/>    <xs:enumeration value=\"huddl:f96\"/>    <xs:enumeration value=\"huddl:f128\"/>    <xs:enumeration value=\"huddl:string\"/>   </xs:restriction>  </xs:simpleType>  <!-- built-in types dictionary -->  <xs:simpleType name=\"BuiltinType\">   <xs:restriction base=\"xs:token\">    <xs:enumeration value=\"huddl:bit\"/>    <xs:enumeration value=\"huddl:s8\"/>    <xs:enumeration value=\"huddl:u8\"/>    <xs:enumeration value=\"huddl:s16\"/>    <xs:enumeration value=\"huddl:u16\"/>    <xs:enumeration value=\"huddl:s32\"/>    <xs:enumeration value=\"huddl:u32\"/>    <xs:enumeration value=\"huddl:s64\"/>    <xs:enumeration value=\"huddl:u64\"/>    <xs:enumeration value=\"huddl:f32\"/>    <xs:enumeration value=\"huddl:f64\"/>    <xs:enumeration value=\"huddl:f80\"/>    <xs:enumeration value=\"huddl:f96\"/>    <xs:enumeration value=\"huddl:f128\"/>    <xs:enumeration value=\"huddl:pad\"/>    <xs:enumeration value=\"huddl:string\"/>    <xs:enumeration value=\"huddl:array1d\"/>    <xs:enumeration value=\"huddl:delimited1d\"/>    <xs:enumeration value=\"huddl:array2d\"/>    <xs:enumeration value=\"huddl:vector1d\"/>    <xs:enumeration value=\"huddl:vector2d\"/>    <xs:enumeration value=\"huddl:stream\"/>   </xs:restriction>  </xs:simpleType>  <!-- padding types dictionary -->  <xs:simpleType name=\"PaddingType\">   <xs:restriction base=\"xs:token\">    <xs:enumeration value=\"1-byte\"/>    <xs:enumeration value=\"2-byte\"/>    <xs:enumeration value=\"4-byte\"/>    <xs:enumeration value=\"8-byte\"/>   </xs:restriction>  </xs:simpleType>  <!-- ArithOpType -->  <xs:simpleType name=\"ArithOpType\">   <xs:restriction base=\"xs:string\">    <xs:enumeration value=\"+\"/>    <xs:enumeration value=\"-\"/>    <xs:enumeration value=\"*\"/>    <xs:enumeration value=\"/\"/>   </xs:restriction>  </xs:simpleType>  <!-- Bits mask -->  <xs:simpleType name=\"BitMaskType\">   <xs:restriction base=\"xs:string\">    <xs:enumeration value=\"0x0001\"/>    <xs:enumeration value=\"0x0002\"/>    <xs:enumeration value=\"0x0004\"/>    <xs:enumeration value=\"0x0008\"/>    <xs:enumeration value=\"0x0010\"/>    <xs:enumeration value=\"0x0020\"/>    <xs:enumeration value=\"0x0040\"/>    <xs:enumeration value=\"0x0080\"/>    <xs:enumeration value=\"0x0100\"/>    <xs:enumeration value=\"0x0200\"/>    <xs:enumeration value=\"0x0400\"/>    <xs:enumeration value=\"0x0800\"/>    <xs:enumeration value=\"0x1000\"/>    <xs:enumeration value=\"0x2000\"/>    <xs:enumeration value=\"0x4000\"/>    <xs:enumeration value=\"0x8000\"/>   </xs:restriction>  </xs:simpleType>  <!-- delimiter types dictionary -->  <xs:simpleType name=\"DelimiterType\">   <xs:restriction base=\"xs:string\">    <xs:enumeration value=\"0\"/>    <xs:enumeration value=\"1\"/>    <xs:enumeration value=\"2\"/>    <xs:enumeration value=\"3\"/>    <xs:enumeration value=\"4\"/>    <xs:enumeration value=\"5\"/>    <xs:enumeration value=\"6\"/>    <xs:enumeration value=\"7\"/>    <xs:enumeration value=\"8\"/>    <xs:enumeration value=\"9\"/>    <xs:enumeration value=\"a\"/>    <xs:enumeration value=\"b\"/>    <xs:enumeration value=\"c\"/>    <xs:enumeration value=\"d\"/>    <xs:enumeration value=\"e\"/>    <xs:enumeration value=\"f\"/>    <xs:enumeration value=\"g\"/>    <xs:enumeration value=\"h\"/>    <xs:enumeration value=\"i\"/>    <xs:enumeration value=\"j\"/>    <xs:enumeration value=\"k\"/>    <xs:enumeration value=\"l\"/>    <xs:enumeration value=\"m\"/>    <xs:enumeration value=\"n\"/>    <xs:enumeration value=\"o\"/>    <xs:enumeration value=\"p\"/>    <xs:enumeration value=\"q\"/>    <xs:enumeration value=\"r\"/>    <xs:enumeration value=\"s\"/>    <xs:enumeration value=\"t\"/>    <xs:enumeration value=\"u\"/>    <xs:enumeration value=\"v\"/>    <xs:enumeration value=\"w\"/>    <xs:enumeration value=\"x\"/>    <xs:enumeration value=\"y\"/>    <xs:enumeration value=\"z\"/>    <xs:enumeration value=\"A\"/>    <xs:enumeration value=\"B\"/>    <xs:enumeration value=\"C\"/>    <xs:enumeration value=\"D\"/>    <xs:enumeration value=\"E\"/>    <xs:enumeration value=\"F\"/>    <xs:enumeration value=\"G\"/>    <xs:enumeration value=\"H\"/>    <xs:enumeration value=\"I\"/>    <xs:enumeration value=\"J\"/>    <xs:enumeration value=\"K\"/>    <xs:enumeration value=\"L\"/>    <xs:enumeration value=\"M\"/>    <xs:enumeration value=\"N\"/>    <xs:enumeration value=\"O\"/>    <xs:enumeration value=\"P\"/>    <xs:enumeration value=\"Q\"/>    <xs:enumeration value=\"R\"/>    <xs:enumeration value=\"S\"/>    <xs:enumeration value=\"T\"/>    <xs:enumeration value=\"U\"/>    <xs:enumeration value=\"V\"/>    <xs:enumeration value=\"W\"/>    <xs:enumeration value=\"X\"/>    <xs:enumeration value=\"Y\"/>    <xs:enumeration value=\"Z\"/>    <xs:enumeration value=\".\"/>    <xs:enumeration value=\":\"/>    <xs:enumeration value=\",\"/>    <xs:enumeration value=\";\"/>    <xs:enumeration value=\" \"/>    <xs:enumeration value=\"_\"/>    <xs:enumeration value=\"\\ \"/>    <xs:enumeration value=\"\\ \"/>    <xs:enumeration value=\"\\\\0\"/>    <xs:enumeration value=\"quote\"/>   </xs:restriction>  </xs:simpleType>  <!--    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--    +++++++++++++++++++++++++++++++++++++++++++          CONTENT       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- content element -->  <xs:element name=\"content\">   <xs:annotation>    <xs:documentation>Data format descriptions split in two main containers (for huddl:block and huddl:stream) plus an optional container for mapping rules.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"huddl:blocks\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element ref=\"huddl:streams\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element ref=\"huddl:maps\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>   </xs:complexType>   <xs:key name=\"contentBlockExistenceKey\">    <xs:annotation>     <xs:documentation>Key used to enforce the existance of a block referred by a stream element</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:blocks/huddl:block\"/>    <xs:field xpath=\"@name\"/>   </xs:key>   <!--xs:keyref name=\"topBlockExistence\" refer=\"contentBlockExistenceKey\">    <xs:annotation>     <xs:documentation>Enforce the existance of a block for a top block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:streams/huddl:stream/huddl:topBlocks/huddl:topBlock\"/>    <xs:field xpath=\"@refBlock\"/>   </xs:keyref>   <xs:keyref name=\"headerExistence\" refer=\"huddl:contentBlockExistenceKey\">    <xs:annotation>     <xs:documentation>Enforce the existance of a block for a stream header</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:streams/huddl:stream/huddl:header\"/>    <xs:field xpath=\"@refBlock\"/>   </xs:keyref>   <xs:keyref name=\"tailExistence\" refer=\"huddl:contentBlockExistenceKey\">    <xs:annotation>     <xs:documentation>Enforce the existance of a block for a stream tail</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:streams/huddl:stream/huddl:tail\"/>    <xs:field xpath=\"@refBlock\"/>   </xs:keyref-->  </xs:element>  <!--    +++++++++++++++++++++++++++++++++++++++++++           BLOCKS         ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- blocks container -->  <xs:element name=\"blocks\">   <xs:annotation>    <xs:documentation>A container for all the blocks.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"huddl:block\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>   <xs:key name=\"blocksBlockNameExistenceKey\">    <xs:annotation>     <xs:documentation>Block @name uniqueness for each format</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:block\"/>    <xs:field xpath=\"@name\"/>   </xs:key>  </xs:element>  <!-- block element -->  <xs:element name=\"block\">   <xs:annotation>    <xs:documentation>Description of a data block</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:choice minOccurs=\"1\" maxOccurs=\"unbounded\">      <xs:element ref=\"huddl:field\" minOccurs=\"0\"/>      <xs:element ref=\"huddl:array1d\" minOccurs=\"0\"/>      <xs:element ref=\"huddl:delimited1d\" minOccurs=\"0\"/>      <xs:element ref=\"huddl:array2d\" minOccurs=\"0\"/>      <xs:element ref=\"huddl:vector1d\" minOccurs=\"0\"/>      <xs:element ref=\"huddl:vector2d\" minOccurs=\"0\"/>      <xs:element ref=\"huddl:substream\" minOccurs=\"0\"/>     </xs:choice>     <xs:choice minOccurs=\"0\" maxOccurs=\"1\">      <xs:element ref=\"huddl:pad\"/>      <xs:element ref=\"huddl:fixedlength\"/>     </xs:choice>     <xs:choice minOccurs=\"0\" maxOccurs=\"1\">      <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>     </xs:choice>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:token\" use=\"required\"/>    <xs:attribute name=\"moreInfo\" type=\"xs:anyURI\"/>   </xs:complexType>   <xs:unique name=\"uniqueBlockFieldName\">    <xs:annotation>     <xs:documentation>Field @name uniqueness for each block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:field\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>   <xs:unique name=\"uniqueBlockArray1dName\">    <xs:annotation>     <xs:documentation>Array1d @name uniqueness for each block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:array1d\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>   <xs:unique name=\"uniqueBlockDelimited1dName\">    <xs:annotation>     <xs:documentation>Delimited1d @name uniqueness for each block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:delimited1d\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>   <xs:unique name=\"uniqueBlockArray2dName\">    <xs:annotation>     <xs:documentation>Array2d @name uniqueness for each block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:array2d\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>   <xs:unique name=\"uniqueBlockVec1dName\">    <xs:annotation>     <xs:documentation>Vector1d @name uniqueness for each block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:vector1d\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>   <xs:unique name=\"uniqueBlockVec2dName\">    <xs:annotation>     <xs:documentation>Vector2d @name uniqueness for each block</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:vector2d\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>  </xs:element>  <!-- field element -->  <xs:element name=\"field\">   <xs:annotation>    <xs:documentation>Element used to describe the @name, the @type and (optionally) the validity range</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:choice minOccurs=\"0\" maxOccurs=\"1\">     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:choice>    <xs:attribute name=\"name\" type=\"xs:NCName\" use=\"required\"/>    <xs:attribute name=\"type\" type=\"huddl:PrimitiveType\" use=\"required\"/>    <xs:attribute name=\"minValue\" type=\"xs:float\"/>    <xs:attribute name=\"maxValue\" type=\"xs:float\"/>   </xs:complexType>  </xs:element>  <!-- padding element -->  <xs:element name=\"pad\">   <xs:annotation>    <xs:documentation>Used to signal the required alignment</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:choice minOccurs=\"0\" maxOccurs=\"1\">     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:choice>    <xs:attribute name=\"type\" type=\"huddl:PaddingType\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- fixedlength element -->  <xs:element name=\"fixedlength\">   <xs:annotation>    <xs:documentation>Used to signal a fixed length for the block</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:choice minOccurs=\"0\" maxOccurs=\"1\">     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:choice>    <xs:attribute name=\"size\" type=\"xs:positiveInteger\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- array 1d element -->  <xs:element name=\"array1d\">   <xs:annotation>    <xs:documentation>Element used to describe an array of fixed size.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:choice minOccurs=\"1\" maxOccurs=\"1\">      <xs:element name=\"huddlType\" type=\"huddl:PrimitiveType\"/>      <xs:element name=\"blockType\" type=\"xs:token\"/>     </xs:choice>     <xs:element name=\"nrElements\" type=\"xs:integer\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:choice minOccurs=\"0\" maxOccurs=\"1\">      <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>     </xs:choice>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:token\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- delimited 1d element -->  <xs:element name=\"delimited1d\">   <xs:annotation>    <xs:documentation>Element used to describe an 1d array delimited by a character.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:choice minOccurs=\"0\" maxOccurs=\"1\">      <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>     </xs:choice>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:token\" use=\"required\"/>    <xs:attribute name=\"huddlType\" type=\"huddl:PrimitiveType\" use=\"required\" fixed=\"huddl:u8\"/>    <xs:attribute name=\"delimiter\" type=\"huddl:DelimiterType\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- array2d element -->  <xs:element name=\"array2d\">   <xs:annotation>    <xs:documentation>Element used to describe an array of fixed size.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:choice minOccurs=\"1\" maxOccurs=\"1\">      <xs:element name=\"huddlType\" type=\"huddl:PrimitiveType\"/>      <xs:element name=\"blockType\" type=\"xs:anyURI\"/>     </xs:choice>     <xs:element name=\"rows\" type=\"xs:positiveInteger\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"columns\" type=\"xs:positiveInteger\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:NCName\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- Arithmetic Type -->  <xs:complexType name=\"ArithmeticType\">   <xs:annotation>    <xs:documentation>     Container type for arithmetic operation between block.fields and/or constants.    </xs:documentation>   </xs:annotation>   <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">    <xs:choice minOccurs=\"1\" maxOccurs=\"1\">     <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">      <xs:element name=\"lhsBlock\" type=\"xs:anyURI\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element name=\"lhsField\" type=\"xs:anyURI\" minOccurs=\"1\" maxOccurs=\"1\"/>     </xs:sequence>     <xs:element name=\"lhsConstant\" type=\"xs:integer\" minOccurs=\"1\" maxOccurs=\"1\"/>    </xs:choice>    <xs:element name=\"arithmeticOperator\" type=\"huddl:ArithOpType\" minOccurs=\"1\" maxOccurs=\"1\"/>    <xs:choice minOccurs=\"1\" maxOccurs=\"1\">     <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">      <xs:element name=\"rhsBlock\" type=\"xs:anyURI\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element name=\"rhsField\" type=\"xs:anyURI\" minOccurs=\"1\" maxOccurs=\"1\"/>     </xs:sequence>     <xs:element name=\"rhsConstant\" type=\"xs:integer\" minOccurs=\"1\" maxOccurs=\"1\"/>    </xs:choice>    <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>   </xs:sequence>  </xs:complexType>  <!-- vector element -->  <xs:element name=\"vector1d\">   <xs:annotation>    <xs:documentation>Element used to describe a vector of size defined by a field in the containing block.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:choice minOccurs=\"1\" maxOccurs=\"1\">      <xs:element name=\"huddlType\" type=\"huddl:PrimitiveType\"/>      <xs:element name=\"blockType\" type=\"xs:token\"/>     </xs:choice>     <xs:choice minOccurs=\"1\" maxOccurs=\"1\">      <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">       <xs:element name=\"sizeField\" type=\"xs:token\" minOccurs=\"1\" maxOccurs=\"1\"/>       <xs:choice minOccurs=\"0\" maxOccurs=\"1\">        <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">         <xs:element name=\"sizeInParent\" minOccurs=\"1\" maxOccurs=\"1\"/>         <xs:element name=\"add7over8\" minOccurs=\"0\" maxOccurs=\"1\"/>        </xs:sequence>        <xs:element name=\"convertSizeField\"/>        <xs:element name=\"hexStringBitCount\"/>       </xs:choice>      </xs:sequence>      <xs:element name=\"arithmeticField\" type=\"huddl:ArithmeticType\" minOccurs=\"1\" maxOccurs=\"1\"/>     </xs:choice>     <xs:element name=\"checkBit\" minOccurs=\"0\" maxOccurs=\"1\">      <xs:complexType>       <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">        <xs:element name=\"bitField\" type=\"xs:token\" minOccurs=\"1\" maxOccurs=\"1\"/>        <xs:element name=\"bitMask\" type=\"huddl:BitMaskType\" minOccurs=\"1\" maxOccurs=\"1\"/>       </xs:sequence>      </xs:complexType>     </xs:element>     <xs:choice minOccurs=\"0\" maxOccurs=\"1\">      <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>     </xs:choice>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:token\" use=\"required\"/>   </xs:complexType>  </xs:element>  <xs:element name=\"vector2d\">   <xs:annotation>    <xs:documentation>Element used to describe a vector of size defined by a field in the containing block.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:choice minOccurs=\"1\" maxOccurs=\"1\">      <xs:element name=\"huddlType\" type=\"huddl:PrimitiveType\"/>      <xs:element name=\"blockType\" type=\"xs:token\"/>     </xs:choice>     <xs:element name=\"idx1Block\" type=\"xs:token\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element name=\"idx1Field\" type=\"xs:token\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"idx2Block\" type=\"xs:token\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element name=\"idx2Field\" type=\"xs:token\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:choice minOccurs=\"0\" maxOccurs=\"1\">      <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>      <xs:element ref=\"note\" minOccurs=\"0\" maxOccurs=\"1\"/>     </xs:choice>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:token\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- substream element -->  <xs:element name=\"substream\">   <xs:annotation>    <xs:documentation>Container for a substream with information about header, tail and top blocks</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:element ref=\"subheader\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"topBlocks\" minOccurs=\"1\" maxOccurs=\"1\">      <xs:complexType>       <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">        <xs:element name=\"topBlock\" type=\"huddl:topBlockType\"/>       </xs:choice>      </xs:complexType>     </xs:element>     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"name\" type=\"xs:token\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!-- substream header fields -->  <xs:element name=\"subheader\">   <xs:annotation>    <xs:documentation>A block used to cluster initial fields common to all the top blocks in a substream. It must have a discriminator field.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"refBlock\" type=\"xs:string\" use=\"required\"/>    <xs:attribute name=\"discriminator\" type=\"xs:string\" use=\"required\"/>    <xs:attribute name=\"sizer\" type=\"xs:string\" use=\"required\"/>    <xs:attribute name=\"validator\" type=\"xs:boolean\"/>   </xs:complexType>  </xs:element>  <!--    +++++++++++++++++++++++++++++++++++++++++++           STREAMS        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- streams container -->  <xs:element name=\"streams\">   <xs:annotation>    <xs:documentation>A container for all the streams.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"huddl:stream\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>   <xs:unique name=\"uniqueStreamRevID\">    <xs:annotation>     <xs:documentation>Stream @revID uniqueness for each format</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:stream\"/>    <xs:field xpath=\"@revID\"/>   </xs:unique>   <xs:unique name=\"uniqueStreamScope\">    <xs:annotation>     <xs:documentation>Stream @scope uniqueness for each format</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:stream\"/>    <xs:field xpath=\"@scope\"/>   </xs:unique>  </xs:element>  <!-- stream element -->  <xs:element name=\"stream\">   <xs:annotation>    <xs:documentation>Container for a stream with information about header, tail and top blocks</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:element ref=\"header\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"topBlocks\" minOccurs=\"1\" maxOccurs=\"1\">      <xs:complexType>       <xs:choice minOccurs=\"0\" maxOccurs=\"unbounded\">        <xs:element name=\"topBlock\" type=\"huddl:topBlockType\"/>       </xs:choice>      </xs:complexType>     </xs:element>     <xs:element ref=\"tail\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"revID\" type=\"huddl:RevIDType\" use=\"required\"/>    <xs:attribute name=\"scope\" type=\"huddl:ScopeNameType\" use=\"required\"/>    <xs:attribute name=\"moreInfo\" type=\"xs:anyURI\"/>    <xs:attribute name=\"resynch\" type=\"xs:positiveInteger\"/>    <xs:attribute name=\"reclen\" type=\"xs:positiveInteger\"/>   </xs:complexType>   <!-- key since it must exist -->   <xs:key name=\"uniqueTopBlocksAlias\">    <xs:annotation>     <xs:documentation>TopBlock @alias uniqueness for each stream</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:topBlocks/huddl:topBlock\"/>    <xs:field xpath=\"@alias\"/>   </xs:key>  </xs:element>  <!-- header fields -->  <xs:element name=\"header\">   <xs:annotation>    <xs:documentation>A block used to cluster initial fields common to all the top blocks. It must have a discriminator field.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"refBlock\" type=\"xs:string\" use=\"required\"/>    <xs:attribute name=\"discriminator\" type=\"xs:string\" use=\"required\"/>    <xs:attribute name=\"sizer\" type=\"xs:string\" use=\"optional\"/>    <xs:attribute name=\"sizerBias\" type=\"xs:integer\" use=\"optional\"/>    <xs:attribute name=\"validator\" type=\"xs:boolean\"/>   </xs:complexType>  </xs:element>  <!-- tail fields -->  <xs:element name=\"tail\">   <xs:annotation>    <xs:documentation>A block used to cluster final fields common to all the top blocks.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"refBlock\" type=\"xs:string\"/>    <xs:attribute name=\"validator\" type=\"xs:boolean\"/>   </xs:complexType>  </xs:element>  <!-- reference to an existing block in the stream top blocks list -->  <xs:complexType name=\"topBlockType\">   <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">    <xs:element name=\"notes\" type=\"huddl:StatementsType\" minOccurs=\"0\" maxOccurs=\"1\"/>   </xs:sequence>   <xs:attribute name=\"refBlock\" type=\"xs:string\" use=\"required\"/>   <xs:attribute name=\"alias\" type=\"xs:string\" use=\"required\"/>   <xs:attribute name=\"identifier\" type=\"xs:string\" use=\"required\"/>  </xs:complexType>  <!--    +++++++++++++++++++++++++++++++++++++++++++            MAPS        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- maps container -->  <xs:element name=\"maps\">   <xs:annotation>    <xs:documentation>A container for all the mapping rules.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"huddl:map\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <xs:element name=\"map\">   <xs:annotation>    <xs:documentation>A map with all the rules for a stream. For future development.</xs:documentation>   </xs:annotation>  </xs:element>  <!--    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--    +++++++++++++++++++++++++++++++++++++++++++          PROLOG       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- prolog element -->  <xs:element name=\"prolog\">   <xs:annotation>    <xs:documentation>Container for general information about the data format,</xs:documentation>    <xs:documentation>This is an optional element.</xs:documentation>    <xs:documentation>It contains a title and several optional elements: many possible alternate titles, a document number, a reference date, the organization that maintains the format, the revision history</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element name=\"title\" type=\"xs:string\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"alternateTitle\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>     <xs:element name=\"documentNumber\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element name=\"date\" type=\"xs:date\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"organization\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"history\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"copyright\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"disclaimer\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"warning\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"supportInfo\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"generalNotes\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"verboseDescription\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- organization element -->  <xs:element name=\"organization\">   <xs:annotation>    <xs:documentation>Container for information about the organization that maintains the format.</xs:documentation>    <xs:documentation>This is an optional element.</xs:documentation>    <xs:documentation>It containes the name of the organization and, as optional element, the responsible party (an individual or office responsible for the format specification) and contact information (e.g., phone, fax, email)</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element name=\"name\" type=\"xs:string\" minOccurs=\"1\" maxOccurs=\"1\"/>     <xs:element name=\"responsibleParty\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element name=\"contactInfo\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- history element -->  <xs:element name=\"history\">   <xs:annotation>    <xs:documentation>Container for the revision history of the descrived format specification.</xs:documentation>    <xs:documentation>This is an optional element.</xs:documentation>    <xs:documentation>It contains at least one revision record.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence>     <xs:element ref=\"huddl:revision\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>   <!-- rule to force revID uniqueness -->   <xs:unique name=\"uniqueRevisionID\">    <xs:selector xpath=\"huddl:revision\"/>    <xs:field xpath=\"@revID\"/>   </xs:unique>  </xs:element>  <!-- revision element -->  <xs:element name=\"revision\">   <xs:annotation>    <xs:documentation>Container for the details about a revision. The parent huddl:history must contain at least one revision record.</xs:documentation>    <xs:documentation>It contains a mandatory identification attribute used to uniquely identify a revision</xs:documentation>    <xs:documentation>The optional elements are: the date of the revision, the revision author or responsible, and a description of the changes related to a given revision.</xs:documentation>    <xs:documentation>This is an optional element.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element name=\"description\" type=\"xs:string\" minOccurs=\"0\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"revID\" type=\"huddl:RevIDType\" use=\"required\"/>    <xs:attribute name=\"date\" type=\"xs:date\"/>    <xs:attribute name=\"author\" type=\"xs:string\"/>   </xs:complexType>  </xs:element>  <!-- copyright element -->  <xs:element name=\"copyright\">   <xs:annotation>    <xs:documentation>Container for at least one copyright statement. Optional.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- disclaimer element -->  <xs:element name=\"disclaimer\">   <xs:annotation>    <xs:documentation>Container for at least one disclaimer statement. Optional.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- warning element -->  <xs:element name=\"warning\">   <xs:annotation>    <xs:documentation>Container for at least one warning statement. Optional.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- supportInfo element -->  <xs:element name=\"supportInfo\">   <xs:annotation>    <xs:documentation>Container for at least one support information statement. Optional.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- generalNotes element -->  <xs:element name=\"generalNotes\">   <xs:annotation>    <xs:documentation>Container for at least one general note statement. Optional.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!-- verboseDescription element -->  <xs:element name=\"verboseDescription\">   <xs:annotation>    <xs:documentation>Container for at least one additional verbose description statement. Optional.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"note\" minOccurs=\"1\" maxOccurs=\"unbounded\"/>    </xs:sequence>   </xs:complexType>  </xs:element>  <!--    +++++++++++++++++++++++++++++++++++++++++++            T  O  P        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!--    +++++++++++++++++++++++++++++++++++++++++++          FORMAT       ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- format element -->  <xs:element name=\"format\">   <xs:annotation>    <xs:documentation>Container for all the elements required to describe a given data format</xs:documentation>    <xs:documentation>This element has: an optional prolog section, a compulsory content section, and a mandatory (and unique) name attribute</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"huddl:prolog\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:element ref=\"huddl:content\" minOccurs=\"1\" maxOccurs=\"1\"/>    </xs:sequence>    <xs:attribute name=\"name\" use=\"required\"/>    <xs:attribute name=\"scope\" type=\"huddl:ScopeNameType\" use=\"required\"/>   </xs:complexType>  </xs:element>  <!--    +++++++++++++++++++++++++++++++++++++++++++           ROOT        ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++   -->  <!-- huddl:schema -->  <xs:element name=\"schema\" id=\"schema\">   <xs:annotation>    <xs:documentation>The HFD root element</xs:documentation>    <xs:documentation>The root element may contain multiple huddl:format, each of them describing a data format specification.</xs:documentation>    <xs:documentation>This element has a mandatory version attribute.</xs:documentation>   </xs:annotation>   <xs:complexType>    <xs:sequence minOccurs=\"1\" maxOccurs=\"1\">     <xs:element ref=\"huddl:documentation\" minOccurs=\"0\" maxOccurs=\"1\"/>     <xs:sequence minOccurs=\"1\" maxOccurs=\"unbounded\">      <xs:element ref=\"huddl:format\" minOccurs=\"1\" maxOccurs=\"1\"/>     </xs:sequence>    </xs:sequence>    <xs:attribute name=\"version\" use=\"required\"/>   </xs:complexType>   <xs:unique name=\"uniqueFormatName\">    <xs:annotation>     <xs:documentation>Format @name uniqueness for each HFD</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:format\"/>    <xs:field xpath=\"@name\"/>   </xs:unique>   <xs:unique name=\"uniqueFormatScope\">    <xs:annotation>     <xs:documentation>Format @scope uniqueness for each HFD</xs:documentation>    </xs:annotation>    <xs:selector xpath=\"huddl:format\"/>    <xs:field xpath=\"@scope\"/>   </xs:unique>  </xs:element> </xs:schema> ", 
    "identity": {
        "subtype": "", 
        "is_error": false, 
        "version": "", 
        "protocol": "", 
        "language": "", 
        "service": "", 
        "has_dataset": false, 
        "has_metadata": false
    }, 
    "digest": "af4853ddca6063dce7580382e03fa9ed", 
    "source_url": "https://huddl.ccom.unh.edu/schemas/1.0.0/huddl_monolithic.xsd"
}