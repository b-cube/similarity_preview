{
    "content": "<?xml version=\"1.0\"?> <feed xmlns=\"http://www.w3.org/2005/Atom\" xmlns:planet=\"http://planet.intertwingly.net/\" xmlns:indexing=\"urn:atom-extension:indexing\" indexing:index=\"no\"><access:restriction xmlns:access=\"http://www.bloglines.com/about/specs/fac-1.0\" relationship=\"deny\"/>   <title>Planet Pitivi</title>   <updated>2015-03-19T08:45:10Z</updated>   <generator uri=\"http://intertwingly.net/code/venus/\">Venus</generator>   <author>     <name>Jean-Fran\\ufffd\\ufffdois Fortin Tam</name>     <email>nekohayo@gmail.com</email>   </author>   <id>http://pitivi.org/planet/atom.xml</id>   <link href=\"http://pitivi.org/planet/atom.xml\" rel=\"self\" type=\"application/atom+xml\"/>   <link href=\"http://pitivi.org/planet/\" rel=\"alternate\"/>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2733</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/11/02/tricks-or-tracebacks-pitivi-0-94-is-here/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F11%2F02%2Ftricks-or-tracebacks-pitivi-0-94-is-here%2F&amp;language=en_GB&amp;category=software&amp;title=Tricks+or+Tracebacks%3F+Pitivi+0.94+is+here&amp;description=Dear+werepenguins%2C+we%26%238217%3Bre+thrilled+to+announce+the+immediate+availability+of+Pitivi+0.94%21+This+is+the+fourth+release+for+the+new+version+of+our+video+editor+based+on+GES%2C+the+GStreamer...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Tricks or Tracebacks? Pitivi 0.94 is here</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Dear werepenguins, we\\ufffd\\ufffd\\ufffdre thrilled to announce the immediate availability of Pitivi 0.94! This is the fourth release for the new version of our video editor based on GES, the GStreamer Editing Services library. Take a look at my previous blog \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/11/02/tricks-or-tracebacks-pitivi-0-94-is-here/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Dear werepenguins, we\\ufffd\\ufffd\\ufffdre <a href=\"https://www.youtube.com/watch?v=sOnqjkJTMaA#t=9m20s\">thrilled</a> to announce the immediate availability of <a href=\"http://pitivi.org\">Pitivi</a> 0.94! This is the fourth release for the new version of our video editor based on GES, the GStreamer Editing Services library. Take a look at my <a href=\"http://jeff.ecchi.ca/blog/2014/10/03/an-update-from-the-pitivi-2014-summer-battlefront/\" title=\"An update from the Pitivi 2014 summer battlefront\">previous blog post</a> to understand in what context 0.94 has been brewing. This is mainly a maintenance release, but it does pack a few interesting improvements &amp; features in addition to the bug fixes.</p> <p><span id=\"more-2733\"/></p> <p>The first thing you will notice is that the main toolbar, menubar and titlebar have been replaced by a unified GTK HeaderBar, saving a ton of precious vertical space and making better use of the horizontal space. Once you try it, you can\\ufffd\\ufffd\\ufffdt go back. There is beauty in the equilibrium it has now, compared to the previously clunky and unbalanced layout:</p> <div class=\"wp-caption alignnone\" id=\"attachment_2734\" style=\"width: 594px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-0.94-headerbar-comparison-1.png\"><img alt=\"pitivi 0.94 headerbar comparison 1\" class=\"wp-image-2734 size-large\" height=\"161\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-0.94-headerbar-comparison-1-1024x283.png\" width=\"584\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Pitivi 0.93 on the left, 0.94 on the right</p></div> <p>The combined screenshot above allows you to get the \\ufffd\\ufffd\\ufffdcomplete picture\\ufffd\\ufffd\\ufffd of how this change affects the main window, but it\\ufffd\\ufffd\\ufffds hard to get a sense of scale and it does not really do justice to the awesomeness of client-side decorations like the GTK HeaderBar. So here\\ufffd\\ufffd\\ufffds a simplified version where all the \\ufffd\\ufffd\\ufffdwasted space\\ufffd\\ufffd\\ufffd is highlighted in red:</p> <div class=\"wp-caption alignnone\" id=\"attachment_2735\" style=\"width: 594px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-0.94-headerbar-comparison-2.png\"><img alt=\"pitivi 0.94 headerbar comparison 2\" class=\"wp-image-2735 size-large\" height=\"169\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-0.94-headerbar-comparison-2-1024x297.png\" width=\"584\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Pitivi 0.93 above, 0.94 below</p></div> <p>Pretty rad, huh?</p> <p>Beyond that eye-popping novelty, many distro/setup-dependent startup crashes have been investigated and fixed:</p> <ul> <li>Various Linux distributions have started shipping a broken version of CoGL in recent months, which led to crashes. Technically this is <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=727325\">a bug</a> in the CoGL library/packaging, but we found out that the functions we were calling in that particular case were not needed for Pitivi, so we dropped our use of those broken CoGL APIs. Problem solved.</li> <li>People running Pitivi outside of GNOME Shell were seeing crashes due to Clutter GStreamer video output, so we ported the viewer widget to use GStreamer\\ufffd\\ufffd\\ufffds new GL video output (glimagesink) instead of the ClutterSink. We had to fix various bugs in GStreamer\\ufffd\\ufffd\\ufffds glimagesink to raise it to the quality we needed, and our fixes have been integrated in GStreamer 1.4 (this is why we depend on that version). The GL image sink is expected to be a more future-proof solution.</li> <li>We found issues related to gobject introspection or the overrides provided by gst-python. Again, make sure you have version 1.4 for things to work properly.</li> <li>On avant-garde Linux distributions, you would get a TypeError traceback (\\ufffd\\ufffd\\ufffdunsupported operand type(s) for /: \\ufffd\\ufffd\\ufffdint\\ufffd\\ufffd\\ufffd and \\ufffd\\ufffd\\ufffdNoneType\\ufffd\\ufffd\\ufffd) preventing startup, which we investigated as <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=735529\">bug 735529</a>. This is now fixed in Pitivi.</li> </ul> <p>We also have a collection of bug fixes to the way we handle the various resizeable &amp; detachable components of the main window:</p> <ul> <li>The default positioning of UI components (when starting from a fresh install) has been improved to be balanced properly</li> <li>Undocked window components do not shift position on startup anymore</li> <li>Docked window components do not shift position on startup anymore, when the window is not maximized. When the window is maximized, the issue remains (your help to investigate this problem is very much welcome, see <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=723061\">bug 723061</a>)</li> </ul> <p>The title editor\\ufffd\\ufffd\\ufffds UI has been simplified and works much more reliably:</p> <p><img alt=\"pitivi 0.94 title editor\" class=\"alignnone size-full wp-image-2736\" height=\"331\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-0.94-title-editor.png\" width=\"709\"/></p> <p>Also:</p> <ul> <li>Undo/redo should be globally working again; please file specific bug reports for the parts that don\\ufffd\\ufffd\\ufffdt.</li> <li>Pitivi has been ported to Python 3</li> <li>The user manual is now up to date with the state of the new Pitivi series</li> <li>Educational infobars throughout the UI have been tweaked to make their colors less intrusive</li> <li>Various other fixes as usual. Testing and providing detailed reports for issues you encounter certainly helps!</li> <li>There\\ufffd\\ufffd\\ufffds more. Find out in the <a href=\"http://wiki.pitivi.org/wiki/0.94\">release notes for 0.94</a>!</li> </ul> <p>This release is meant to be the last release based on our current \\ufffd\\ufffd\\ufffdbuggy stack\\ufffd\\ufffd\\ufffd; indeed, as I mentioned in my <a href=\"http://jeff.ecchi.ca/blog/2014/10/03/an-update-from-the-pitivi-2014-summer-battlefront/\" title=\"An update from the Pitivi 2014 summer battlefront\">previous status update</a>, the next release (0.95) will run on top of a refined and incredibly more robust backend thanks to the work that Mathieu and Thibault have been doing to replace GNonLin by NLE (the new non-linear engine for GES) and fixing videomixing issues.</p> <p>We recommend all 0.91/0.92/0.93 users to upgrade to this release. Until this trickles down into distributions, you can download our <a href=\"http://fundraiser.pitivi.org/download-bundles\">all-in-one bundle</a> and try out 0.94, right here and now. Enjoy!</p></div>     </content>     <updated>2014-11-03T04:30:35Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"R&#xE9;alisations\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2724</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/10/03/an-update-from-the-pitivi-2014-summer-battlefront/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F10%2F03%2Fan-update-from-the-pitivi-2014-summer-battlefront%2F&amp;language=en_GB&amp;category=software&amp;title=An+update+from+the+Pitivi+2014+summer+battlefront&amp;description=Hello+gentle+readers%21+You+may+have+been+wondering+what+has+been+going+on+since+the+0.93+release+and+the+Pitivi+fundraising+campaign.+There+are+a+few+reasons+why+we%E2%80%99ve+been...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>An update from the Pitivi 2014 summer battlefront</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Hello gentle readers! You may have been wondering what has been going on since the 0.93 release and the Pitivi fundraising campaign. There are a few reasons why we\\ufffd\\ufffd\\ufffdve been quiet on the blogging side this summer: Mathieu and Thibault \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/10/03/an-update-from-the-pitivi-2014-summer-battlefront/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Hello gentle readers! You may have been wondering what has been going on since the 0.93 release and the <a href=\"http://fundraiser.pitivi.org\">Pitivi fundraising campaign</a>. There are a few reasons why we\\ufffd\\ufffd\\ufffdve been quiet on the blogging side this summer:<span id=\"more-2724\"/></p> <ul> <li>Mathieu and Thibault have been working hard to bring us towards \\ufffd\\ufffd\\ufffd1.0 quality\\ufffd\\ufffd\\ufffd, improving and stabilizing various parts of GStreamer to make the backend of Pitivi more reliable (more details on this further below). They preferred to write code rather than spending their time doing marketing/fundraising. This is understandable, it is a better use of our scarce specialized resources.</li> <li>Personally, I have been juggling with many obligations (my daily business, preparing for the conferences season, serving on the board of the GNOME Foundation, and Life in General), which left me with pretty much no time or energy to do development on marketing-related activities on Pitivi, just enough to participate in some discussions and help with administration/co-mentorship a bit. I did not have time to research blogging material about what others were doing, hence the lack of status updates in recent times.</li> </ul> <p>Now that I <i>finally</i> have a little bit of time on my hands, I will provide you with the overdue high-level status update from the trenches.</p> <div class=\"wp-caption alignnone\" id=\"attachment_2727\" style=\"width: 608px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><img alt=\"\" class=\"wp-image-2727 size-full\" height=\"342\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/ptv-summer-wars.jpg\" width=\"598\"/><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Summer Wars. That\\ufffd\\ufffd\\ufffds totally how coding happens in the real world.</p></div> <h2>GUADEC, status of the 2014 fundraiser</h2> <p>For the curious among you, my account of GUADEC 2014 is <a href=\"http://jeff.ecchi.ca/blog/2014/08/06/retour-de-guadec-conspirations/\" title=\"Retour de GUADEC, conspirations\">here</a>. Among the multiple presentations I gave there, my main talk was about Pitivi. I touched upon the status of the fundraiser in my talk; however, the recordings are not yet available, so I\\ufffd\\ufffd\\ufffdll share some select notes on this topic here:</p> <ul> <li>Personally, I\\ufffd\\ufffd\\ufffdve always thought that, to be worth it, we should raise 200 thousand dollars per year, minimum (you\\ufffd\\ufffd\\ufffdll be able to hear the explanation for this belief of mine in the economic context I presented in my talk).</li> <li>For this fundraiser, we aimed for a \\ufffd\\ufffd\\ufffdmodest\\ufffd\\ufffd\\ufffd minimum target of 35k and an \\ufffd\\ufffd\\ufffdoptimistic\\ufffd\\ufffd\\ufffd target of 100k. So, much less than 200k.</li> <li>Early on after the campaign launch, we had to scale back on hopes of hitting the \\ufffd\\ufffd\\ufffdoptimistic\\ufffd\\ufffd\\ufffd target and set 35k as the new \\ufffd\\ufffd\\ufffdmaximum\\ufffd\\ufffd\\ufffd we could expect, as it became clear from the trend that we would not reach 100k.</li> <li>Eventually, the fundraiser reached its plateau, at approximately 19K \\ufffd\\ufffd\\ufffd, a little bit over half of our base target.</li> </ul> <p>We had a flexible funding scheme, a great website and fundraising approach, we have the reputation and the skills to deliver, we had one of the best run campaigns out there (we actually got praised on that)\\ufffd\\ufffd\\ufffd and yet, it seems that was not enough. <img alt=\"shrug\" class=\"aligncenter wp-image-2726 size-full\" height=\"277\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/shrug.jpeg\" style=\"display: block; margin-right: auto; margin-left: auto;\" width=\"350\"/>After four months spent preparing and curating our fundraiser, at one point we had to reassess our priorities and focus on \\ufffd\\ufffd\\ufffdmore urgent\\ufffd\\ufffd\\ufffd things than full-time fundraising: improving code, earning a living, etc. Pushing further would have meant many more months of energy-draining marketing work which, as mentioned in the introduction of this post, was not feasible or productive for us at that point in time. Our friends at MediaGoblin certainly succeeded, in big part through their amazing focus and persistence (Chris Webber spent three months writing substantial motivational blog posts <i>twice a week</i> and applying for grants to achieve his goal. Think about it: <i>fourteen</i> blog articles!).</p> <p>Okay so now you\\ufffd\\ufffd\\ufffdre thinking, \\ufffd\\ufffd\\ufffdBut you still got a bit of money, so what have you guys done with that?\\ufffd\\ufffd\\ufffd. We\\ufffd\\ufffd\\ufffdve accomplished some great QA/bugfixing work, just not as fast or as extensively as we\\ufffd\\ufffd\\ufffdd like to. Pitivi 1.0 <i>will</i> happen but, short of seeing a large amount of donations, it will take more time to reach that goal (unless people step up with patches :).</p> <h2>What Mathieu &amp; Thibault have been up to</h2> <p>For starters, they set up a continuous integration and multi-platform build system for quality assurance.</p> <p>Then they worked on the GStreamer video mixer, basically doing a complete rework of our mixing stack, and made the beast thread-safe\\ufffd\\ufffd\\ufffd this is supposed to fix a ton of deadlocks related to videomixing that were killing our user experience by causing frequent freezes. They are preparing a blog post specifically on this topic, but in the meantime you can see some gory details by looking at these commits they landed in GStreamer so far (more are on the way, pending review):</p> <ul> <li><a href=\"http://cgit.freedesktop.org/gstreamer/gst-plugins-bad/commit/?id=55c65d079f7fcdecdd5500a249507ed78b80bb0a\">Add new GstAggregator base class</a></li> <li><a href=\"http://cgit.freedesktop.org/gstreamer/gst-plugins-bad/commit/?id=7cf66e7c075417fd07b2ae1ea3f7afcbf593d7b9\">Create a new GstVideoAggregator baseclass</a></li> <li><a href=\"http://cgit.freedesktop.org/gstreamer/gst-plugins-bad/commit/?id=4ce8b409cc30d80c5d6ce949965789036e2269d6\">Port glmixer to the GstVideoAggregator baseclass</a></li> <li><a href=\"http://cgit.freedesktop.org/gstreamer/gst-plugins-bad/commit/?id=11fa711c34028b816702a748456f97de326b1e91\">Add a new compositor based on the new GstVideoAggregator base class</a></li> <li><a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=737183\">Port the audiomixer to GstAggregator</a> (bug report)</li> </ul> <p>Then they pretty much rewrote all of <a href=\"http://wiki.pitivi.org/wiki/GNonLin\">GNonLin</a> with a different, simpler design, and integrated it directly into <a href=\"http://wiki.pitivi.org/wiki/GES\">GES</a> under a new name: \\ufffd\\ufffd\\ufffdNLE\\ufffd\\ufffd\\ufffd (Non Linear Engine):</p> <p><img alt=\"d82acb9454ea65266f23a4c6cc305bb4\" class=\"alignnone size-full wp-image-2728\" height=\"354\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/d82acb9454ea65266f23a4c6cc305bb4.jpg\" width=\"630\"/></p> <p>The only part that survived from GNonLin, as far as I know, is the tree data structure generation. So, with \\ufffd\\ufffd\\ufffdNLE\\ufffd\\ufffd\\ufffd in GES, deadlocks from GNonLin should be a thing of the past; seeking around should be <i>much</i> more reliable and not cause freezes like it used to. This is still a major chunk of code: it represents around six thousand lines of new code in GES. Work is <a href=\"http://cgit.collabora.com/git/user/tsaunier/gst-editing-service/log/?h=nle\">ongoing</a> in this branch, expected to be completed and merged sometime in October, so I\\ufffd\\ufffd\\ufffdm waiting to see what comes out of it in practice.</p> <p>This is in addition to crazy bugs like <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=736896\">bug 736896</a> and our regular bug fixing operations. See also the <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=682886\">Pitivi tracker bug for GTK3, introspection and GST1 bugs</a> and the <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=729527\">Pitivi tracker bug for Python3 port issues</a>.</p> <h2>The way forward</h2> <p>Now that a big chunk of the hardcore backend work has been done, Thibault and Mathieu will be able to focus on Pitivi (the UI) again. Here is the rough plan for coming months:</p> <ol> <li><a href=\"https://github.com/thiblahute/pitivi/commits/scenarios\">\\ufffd\\ufffd\\ufffdScenarios\\ufffd\\ufffd\\ufffd in Pitivi</a>: each action from the user would be serialized (saved) as <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-validate/html/ScenarioFileFormat.html\">GstValidateScenario</a> actions, allowing us to easily reproduce issues and bugs that you encounter.</li> <li>Go over the list of all reported Pitivi bugs and fix a crapton of them!</li> <li>At some point, we will call upon you to help us with extensive testing (including reporting the bugs and discussing with us to investigate them). We will then continue fixing bugs, release often and make sure we reach the quality you can expect of a 1.0 release.</li> </ol> <h2>More news to come</h2> <p>That\\ufffd\\ufffd\\ufffds it for today, but you can look forward to more status updates in the near future. The following topics shall be covered in separate blog posts:</p> <ul> <li>Details on our thread-safe mixing elements reimplementation</li> <li><a href=\"http://jeff.ecchi.ca/blog/2014/11/02/tricks-or-tracebacks-pitivi-0-94-is-here/\" title=\"Tricks or Tracebacks? Pitivi 0.94 is here\">The 0.94 release</a></li> <li>A general status update on the outcome of our 2014 GSoC projects</li> <li>\\ufffd\\ufffd\\ufffdGNonLin is dead, long live NLE\\ufffd\\ufffd\\ufffd</li> <li>Closure of the fundraiser</li> </ul></div>     </content>     <updated>2014-10-04T03:23:34Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"Vie personnelle\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://kargertom.wordpress.com/?p=47</id>     <link href=\"https://kargertom.wordpress.com/2014/09/11/recent-changes-in-pitivi-user-documentation/\" rel=\"alternate\" type=\"text/html\"/>     <title>Recent Changes in Pitivi User Documentation</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I feel like the basic (re)writing of Pitivi user docs is done so I thought I should take a while to describe the current state of the docs and point to further tasks that need to be done. When I started, nekohayo gave me his to-do list that he kept specifically for docs, which helped [\\ufffd\\ufffd\\ufffd]<img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=kargertom.wordpress.com&amp;blog=66021007&amp;post=47&amp;subd=kargertom&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>I feel like the basic (re)writing of <a href=\"http://pitivi.org/manual/\">Pitivi user docs</a> is done so I thought I should take a while to describe the current state of the docs and point to further tasks that need to be done. When I started, nekohayo gave me his to-do list that he kept specifically for docs, which helped me to get going. For the first commit, the choice was clear: add Pitivi\\ufffd\\ufffd\\ufffds license to the manual\\ufffd\\ufffd\\ufffds license page. As close to a one-liner as you can get. Soon, I got into the flow and as a result, the user manual now looks a little more complete. Of course there are some remaining issues I haven\\ufffd\\ufffd\\ufffdt had time to cover yet. These are mostly tracked in <a href=\"https://bugzilla.gnome.org/buglist.cgi?query_format=advanced;order=Importance;bug_status=UNCONFIRMED;bug_status=NEW;bug_status=ASSIGNED;bug_status=REOPENED;bug_status=NEEDINFO;component=Documentation;product=pitivi\">bugzilla</a>.</p> <p>Also, screenshots should be updated in the manual, but I was postponing this intentionally for two reasons. First, there might be some slight UI changes on the way to 1.0 and second, it is not a big deal since the gnome docs team recommends (because of the difficulties this poses for docs translation) to use only one screenshot \\ufffd\\ufffd\\ufffd that of the main window overview. So the screenshot is just waiting for the right time to be switched.</p> <p>More interestingly, I have an experimental branch containing a troubleshooting page. I know that the Pitivi developers work hard to clear all issues that would possibly need troubleshooting, but in the meantime, I thought this page could provide some guidance. You can look at the <a href=\"https://github.com/tomak-git/pitivi/tree/trouble\" target=\"_blank\">branch</a> in my Github repository. Any thoughts or comments are appreciated!</p><img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=kargertom.wordpress.com&amp;blog=66021007&amp;post=47&amp;subd=kargertom&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2014-09-11T12:23:42Z</updated>     <category term=\"Pitivi\"/>     <category term=\"documentation\"/>     <category term=\"manual\"/>     <category term=\"pitivi\"/>     <author>       <name>tomaker</name>     </author>     <source>       <id>https://kargertom.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://kargertom.wordpress.com/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://kargertom.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://kargertom.wordpress.com/osd.xml\" rel=\"search\" title=\"TomKarger\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://kargertom.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Random thoughts of a technographer.</subtitle>       <title>TomKarger \\ufffd\\ufffd Pitivi</title>       <updated>2015-03-19T08:45:07Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://blogs.gnome.org/edwardrv/?p=122</id>     <link href=\"http://blogs.gnome.org/edwardrv/2014/08/29/wow-7-years/\" rel=\"alternate\" type=\"text/html\"/>     <title>Wow, 7 years\\ufffd\\ufffd\\ufffd.</title>     <summary>Originally post to Collabora co-workers: 7 years since starting the Collabora Multimedia adventure,7 years of challenges, struggles, and proving we could tackle them7 years of success, pushing FOSS in more and more areas (I can still hear Christian say \\ufffd\\ufffd\\ufffdde facto\\ufffd\\ufffd\\ufffd !)7 years of friendship, jokes, rants,7 years of being challenged to outperform one self,7 [\\ufffd\\ufffd\\ufffd]</summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Originally post to <a href=\"http://www.collabora.com/\" target=\"_blank\" title=\"Collabora\">Collabora</a> co-workers:</p> <blockquote><p><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years since starting the Collabora Multimedia adventure,</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of challenges, struggles, and proving we could tackle them</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of success, pushing FOSS in more and more areas (I can still</span> <span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">hear Christian say \\ufffd\\ufffd\\ufffdde facto\\ufffd\\ufffd\\ufffd !)</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of friendship, jokes, rants,</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of being challenged to outperform one self,</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of realizing you were working with the smartest and brightest</span> <span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">engineers out there,</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of pushing the wtf-meter all the way to 11, yet translating that</span> <span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">in a politically correct fashion to the clients</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years of life \\ufffd\\ufffd\\ufffd</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">7 years \\ufffd\\ufffd\\ufffd that will never be forgotten, thanks to all of you</span><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><br style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px;\"/><span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">It\\ufffd\\ufffd\\ufffds never easy \\ufffd\\ufffd\\ufffd but it\\ufffd\\ufffd\\ufffds time for me to take a long overdue break,</span> <span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">see what other exciting things life has to offer, and start a new</span> <span style=\"color: #6a6f6e; font-family: Monospace; font-size: 15px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; text-align: start; text-indent: 0px; background-color: #f7f7f5; float: none;\">chapter.</span></p></blockquote> <p>So today is my last day at Collabora. I\\ufffd\\ufffd\\ufffdve decided that after 17 years of non-stop study and work (i.e. since I last took more than 2 weeks vacation in a row), it was time to take a break.</p> <p>What\\ufffd\\ufffd\\ufffds next ? Tackling that insane todo-list one compiles over time but never gets to tackle :). Some hacking and GStreamer (obviously), some other life related stuff, traveling, visiting friends, exploring new technologies and fields I haven\\ufffd\\ufffd\\ufffdt had time to look deeper into until now, maybe do some part-time teaching, write more articles and blogposts, take on some freelance work here and there, \\ufffd\\ufffd\\ufffd But essentially, be in full control of what I\\ufffd\\ufffd\\ufffdm doing for the next 6-12 months.</p> <p>Who knows what will happen. It\\ufffd\\ufffd\\ufffds both scary \\ufffd\\ufffd\\ufffd and tremendously exciting <img alt=\":)\" class=\"wp-smiley\" src=\"http://blogs.gnome.org/edwardrv/wp-includes/images/smilies/face-smile.png\"/> </p> <p>PS 1: While my position at Collabora as Multimedia Domain Lead has already been taken over by the insane(ly amazing) Olivier Crete (\\ufffd\\ufffd\\ufffdtester\\ufffd\\ufffd\\ufffd from GStreamer fame), Collabora is looking for more Multimedia engineers. If you\\ufffd\\ufffd\\ufffdre up for the challenge, contact them <img alt=\":)\" class=\"wp-smiley\" src=\"http://blogs.gnome.org/edwardrv/wp-includes/images/smilies/face-smile.png\"/> </p> <p>PS 2. wtf-meter : <a href=\"http://www.osnews.com/story/19266/WTFs_m\">http://www.osnews.com/story/19266/WTFs_m</a></p> <p>PS 3. My non-Collabora email address is &lt;my nickname&gt;@&lt;my nickname&gt; dot com</p></div>     </content>     <updated>2014-08-29T05:09:22Z</updated>     <category term=\"General\"/>     <author>       <name>Edward Hervey</name>     </author>     <source>       <id>http://blogs.gnome.org/edwardrv</id>       <link href=\"http://blogs.gnome.org/edwardrv/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://blogs.gnome.org/edwardrv\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>GStreamer hacking, FOSS ramblings and sometimes cheese-related posts</subtitle>       <title>Edward Hervey</title>       <updated>2014-08-29T05:15:10Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://blogs.gnome.org/edwardrv/?p=119</id>     <link href=\"http://blogs.gnome.org/edwardrv/2014/08/28/gstreamer-continuous-testing-part-1/\" rel=\"alternate\" type=\"text/html\"/>     <title>GStreamer continuous testing (Part 1)</title>     <summary>History so far For the past 6-9 months, as part of some of the tasks I\\ufffd\\ufffd\\ufffdve been handling at Collabora, I\\ufffd\\ufffd\\ufffdve been working on setting up a continuous build and testing system for GStreamer. For those who\\ufffd\\ufffd\\ufffdve been following GStreamer for long enough, you might remember we had a buildbot instance back around 2005-2006, which [\\ufffd\\ufffd\\ufffd]</summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><h2>History so far</h2> <p>For the past 6-9 months, as part of some of the tasks I\\ufffd\\ufffd\\ufffdve been handling at <a href=\"http://www.collabora.com/\" title=\"Collabora\">Collabora</a>, I\\ufffd\\ufffd\\ufffdve been working on setting up a continuous build and testing system for GStreamer. For those who\\ufffd\\ufffd\\ufffdve been following GStreamer for long enough, you might remember we had a buildbot instance back around 2005-2006, which continuously built and ran checks on every commit. And when it failed, it would also notify the developers on IRC (in more or less polite terms) that they\\ufffd\\ufffd\\ufffdd broken the build.</p> <p>The result was that master (sorry, I mean main, we were using CVS back then) was guaranteed to always be in a buildable state and tests always succeeded. Great, no regressions, no surprises.</p> <p>At some point in time (around 2007 I think ?) the buildbot was no longer used/maintained\\ufffd\\ufffd\\ufffd And eventually subtle issues crept in, you wouldn\\ufffd\\ufffd\\ufffdt be guaranteed checkouts always compile, tests eventually broke, you\\ufffd\\ufffd\\ufffdd need to track what introduced a regression (git bisect makes that easier, but avoiding it in the first place is even better), etc\\ufffd\\ufffd\\ufffd</p> <h2>What to test</h2> <p>Fast-forward to 2013, after talking so much about it, it was time to bring back such a system in place. Quite a few things have changed since:</p> <ul> <li>There\\ufffd\\ufffd\\ufffds a lot more code. In 2005, when 0.10 was released, the GStreamer project was around 400kLOC. We\\ufffd\\ufffd\\ufffdre now around 1.5MLOC ! And I\\ufffd\\ufffd\\ufffdm not even taking into account all the dependency code we use in cerbero, the system for building binary SDK releases.</li> <li>There are more usages that we didn\\ufffd\\ufffd\\ufffdt have back then. New modules (rtsp-server, editing-services, orc now under the GStreamer project umbrella, ..)</li> <li>We provide binary releases for Windows, MacOSX, iOS, Android, \\ufffd\\ufffd\\ufffd</li> </ul> <p>The problems to tackle were \\ufffd\\ufffd\\ufffdWhat do we test ? How do we spot regressions ? How to make it as useful as possible to developers ?\\ufffd\\ufffd\\ufffd.</p> <p>In order for a CI system to be useful, you want to limit the Signal-To-Noise ratio as much as possible. Just enabling a massive bunch of tests/use-cases with millions of things to fix is<span style=\"text-decoration: underline;\"> totally useless</span>. Not only is it depressing to see millions of failed tests, but also you can\\ufffd\\ufffd\\ufffdt spot regressions easily and essentially people don\\ufffd\\ufffd\\ufffdt care anymore (it\\ufffd\\ufffd\\ufffds just noise). You want the system to become a simple boolean (Either everything passes, or something failed. And if it failed, it was because of that last commit(s)). In order to cope with that, you gradually activate/add items to do and check. The bare minimum was essentially testing whether all of GStreamer compiled on a standard linux setup. That serves as a reference point. If someone breaks the build, it becomes useful, you\\ufffd\\ufffd\\ufffdve spotted a regression, you can fix it. As time goes by, you start adding other steps and builds (make check passes on gstreamer core, activate that, passes on gst-plugins-base, activate that, cerbero builds fully/cleanly on debian, activate that, etc\\ufffd\\ufffd\\ufffd).</p> <p>The other important part is that you want to know as quickly as possible whether a regression was introduced. If you need to wait 3 hours for the CI system to report a regression \\ufffd\\ufffd\\ufffd that person will have gone to sleep or be taken up by something else. If you know within 10-15mins, then it\\ufffd\\ufffd\\ufffds still fresh in their head, they are most likely still online, and you can correct the issue as quickly as possible.</p> <p>Finally, what do we test ? GStreamer has gotten huge. in that sentence GStreamer is actually not just one module, but a whole collection (GStreamer core, gst-plugins*, but also ORC, gst-rtsp-server, gnonlin, gst-editing-services, \\ufffd\\ufffd\\ufffd.). Whatever we produce for every release \\ufffd\\ufffd\\ufffd must be covered. So this now includes the binary releases (formerly from gstreamer.com, but which are handled by the GStreamer project itself since 1.x). So we also need to make sure nothing breaks on all the platforms we target (Linux, Android, OSX, iOS, Windows, \\ufffd\\ufffd\\ufffd).</p> <h2>To summarize</h2> <ol> <li>CI system must be set-up progressively (to detect regressions)</li> <li>CI system must be fast (so person who introduced the regression can fix it ASAP)</li> <li>CI system must cover all our offering (including cerbero binary builds)</li> </ol> <p>The result is <a href=\"https://jenkins.arracacha.collabora.co.uk/\">here</a> (yes, I know, we\\ufffd\\ufffd\\ufffdre working on fixing the certificates once it moves to the final namespace).</p> <p>How this was implemented, and what challenges were encountered and handled will be covered in a next post.</p></div>     </content>     <updated>2014-08-28T09:34:35Z</updated>     <category term=\"GStreamer\"/>     <author>       <name>Edward Hervey</name>     </author>     <source>       <id>http://blogs.gnome.org/edwardrv</id>       <link href=\"http://blogs.gnome.org/edwardrv/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://blogs.gnome.org/edwardrv\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>GStreamer hacking, FOSS ramblings and sometimes cheese-related posts</subtitle>       <title>Edward Hervey</title>       <updated>2014-08-29T05:15:10Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2652</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/08/06/retour-de-guadec-conspirations/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F08%2F06%2Fretour-de-guadec-conspirations%2F&amp;language=en_GB&amp;category=software&amp;title=Retour+de+GUADEC%2C+conspirations&amp;description=As+expected%2C+GUADEC+in+Strasbourg+was+a+terrific+event.+Huge+props+to+the+local+organizing+team+who+managed+to+make+things+work+regardless+of+last+minute+curve+balls%2C+such+as...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Retour de GUADEC, conspirations</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">As expected, GUADEC in Strasbourg was a terrific event. Huge props to the local organizing team who managed to make things work regardless of last minute curve balls, such as the venue changing or the video recording team (and their \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/08/06/retour-de-guadec-conspirations/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>As expected, GUADEC in Strasbourg was a terrific event. Huge props to the local organizing team who managed to make things work regardless of last minute curve balls, such as the venue changing or the video recording team (and their equipment) not being able to attend due to visa restrictions. I went with Alexandre Franke to pick up recording equipment only half an hour before the opening session on the first day, and manned the cameras sporadically, but was glad that other volunteers were able to fill the gaps as I was running all over the place.</p> <p><span id=\"more-2652\"/></p> <p>Since I am independent this year (I now have my <a href=\"http://idmark.ca\">own business</a>, as some of you might have seen from my unusual laptop sticker), I came to GUADEC thinking I would allow myself to really relax for a change:</p> <blockquote><p>\\ufffd\\ufffd\\ufffdThis is great! Besides my daily two-hours of contract work obligation, and my Pitivi talk, and my two days of GNOME Foundation board meetings, I\\ufffd\\ufffd\\ufffdm a free <del>bird</del> <a href=\"https://twitter.com/nekohayo/status/489581584798863362\">cat</a>! I\\ufffd\\ufffd\\ufffdll be able to focus on watching talks, discuss at length with everybody, and get back to making technical contributing to Pitivi this week! \\\\(\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd)/\\ufffd\\ufffd\\ufffd</p></blockquote> <p><img alt=\"grump cat nope grayscale\" class=\"alignnone size-full wp-image-2653\" height=\"600\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/grump-cat-nope-grayscale.jpg\" width=\"438\"/></p> <p>I had a few surprises:</p> <ul> <li>Pinpoint decided to go on strike (hey, this is France after all!) and not display half of my images, so I had to waste ridiculous amounts of time redoing my Pitivi presentation entirely with LibreOffice Impress.</li> <li>I was asked to do the opening session of the conference.</li> <li>And later asked to open the <em>Teams Reports</em> session by presenting an overview of the Foundation\\ufffd\\ufffd\\ufffds activities for the year prior to my election.</li> <li>And then to do the closing session as well (in which my theatrical talents were revealed by way of an outrageous accent and legendary repartee).</li> </ul> <p>All on short notice. No sweat.</p> <p>On the night of the event at the Snooker, I hopped into Thibault\\ufffd\\ufffd\\ufffds car (the Pitivimobile; five Pitivi hackers were in it) and we tried getting from his flat to the Snooker bar. We never made it to the Snooker. Instead, we spent 2.5 hours going through every street in Strasbourg, which is quite hilarious\\ufffd\\ufffd\\ufffdthanks to Thibault and Mathieu\\ufffd\\ufffd\\ufffds wonderful sense of orientation, we had a free city tour and a very entertaining experience!</p> <p>The picnic event was nice and popular. Thankfully, mosquitoes focused on Europeans and left Canoodians like me alone.</p> <p>The Pitivi &amp; GStreamer hackfest was productive, lots of stabilization/bugfixing work done by Mathieu and Thibault as part of their work enabled by the fundraiser. Lubosz worked on Windows component builds because he has a gluttony for pain.</p> <p>As part of my <a href=\"http://en.wikipedia.org/wiki/Pro_bono\">pro-bono</a>/FOSS-related projects at <a href=\"http://id&#xE9;emarque.ca\">id\\ufffd\\ufffdemarque</a>, a few months ago I spent time rethinking the contents of the GStreamer website, as well as turning those contents into a working website for demonstration and planning purposes. During the hackfest at GUADEC, I therefore spent a few hours discussing with Tim, Sebastian and Edward about those contents, the target audience, intended structure, etc. Eventually, as time allows, we\\ufffd\\ufffd\\ufffdll get to the real implementation soonish.</p> <div class=\"wp-caption alignnone\" id=\"attachment_2657\" style=\"width: 510px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-07-31.jpg\"><img alt=\"2014-07-31\" class=\"wp-image-2657 size-medium\" height=\"174\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-07-31-500x174.jpg\" width=\"500\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Some whiteboard notes from the discussion</p></div> <p>Unfortunately, in the half day that was left before my return trip, I couldn\\ufffd\\ufffd\\ufffdt get much done on Pitivi itself asides from some light triaging and testing.</p> <p>The scheduled talks were great. I was glad that there were only two tracks so that I wouldn\\ufffd\\ufffd\\ufffdt miss too many of them\\ufffd\\ufffd\\ufffd Except I <em>still</em> ended up missing most of them as I dealt with last minute issues all the time, so I\\ufffd\\ufffd\\ufffdll end up having to watch the recordings anyway! There\\ufffd\\ufffd\\ufffds <a href=\"https://twitter.com/Meshquick/status/496687043007610883\">over 100 GB</a> of raw recordings, so let\\ufffd\\ufffd\\ufffds be patient toward those who will have the heroic duty of processing them for publishing.</p> <div class=\"wp-caption alignnone\" id=\"attachment_2654\" style=\"width: 650px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"https://www.flickr.com/photos/jakubsteiner/14590094017/\"><img alt=\"A hero appears. Photo by Jakub Steiner\" class=\"size-full wp-image-2654\" height=\"640\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-08-05.jpg\" width=\"640\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Photo by Jakub Steiner</p></div> <p>I really liked that the venue was right into the heart of the city rather than on the outskirts. Strasbourg is a very pedestrian &amp; bike-friendly city (in case you hadn\\ufffd\\ufffd\\ufffdt realized from the Pitivimobile story). All the accomodation, restaurants and public transit were close by.</p> <p>I was very happy to meet with a ton of people I wanted to see again, discuss issues that mattered to me and gather many insights along the way.</p> <p>In the closing session, I was quite shocked by the unveiling of the Swedish Conspiracy. However, when you start looking more closely at the matter, I think some facts are difficult to overlook indeed:</p> <div class=\"wp-caption alignnone\" id=\"attachment_2659\" style=\"width: 626px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><img alt=\"Pictured: the Italo-Swedish conspiracy\" class=\"wp-image-2659 size-full\" height=\"370\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-08-06-andreasn-michelangelo.jpg\" width=\"616\"/><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Coincidence? I think not.</p></div> <p>All in all, this year\\ufffd\\ufffd\\ufffds GUADEC felt like a more modest and informal event compared to years past, while still retaining what makes it GUADEC: great topics, great people, positive energy and one of the most welcoming communities I know.</p> <p><img alt=\"gnome sponsored badge shadow\" class=\"alignnone size-full wp-image-1641\" height=\"230\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/gnome-sponsored-badge-shadow.png\" width=\"230\"/></p></div>     </content>     <updated>2014-08-07T02:02:16Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://blogs.gnome.org/edwardrv/?p=115</id>     <link href=\"http://blogs.gnome.org/edwardrv/2014/07/28/guadec-2014/\" rel=\"alternate\" type=\"text/html\"/>     <title>GUADEC 2014</title>     <summary>Well hello there, dear Internet. So yes, it\\ufffd\\ufffd\\ufffds been quite some time since the last blogpost. A lot has been going on, but that will be for future blogposts. Currently at GUADEC 2014 in Strasbourg, France. Lots of interesting talks and people around. Quite a few discussions with several people regarding future GStreamer improvements (1.4.0 [\\ufffd\\ufffd\\ufffd]</summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Well hello there, dear Internet.</p> <p>So yes, it\\ufffd\\ufffd\\ufffds been quite some time since the last blogpost. A lot has been going on, but that will be for future blogposts.</p> <p>Currently at GUADEC 2014 in Strasbourg, France. Lots of interesting talks and people around.</p> <p>Quite a few discussions with several people regarding future GStreamer improvements (1.4.0 is freshly out, we need to prepare 1.6 already). I\\ufffd\\ufffd\\ufffdll most likely be concentrating on the whole QA and CI side of things (more builds, make them clearer, make them do more), plan how to do nightly/weekly releases (yes, finally, I kid you not !). We also have a plan to make it faster/easier/possible for end-users (non-technical ones) to get GStreamer in their hands. More on that soon (unless Sebastian blogs about it first).</p> <p>If you want to come hack on GStreamer and Pitivi, or discuss with the various contributors, there\\ufffd\\ufffd\\ufffds a Hackfest taking place at GUADEC from Wednesday to Friday. More info at <a href=\"https://wiki.gnome.org/GUADEC/2014/BOFs/Pitivi\" title=\"here\">https://wiki.gnome.org/GUADEC/2014/BOFs/Pitivi</a></p></div>     </content>     <updated>2014-07-28T10:18:56Z</updated>     <category term=\"General\"/>     <author>       <name>Edward Hervey</name>     </author>     <source>       <id>http://blogs.gnome.org/edwardrv</id>       <link href=\"http://blogs.gnome.org/edwardrv/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://blogs.gnome.org/edwardrv\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>GStreamer hacking, FOSS ramblings and sometimes cheese-related posts</subtitle>       <title>Edward Hervey</title>       <updated>2014-08-29T05:15:10Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2621</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/07/02/venez-nombreux-a-guadec/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F07%2F02%2Fvenez-nombreux-a-guadec%2F&amp;language=en_GB&amp;category=software&amp;title=Venez+nombreux+%C3%A0+GUADEC%21&amp;description=Pour+la+premi%C3%A8re+fois+depuis+quatorze+ans%2C+la+conf%C3%A9rence+GUADEC+fait+son+retour+en+France.+Je+vous+encourage+%C3%A0+venir+nombreux+%C3%A0+cet+%C3%A9v%C3%A9nement+qui+se+tiendra+%C3%A0+Strasbourg+durant...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Venez nombreux \\ufffd\\ufffd GUADEC!</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Pour la premi\\ufffd\\ufffdre fois depuis quatorze ans, la conf\\ufffd\\ufffdrence GUADEC fait son retour en France. Je vous encourage \\ufffd\\ufffd venir nombreux \\ufffd\\ufffd cet \\ufffd\\ufffdv\\ufffd\\ufffdnement qui se tiendra \\ufffd\\ufffd Strasbourg durant la derni\\ufffd\\ufffdre semaine de Juillet. Je dois traverser l\\ufffd\\ufffd\\ufffdAtlantique (\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/07/02/venez-nombreux-a-guadec/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Pour la premi\\ufffd\\ufffdre fois depuis quatorze ans, la conf\\ufffd\\ufffdrence <a href=\"http://guadec.org\">GUADEC</a> fait son retour en France. Je vous encourage \\ufffd\\ufffd venir nombreux \\ufffd\\ufffd cet \\ufffd\\ufffdv\\ufffd\\ufffdnement qui se tiendra <strong>\\ufffd\\ufffd Strasbourg durant la derni\\ufffd\\ufffdre semaine de Juillet</strong>. Je dois traverser l\\ufffd\\ufffd\\ufffdAtlantique (\\ufffd\\ufffd la nage), prendre plusieurs avions et autobus pour y aller, alors pas d\\ufffd\\ufffd\\ufffdexcuses pour ceux situ\\ufffd\\ufffds \\ufffd\\ufffd moins de 6000 km!<span id=\"more-2621\"/></p> <h1>\\ufffd\\ufffd\\ufffdGUADEC, \\ufffd\\ufffda a un int\\ufffd\\ufffdr\\ufffd\\ufffdt pour quelqu\\ufffd\\ufffd\\ufffdun qui n\\ufffd\\ufffd\\ufffdest pas un d\\ufffd\\ufffdveloppeur?\\ufffd\\ufffd\\ufffd</h1> <p>La majorit\\ufffd\\ufffd des pr\\ufffd\\ufffdsentations (voir le <a href=\"https://www.guadec.org/schedule/\">programme</a> qui sera publi\\ufffd\\ufffd sous peu) est \\ufffd\\ufffd la port\\ufffd\\ufffde du grand public avec un penchant geek, du moment que vous ayiez un fort int\\ufffd\\ufffdr\\ufffd\\ufffdt/curiosit\\ufffd\\ufffd pour les technologies impliqu\\ufffd\\ufffdes. On n\\ufffd\\ufffd\\ufffdy retrouve habituellement pas <em>Gaspard le boulanger</em> ou <em>Am\\ufffd\\ufffdlie la chirurgienne</em>, mais tous sont les bienvenus. Apr\\ufffd\\ufffds tout, GUADEC signifie \\ufffd\\ufffd\\ufffd<a href=\"http://gnome.org\">GNOME</a> Users and Developers European Conference\\ufffd\\ufffd\\ufffd!</p> <p><a href=\"https://www.flickr.com/photos/anarey/9442899551\"><img alt=\"GUADEC 2013 interns lightning talks, by Ana Rey\" class=\"alignnone size-full wp-image-2622\" height=\"334\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/guadec-2013-interns-lightning-talks-by-Ana-Rey.jpg\" width=\"500\"/></a></p> <p>(photo par Ana Rey)</p> <p>Les pr\\ufffd\\ufffdsentateurs axent souvent leur pr\\ufffd\\ufffdsentation autour des avanc\\ufffd\\ufffdes r\\ufffd\\ufffdcentes de leur logiciel, le design et l\\ufffd\\ufffd\\ufffdexp\\ufffd\\ufffdrience utilisateur, la direction g\\ufffd\\ufffdn\\ufffd\\ufffdrale d\\ufffd\\ufffd\\ufffdun projet donn\\ufffd\\ufffd, etc. Bien s\\ufffd\\ufffdr, plusieurs sujets restent \\ufffd\\ufffd teneur assez technique, mais je crois que ceux qui lisent <a href=\"http://planet-libre.org\">Planet Libre</a>, <a href=\"http://planet.gnome.org\">Planet GNOME</a> ou <a href=\"http://linuxfr.org\">Linux FR</a> sont d\\ufffd\\ufffdj\\ufffd\\ufffd assez \\ufffd\\ufffd l\\ufffd\\ufffd\\ufffdaffut pour comprendre le contenu. L\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdv\\ufffd\\ufffdnement \\ufffd\\ufffdtant une conf\\ufffd\\ufffdrence internationale, il faut toutefois avoir une compr\\ufffd\\ufffdhension correcte de l\\ufffd\\ufffd\\ufffdanglais puisque c\\ufffd\\ufffd\\ufffdest la langue utilis\\ufffd\\ufffde lors des pr\\ufffd\\ufffdsentations.</p> <p>Outre les pr\\ufffd\\ufffdsentations magistrales, il y a aussi les hackfests informels et sessions BoFs (\\ufffd\\ufffd\\ufffdbirds of a feather\\ufffd\\ufffd\\ufffd), o\\ufffd\\ufffd des petits groupes se forment autour de th\\ufffd\\ufffdmatiques particuli\\ufffd\\ufffdres. Par exemple, il y a traditionnellement un hackfest pour Pitivi en pr\\ufffd\\ufffdsence des d\\ufffd\\ufffdveloppeurs de GStreamer, \\ufffd\\ufffdtudiants GSoC et autres membres de la communaut\\ufffd\\ufffd int\\ufffd\\ufffdress\\ufffd\\ufffds. Amenez votre ordinateur et votre bonne humeur!</p> <p>Bref, GUADEC reste beaucoup plus \\ufffd\\ufffd\\ufffdaccessible\\ufffd\\ufffd\\ufffd aux non-devs que le <a href=\"https://wiki.gnome.org/Events/Summit\">GNOME Summit</a>, ce dernier \\ufffd\\ufffdtant un \\ufffd\\ufffdv\\ufffd\\ufffdnement tr\\ufffd\\ufffds technique, plus proche d\\ufffd\\ufffd\\ufffdun m\\ufffd\\ufffdga-hackfest.</p> <h1>\\ufffd\\ufffd\\ufffdQue faire en tant que non-d\\ufffd\\ufffdveloppeur?\\ufffd\\ufffd\\ufffd</h1> <ul> <li>Rencontrer les contributeurs qu\\ufffd\\ufffd\\ufffdon ne connaissait que de nom depuis des ann\\ufffd\\ufffdes, que ce soit dans les corridors ou dans les \\ufffd\\ufffdv\\ufffd\\ufffdnements (g\\ufffd\\ufffdn\\ufffd\\ufffdralement il y a au moins une ou deux soir\\ufffd\\ufffdes organis\\ufffd\\ufffdes).</li> <li>\\ufffd\\ufffdcouter des pr\\ufffd\\ufffdsentations en personne, poser des questions ou d\\ufffd\\ufffdbattre.</li> <li>Pourchasser nos d\\ufffd\\ufffdveloppeurs pr\\ufffd\\ufffdf\\ufffd\\ufffdr\\ufffd\\ufffds et discuter de nos bugs favoris. Pour reproduire un bug complexe \\ufffd\\ufffd reproduire, ou simplement pour faire en sorte que le d\\ufffd\\ufffdveloppeur se penche sur la question en investiguant en temps r\\ufffd\\ufffdel, il n\\ufffd\\ufffd\\ufffdy a rien de mieux.</li> <li>Discuter poliment de design sans avoir \\ufffd\\ufffd \\ufffd\\ufffdcrire des pav\\ufffd\\ufffds ou risquer des malentendus \\ufffd\\ufffd cause du manque richesse des interactions textuelles.</li> <li>Jouer le r\\ufffd\\ufffdle de reporter et faire de la couverture m\\ufffd\\ufffddiatique de l\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdv\\ufffd\\ufffdnement.</li> <li>Rencontrer de nouveaux contributeurs, surtout les \\ufffd\\ufffdtudiants GSoC.</li> <li>Participer aux <a href=\"https://wiki.gnome.org/GUADEC/2014/BOFs\">sessions BoF</a> (\\ufffd\\ufffd\\ufffdbirds of a feather\\ufffd\\ufffd\\ufffd), notamment <a href=\"https://wiki.gnome.org/GUADEC/2014/BOFs/Pitivi\">Le Pitivi Hackfest 2014</a>.</li> <li>Affronter Bastien Nocera au foot.</li> </ul> <p>J\\ufffd\\ufffd\\ufffdesp\\ufffd\\ufffdre vous voir nombreux \\ufffd\\ufffd cet \\ufffd\\ufffdv\\ufffd\\ufffdnement incontournable!</p></div>     </content>     <updated>2014-07-02T16:57:52Z</updated>     <category term=\"GNOME\"/>     <category term=\"Linux\"/>     <category term=\"Pitivi\"/>     <category term=\"Plan&#xE8;te Libre\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2635</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/06/23/pitivi-june-2014-status-update/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F06%2F23%2Fpitivi-june-2014-status-update%2F&amp;language=en_GB&amp;category=software&amp;title=A+quick+Pitivi+status+update+for+June+2014&amp;description=I+have+been+extremely+busy+in+the+past+few+months+and+thus+have+not+been+able+to+spend+much+time+at+all+on+Pitivi%2C+but+here%26%238217%3Bs+a+quick+status+update...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>A quick Pitivi status update for June 2014</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I have been extremely busy in the past few months and thus have not been able to spend much time at all on Pitivi, but here\\ufffd\\ufffd\\ufffds a quick status update about the work of others in case you missed it: \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/06/23/pitivi-june-2014-status-update/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>I have been extremely busy in the past few months and thus have not been able to spend much time at all on Pitivi, but here\\ufffd\\ufffd\\ufffds a quick status update about the work of others in case you missed it:<span id=\"more-2635\"/></p> <ul> <li>In follow-up to our <a href=\"http://jeff.ecchi.ca/blog/2014/04/30/gsoc-2014-projects-for-pitivi-transformation-chroma-keying-image-sequences/\">initial look</a> at this summer\\ufffd\\ufffd\\ufffds GSoC projects for Pitivi: <ul> <li>Lubosz posted a <a href=\"http://lubosz.wordpress.com/2014/06/16/transforming-video-on-the-gpu/\">progress report</a></li> <li>Fabian posted a <a href=\"http://cfoch-dev.tumblr.com/post/89219451887\">progress report</a></li> </ul> </li> <li>Mathieu and Thibault have been hard at work to bring editing-ready MPEG-TS support for GStreamer, so you can finally edit those quirky AVCHD camcorder videos in Pitivi. Learn more about what they did in <a href=\"http://fundraiser.pitivi.org/blog/2014/06/23/june-development-update/\">this blog post</a>. The official fix, due for GStreamer 1.4, comes as part of bug #<a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=675132\">675132</a>. For a historical sense of scale, see also <a href=\"https://bugs.launchpad.net/ubuntu/+source/gstreamer0.10/+bug/327872\">this meta-bug on Launchpad</a> and GStreamer bug #<a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=550634\">550634</a>.</li> <li>We will be at <a href=\"http://guadec.org\">GUADEC</a>. As per tradition, we will have a week-long <a href=\"https://wiki.gnome.org/GUADEC/2014/BOFs/Pitivi\">Pitivi hackfest</a> after the core presentations days. Do not hesitate to come hang around and get involved!</li> </ul> <p>I will start preparing my GUADEC Pitivi talk soon. If there are topics or questions you would like to see covered, feel free to leave a comment to let me know.</p></div>     </content>     <updated>2014-06-23T18:40:16Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/06/23/june-development-update/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/06/23/june-development-update/\" rel=\"alternate\" type=\"text/html\"/>     <title>June development update</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p> Good news everyone ! </p> <p> This is the first blog post of a series of updates about our latest development efforts in GStreamer / gst-editing-services / Pitivi. </p> <p> This post's focus will be on <a href=\"http://en.wikipedia.org/wiki/MPEG_transport_stream\">MPEG transport stream</a>, a format now nearly twenty years old, originally developed and still widely used for and by the broadcasting industry. In the mid-2000s, <a href=\"http://www.avchd-info.org/\">some people</a> decided it would be a great idea to use this format in camcorders, stuffed a rather useless timestamp in there for good measure and started to ship AVCHD camcorders like it was the greatest thing since sliced bread. </p> <p> It was not. See, most modern video codecs such as h264 rely on the notion of keyframes: to compress video streams as much as possible, most frames are encoded as their difference with the previous frame, we call these frames delta units. Sparsely distributed in the encoded stream are keyframes. These frames can be decoded without any reference to past frames, and when trying to seek in such a stream, decoding has to start from a keyframe and progress through all the delta units up to the requested frame. </p> <p> Video editing implies accurate seeking, for example if you only want to include the 10 last frames of a 2-hour clip, decoding the whole file to obtain these few frames would be a pointless waste of time. </p> <p> Failing to start decoding from a keyframe when seeking creates artefacts, garbled frames : the decoder is missing information to decode the delta unit, tries to provide a frame nevertheless and fails in doing so, until the next keyframe has been reached. Containers that are readily usable for editing contain information about the location of keyframes, in one form or another. This is not the case of MPEG TS, of which AVCHD is a subset. Locating the keyframes thus becomes a rather involved process, as one needs to parse the video streams in order to do so. </p> <p> Backtracking to the introduction of this post, good news everyone ! We just <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=675132\">did that</a>, and here is a before / after video to demonstrate our changes. We can now ensure full support of AVCHD, enjoy :D </p> <p>  </p> <p> The next two posts will be respectively focused on our refactoring of our video / audio mixing stack, and our ongoing work on gnonlin, our non-linear editing engine. </p></div>     </summary>     <updated>2014-06-23T15:03:15Z</updated>     <category term=\"announcement\"/>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry>     <id>http://cfoch-dev.tumblr.com/post/89219451887</id>     <link href=\"http://cfoch-dev.tumblr.com/post/89219451887\" rel=\"alternate\" type=\"text/html\"/>     <title>Hi, ImageSequenceSrc!</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Hello guys. I\\ufffd\\ufffd\\ufffdve written an element in gst-plugins-bad which I called as GstImageSequenceSrc. It works very similar to GstMultiFileSrc, but there are some differences.</p> <p><strong>Differences with GstMultiFileSrc.</strong></p> <p>Handles a list of filenames instead of a printf pattern as GstMultiFileSrc does.<br/><strong>*</strong> Having a list of filenames is useful because you can set the filenames you want,<br/>in the order you want. For example, you can add more filenames or sort the list.<br/><strong>*</strong> There are two ways to create this list:<br/>\\ufffd\\ufffd \\ufffd\\ufffd <strong>a)</strong> Setting a location propertie. This value could look like:</p> <ol><li><span>'/some/folder/with/images/ or .'</span></li> <li><span>'/a/path/img.jpg,/other/path/img2.jpg' or 'img1.png,img2.png'</span></li> <li><span>'/a/path/*.JPEG or *.png'</span></li> </ol><p>\\ufffd\\ufffd \\ufffd\\ufffd <strong>b)</strong> Setting the filename-list (GList) directly.<br/><br/><strong>*</strong> Creates an <em>\"imagesequence://\"</em> protocol which allows the playbin to play this element. It handles a \\ufffd\\ufffd\\ufffdfake\\ufffd\\ufffd\\ufffd uri but it is useful finally.<br/><br/><em>gst-launch-1.0 playbin uri=\\ufffd\\ufffd\\ufffdimagesequencesrc:///some/path/*.jpg?framerate=20/1&amp;loop=1\\ufffd\\ufffd\\ufffd</em><br/><br/><strong>*</strong> It \\ufffd\\ufffd\\ufffddetects\\ufffd\\ufffd\\ufffd the mimetype of the images. You only have to worry about the framerate.<br/><strong>*</strong> It calculates the duration.</p> <p><strong>Things to improve:</strong></p> <p><strong>*</strong> Seeking: it seeks to the wrong image sometimes (actually, after many seeks).<br/><strong>*</strong> The way duration is calculated.</p> <p><em>PD: stormer, the guy who hangs on #gstreamer, was telling me to support png *and* jpeg files (both at the same time) but I don\\ufffd\\ufffd\\ufffdt see a usecase.</em></p> <p>You can see the most-stable version of this element in\\ufffd\\ufffd<br/><a href=\"https://github.com/cfoch/gst-plugins-bad/tree/sequences/gst/sequences\">https://github.com/cfoch/gst-plugins-bad/tree/sequences/gst/sequences</a></p> <p>The develop branch in (currently it is the same):<br/><a href=\"https://github.com/cfoch/gst-plugins-bad/tree/sequences-develop/gst/sequences\">https://github.com/cfoch/gst-plugins-bad/tree/sequences-develop/gst/sequences</a></p></div>     </summary>     <updated>2014-06-19T02:37:12Z</updated>     <category term=\"pitivi\"/>     <category term=\"gstreamer\"/>     <author>       <name>cfoch</name>     </author>     <source>       <id>http://cfoch-dev.tumblr.com/</id>       <link href=\"http://cfoch-dev.tumblr.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://cfoch-dev.tumblr.com/tagged/pitivi/rss\" rel=\"self\" type=\"application/rss+xml\"/>       <title>cfoch-dev: non-confidential development files</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://lubosz.wordpress.com/?p=99</id>     <link href=\"https://lubosz.wordpress.com/2014/06/16/transforming-video-on-the-gpu/\" rel=\"alternate\" type=\"text/html\"/>     <title>Transforming Video on the GPU</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">OpenGL is very suitable for calculating transformations like rotation, scale and translation. Since the video will end up on one rectangular plane, the vertex shader only needs to transform 4 vertices (or 5 with GL_TRIANGLE_STRIP) and map the texture to \\ufffd\\ufffd\\ufffd <a href=\"https://lubosz.wordpress.com/2014/06/16/transforming-video-on-the-gpu/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a><img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=lubosz.wordpress.com&amp;blog=39161129&amp;post=99&amp;subd=lubosz&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>OpenGL is very suitable for calculating transformations like rotation, scale and translation. Since the video will end up on one rectangular plane, the vertex shader only needs to transform 4 vertices (or 5 with GL_TRIANGLE_STRIP) and map the texture to it. This is a piece of cake for the GPU, since it was designed to do that with many many more\\ufffd\\ufffdvertices, so the performance bottleneck\\ufffd\\ufffdwill be uploading the video frame into GPU memory and downloading it again.</p> <h1>The transformations</h1> <p>GStreamer already provides some separate plugins that are basically suitable for doing one of these transformations.</p> <p><strong>Translation</strong></p> <p><strong>videomixer</strong>: The videomixer does translation of the video with the xpos and\\ufffd\\ufffdypos properties.</p> <p><strong>frei0r-filter-scale0tilt</strong>: The frei0r plugin is very slow, but it has the advantage of doing scale and tilt (translate) in one plugin. This is why i used it in my 2011 GSoC. It also provides a \\ufffd\\ufffd\\ufffdclip\\ufffd\\ufffd\\ufffd propery for cropping the video.</p> <h2><strong>Rotation</strong></h2> <p><strong>rotate</strong>: The rotate element is able to rotate the video, but it has to be applied after the other transformations, unless you want borders.</p> <p><a href=\"https://lubosz.files.wordpress.com/2014/06/screenshot-from-2014-06-16-175444.png\"><img alt=\"Screenshot from 2014-06-16 17:54:44\" class=\"alignnone size-medium wp-image-133\" height=\"200\" src=\"https://lubosz.files.wordpress.com/2014/06/screenshot-from-2014-06-16-175444.png?w=300&amp;h=200\" width=\"300\"/></a></p> <h2><strong>Scale</strong></h2> <p><strong>videoscale</strong>: The videoscale element is able to resize the video, but has to be applied after the translation. Additionally it resizes the whole canvas, so it\\ufffd\\ufffd\\ufffds also not perfect.</p> <p><strong>frei0r-filter-scale0tilt</strong>: This plugin is able to scale the video, and leave the cansas size as it is. It\\ufffd\\ufffd\\ufffds disadvantage is being very slow.</p> <p>So we have some plugins that do transformation in GStreamer, but you can see that using them together is quite impossible and also slow. But how slow?</p> <p>Let\\ufffd\\ufffd\\ufffds see how the performance of gltransformation\\ufffd\\ufffdcompares to the GStreamer CPU transformation plugins.</p> <h1>Benchmark time</h1> <p>All the commands are measured with \\ufffd\\ufffd\\ufffdtime\\ufffd\\ufffd\\ufffd. The tests were done on the nouveau driver, using MESA as OpenGL implementation. All GPUs should have simmilar results, since not really much is calculated on them. The bottleneck should be the upload.</p> <h2><strong>Pure video generation</strong></h2> <blockquote><p>gst-launch-1.0 videotestsrc num-buffers=10000 ! fakesink</p></blockquote> <p>CPU 3.259s</p> <blockquote><p>gst-launch-1.0 gltestsrc num-buffers=10000 ! fakesink</p></blockquote> <p>OpenGL 1.168s</p> <p>Cool the gltestsrc seem to run faster than the classical videotestsrc. But we are not uploading real video to the GPU! This is cheating! Don\\ufffd\\ufffd\\ufffdt worry, we will do real world tests with files soon.</p> <h2>Rotating the test source</h2> <blockquote><p>gst-launch-1.0 videotestsrc num-buffers=10000 ! rotate angle=1.1 ! fakesink</p></blockquote> <p>CPU 10.158s</p> <blockquote><p>gst-launch-1.0 gltestsrc num-buffers=10000 ! gltransformation zrotation=1.1 ! fakesink</p></blockquote> <p>OpenGL 4.856s</p> <p>Oh cool, we\\ufffd\\ufffd\\ufffdre as twice as fast in OpenGL. This is without uploading the video to the GPU though.</p> <h2>Rotating a video file</h2> <p>In this test we will rotate a HD video file with a duration of\\ufffd\\ufffd45 seconds. I\\ufffd\\ufffd\\ufffdm replacing only the sink with fakesink. Note that the CPU rotation needs \\ufffd\\ufffdvideoconverts.</p> <blockquote><p>gst-launch-1.0 filesrc location=/home/bmonkey/workspace/ges/data/hd/fluidsimulation.mp4 ! decodebin ! videoconvert ! rotate angle=1.1 ! videoconvert ! fakesink</p></blockquote> <p>CPU 17.121s</p> <blockquote><p>gst-launch-1.0 filesrc location=/home/bmonkey/workspace/ges/data/hd/fluidsimulation.mp4 ! decodebin ! gltransformation zrotation=1.1 ! fakesink</p></blockquote> <p>OpenGL 11.074s</p> <p>Even with uploading the video to the GPU, we\\ufffd\\ufffd\\ufffdre still faster!</p> <h2>Doing all 3 operations</h2> <p>Ok, now lets see how we perform in doing translation, scale and rotation. Note that the CPU pipeline does contain\\ufffd\\ufffdthe problems described earlier.</p> <blockquote><p>gst-launch-1.0 videomixer sink_0::ypos=540 name=mix ! videoconvert ! fakesink filesrc location=/home/bmonkey/workspace/ges/data/hd/fluidsimulation.mp4 ! decodebin ! videoconvert ! rotate angle=1.1 ! videoscale ! video/x-raw, width=150 ! mix.</p></blockquote> <p>CPU 17.117s</p> <blockquote><p>gst-launch-1.0 filesrc location=/home/bmonkey/workspace/ges/data/hd/fluidsimulation.mp4 ! decodebin ! gltransformation zrotation=1.1 xtranslation=2.0 yscale=2.0 ! fakesink</p></blockquote> <p>OpenGL 9.465s</p> <p>No surprise, it\\ufffd\\ufffd\\ufffds still faster and even correct.</p> <h2>frei0r-filter-scale0tilt</h2> <p>Let\\ufffd\\ufffd\\ufffds be unfair and benchmark the frei0r plugin. There is one advantage, that it can do translation and scale correctly, but rotation can only be applied at the end. So no rotation at different pivot points is possible.</p> <blockquote><p>gst-launch-1.0 filesrc location=/home/bmonkey/workspace/ges/data/hd/fluidsimulation.mp4 ! decodebin ! videoconvert ! rotate angle=1.1 ! frei0r-filter-scale0tilt scale-x=0.9 tilt-x=0.5 ! fakesink</p></blockquote> <p>CPU 35.227s</p> <p>Damn, that is horribly slow.</p> <p>The gltransformation plugin is up to 3 times faster than that!</p> <h1>Results</h1> <p>The gltransformation plugin does all 3 transformations together in a correct fashion and is fast in addition. Furthermore threedimensional transformations are possible, like rotating around the X axis or translating in Z. If you want, you can even use orthographic projection.</p> <p>I also want to thank ystreet00 for helping me to get into\\ufffd\\ufffdthe world of the GStreamer OpenGL plugins.</p> <span class=\"embed-youtube\" style=\"text-align: center; display: block;\"/> <p>To run the test yourself, check out my patch for gst-plugins-bad:</p> <p><a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=731722\" rel=\"nofollow\">https://bugzilla.gnome.org/show_bug.cgi?id=731722</a></p> <p>Also don\\ufffd\\ufffd\\ufffdt forget to use my python testing script:</p> <p><a href=\"https://github.com/lubosz/gst-gl-tests/blob/master/transformation.py\" rel=\"nofollow\">https://github.com/lubosz/gst-gl-tests/blob/master/transformation.py</a></p> <h1>Graphene</h1> <p>gltransformation utilizes ebassi\\ufffd\\ufffd\\ufffds new <a href=\"https://github.com/ebassi/graphene\">graphene library</a>, which implements linear algebra calculations needed for new world OpenGL without the fixed function pipeline.</p> <p>Alternatives worth mentioning for C++ are <a href=\"http://qt-project.org/doc/qt-4.8/qmatrix4x4.html\">QtMatrix4x4</a> and of course <a href=\"http://glm.g-truc.net/\">g-truc\\ufffd\\ufffd\\ufffds glm</a>. These are not usable with GStreamer, and I was very happy that there was a GLib alternative.</p> <p>After writing some tests and ebassi\\ufffd\\ufffd\\ufffds wonderful and quick help, Graphene was ready for usage with GStreamer!</p> <h2>Implementation in Pitivi</h2> <p>To make this transformation usable in Pitivi, we need some transformation interface. The last one I did was rendered in Cairo. Mathieu managed to get this rendered with the ClutterSink, but using GStreamer OpenGL plugins with the clutter sink is currently impossible. The solution will either be to extend the glvideosink to draw an interface over it or to make the clutter sink working with the OpenGL plugins. But I am rather not a fan of the clutter sink, since it introduced <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=727851\">problems</a> to Pitivi.</p><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/lubosz.wordpress.com/99/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/lubosz.wordpress.com/99/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=lubosz.wordpress.com&amp;blog=39161129&amp;post=99&amp;subd=lubosz&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2014-06-16T16:11:33Z</updated>     <category term=\"Uncategorized\"/>     <category term=\"gsoc\"/>     <category term=\"gstreamer\"/>     <category term=\"pitivi\"/>     <author>       <name>lubosz</name>     </author>     <source>       <id>https://lubosz.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://lubosz.wordpress.com/tag/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://lubosz.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://lubosz.wordpress.com/osd.xml\" rel=\"search\" title=\"Lubosz's Blog\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://lubosz.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>This was supposed to be the future.</subtitle>       <title>Lubosz's Blog \\ufffd\\ufffd pitivi</title>       <updated>2015-03-19T08:45:07Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://lubosz.wordpress.com/?p=95</id>     <link href=\"https://lubosz.wordpress.com/2014/05/27/gstreamer-overlay-opengl-sink-example-in-python-3/\" rel=\"alternate\" type=\"text/html\"/>     <title>GstVideoOverlay Gtk+ OpenGL Sink Example in Python 3</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I often forget how this exactly works, so here a minimalist example, translated from the C example in gst-plguns-bad. Please note that this currently only works in X11, since the XID is needed. You can exchange the sinks and sources. \\ufffd\\ufffd\\ufffd <a href=\"https://lubosz.wordpress.com/2014/05/27/gstreamer-overlay-opengl-sink-example-in-python-3/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a><img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=lubosz.wordpress.com&amp;blog=39161129&amp;post=95&amp;subd=lubosz&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>I often forget how this exactly works, so here a minimalist example, translated from the <a href=\"http://cgit.freedesktop.org/gstreamer/gst-plugins-base/tree/tests/examples/overlay/gtk-videooverlay.c\">C example in gst-plguns-bad</a>.</p> <p>Please note that this currently only works in X11, since the XID is needed.</p> <p>You can exchange the sinks and sources. For example videotestsrc and xvimagesink.</p> <p/> <p>Working with the Clutter sink requires <a href=\"https://bug727851.bugzilla-attachments.gnome.org/attachment.cgi?id=273831\">a litte\\ufffd\\ufffdmore work</a>.</p><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/lubosz.wordpress.com/95/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/lubosz.wordpress.com/95/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=lubosz.wordpress.com&amp;blog=39161129&amp;post=95&amp;subd=lubosz&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2014-05-27T15:26:56Z</updated>     <category term=\"Uncategorized\"/>     <category term=\"pitivi\"/>     <author>       <name>lubosz</name>     </author>     <source>       <id>https://lubosz.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://lubosz.wordpress.com/tag/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://lubosz.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://lubosz.wordpress.com/osd.xml\" rel=\"search\" title=\"Lubosz's Blog\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://lubosz.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>This was supposed to be the future.</subtitle>       <title>Lubosz's Blog \\ufffd\\ufffd pitivi</title>       <updated>2015-03-19T08:45:07Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2613</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/04/30/gsoc-2014-projects-for-pitivi-transformation-chroma-keying-image-sequences/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F04%2F30%2Fgsoc-2014-projects-for-pitivi-transformation-chroma-keying-image-sequences%2F&amp;language=en_GB&amp;category=software&amp;title=GSoC+2014+projects+for+Pitivi%3A+transformation%2C+chroma+keying%2C+image+sequences&amp;description=Thanks+to+GNOME%2C+we+will+be+able+to+get+some+reinforcements+for+Pitivi+this+summer.+We%26%238217%3Bre+very+pleased+to+have+Lubosz+Sarnecki+making+a+comeback%21+In+2011+he+implemented+the...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>GSoC 2014 projects for Pitivi: transformation, chroma keying, image sequences</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Thanks to GNOME, we will be able to get some reinforcements for Pitivi this summer. We\\ufffd\\ufffd\\ufffdre very pleased to have Lubosz Sarnecki making a comeback! In 2011 he implemented the cairo-based clip transformation (zoom/resize/crop) feature in the viewer. Lubosz is \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/04/30/gsoc-2014-projects-for-pitivi-transformation-chroma-keying-image-sequences/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Thanks to GNOME, we will be able to get some reinforcements for Pitivi this summer.</p> <p>We\\ufffd\\ufffd\\ufffdre very pleased to have<strong> Lubosz Sarnecki</strong> making a comeback! In 2011 he implemented the cairo-based clip transformation (zoom/resize/crop) feature in the viewer. Lubosz is quite experienced with OpenGL, Blender and GStreamer, as you can see on <a href=\"http://lubosz.wordpress.com\">his blog</a>\\ufffd\\ufffd and the <a href=\"https://github.com/lubosz/\">variety of projects he contributes to</a>.</p> <p><span id=\"more-2613\"/></p> <div class=\"wp-caption alignnone\" id=\"attachment_2614\" style=\"width: 510px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/lubosz-working-on-the-transformation-UI-in-2011.jpg\"><img alt=\"lubosz working on the transformation UI in 2011\" class=\"size-medium wp-image-2614\" height=\"281\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/lubosz-working-on-the-transformation-UI-in-2011-500x281.jpg\" width=\"500\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Lubosz working on Pitivi at the 2011 Desktop Summit</p></div> <p>This year, his project is:</p> <ol> <li>Evaluate the need for an OpenGL-based <a href=\"https://en.wikipedia.org/wiki/Ken_Burns_effect\">Ken Burns effect</a> in GStreamer, vs an approach combining the CPU-based transformation plugins (videocrop, videoscale, videorotate and videomixer).</li> <li><a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=708495\">Resurrect</a> and extend our clip transformation user interface in Pitivi, to support rotation and animatable properties.</li> <li>Implement a color picker and custom chroma keying UI.</li> </ol> <p>We\\ufffd\\ufffd\\ufffdre also introducing <strong>Fabian Orccon</strong> as a GSoC student this year. His project will be to implement a user interface for <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=415360#c13\">handling image sequences</a> (timelapses, stopmotion animation, output from Blender, etc.) as regular video clips in Pitivi. This is a fair amount of UI work, with possibly some work directly in GStreamer to improve the MultiFile element in gst-plugins-good. Depending on the remaining available time, he may also tackle bug fixing and implementing various features like copy-pasting clips. You can read Fabian\\ufffd\\ufffd\\ufffds <a href=\"http://cfoch-dev.tumblr.com/post/83817504065/how-would-you-like-pitivi-image-sequence-feature-look\">initial blog post with mockups</a> of how the image sequence UI/workflow could look like.</p></div>     </content>     <updated>2014-05-01T03:27:08Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"Usability\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry>     <id>http://cfoch-dev.tumblr.com/post/83817504065</id>     <link href=\"http://cfoch-dev.tumblr.com/post/83817504065\" rel=\"alternate\" type=\"text/html\"/>     <title>How would you like Pitivi image-sequence feature look?</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Hello! I\\ufffd\\ufffd\\ufffdm Fabi\\ufffd\\ufffdn Orcc\\ufffd\\ufffdn. I\\ufffd\\ufffd\\ufffdve been accepted to Google Summer of Code 2014 for GNOME with Pitivi. My project consists on adding an image-sequence feature to Pitivi. The usecases could be creating stop-motion films or a 2D animation for example.<br/>The idea of this feature came to my mind when I wanted to film a homemade stop-motion movie with my sister. I had Ubuntu, and by that time Pitivi was the video-editing tool by default. I realized that Pitivi doesn\\ufffd\\ufffd\\ufffdt have this feature implemented, and I wanted to do it.<br/>I\\ufffd\\ufffd\\ufffdm not the expert in the arts of cinematography. I was talking with Pitivi people and Bassam Kurdali, director of the first open movie, about how Pitivi could handle this feature. After mixing and organizing ideas I have this mockup. It is just a draft; I don\\ufffd\\ufffd\\ufffdt know if I\\ufffd\\ufffd\\ufffdm missing something. <br/><br/><strong>I would like you to tell me how would you like this feature should work. Your opinion as user is so important. Pitivi wants to be the best option for you!</strong><br/><br/><a href=\"https://docs.google.com/file/d/0B0x_tSS6M-6HVUhqQWFDdW1NVTA/edit\"><img alt=\"image\" src=\"https://31.media.tumblr.com/5b3591ede46f8ef965165fd6cf913dc8/tumblr_inline_n4lcai4Bwe1r9iku9.png\"/></a></p> <p>Download | <a href=\"https://www.dropbox.com/s/fnuoxxidvba1j8q/imagesequence-mockup1-only.svg\">svg</a> |</p> <p><br/><br/></p></div>     </summary>     <updated>2014-04-25T14:31:00Z</updated>     <category term=\"pitivi\"/>     <category term=\"gsoc\"/>     <category term=\"image-sequence\"/>     <author>       <name>cfoch</name>     </author>     <source>       <id>http://cfoch-dev.tumblr.com/</id>       <link href=\"http://cfoch-dev.tumblr.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://cfoch-dev.tumblr.com/tagged/pitivi/rss\" rel=\"self\" type=\"application/rss+xml\"/>       <title>cfoch-dev: non-confidential development files</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://blogs.gnome.org/tsaunier/?p=52</id>     <link href=\"https://blogs.gnome.org/tsaunier/2014/04/21/gst-validate-a-suite-of-tools-to-run-integration-tests-for-gstreamer-2/\" rel=\"alternate\" type=\"text/html\"/>     <title>gst-validate: A suite of tools to run integration tests for GStreamer</title>     <summary>Collabora ltd. has been developing a tool that allows GStreamer developers to check that the GstElements they write behave the way they are supposed to: GstValidate. The tool was started first to provide plug-ins developers with a tool to check that they use the framework the proper way. Since the beginning, it has been available [\\ufffd\\ufffd\\ufffd]</summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p><a href=\"http://www.collabora.com/\">Collabora ltd.</a> has been developing a tool that allows GStreamer developers to check that the GstElements they write behave the way they are supposed to: GstValidate. The tool was started first to provide plug-ins developers with a tool to check that they use the framework the proper way. Since the beginning, it has been available in <a href=\"http://cgit.freedesktop.org/gstreamer/gst-devtools/\">gst-devtools</a>, a gst module where we collect a set of tools to facilitate GStreamer development and usage.</p> <h1>Well, what is it about?</h1> <h2>The GstValidateMonitor</h2> <p>Basically gst-validate allows us to monitor everything that is happening inside a <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstPipeline.html\">GstPipeline</a>. For example if you want to check that every component of a pipeline is properly behaving, you can create a GstValidatePipelineMonitor that will track that pipeline. Then each time a GstElement is added to the pipeline, a GstValidateElementMonitor will be instantiated and start tracking that element. Then when a GstPad is added to that GstElement a GstValidatePadMonitor will be monitoring that pad.</p> <p>This monitoring logic allows us to check that what those elements do respect some rules GStreamer components have to follow so all the elements of a pipeline can properly interact together. For example, a GstValidatePadMonitor will make sure that if we receive a GstSegment from upstream, an equivalent segment is sent downstream before any buffer gets out. You can find the whole list of tests currently implemented <a href=\"http://cgit.freedesktop.org/gstreamer/gst-devtools/tree/validate/gst/validate/gst-validate-report.c#n87\">here</a>.</p> <h2>The GstValidateRunner</h2> <p>Then there is an issue reporting system so that each issue found during the execution of the pipeline is reported with as much details as possible so that users understand what the detected misbehaviour is about and can fix it efficiently.</p> <p>In term of code the only thing to do in order to get a pipeline monitored is:</p> <pre>int main (int argc, gchar ** argv) {  GstElement *pipeline;  GstValidateRunner *runner;  GstValidateMonitor *monitor;   gboolean ret = 0;   /* Initialize GStreamer and GstValidate */  gst_init (&amp;argc, &amp;argv);  gst_validate_init ();   /* Create the pipeline and make sure it is   * monitored */  pipeline = gst_pipeline_new (      \"monitored-pipeline\");  runner = gst_validate_runner_new ();  monitor = gst_validate_monitor_factory_create (      GST_OBJECT (pipeline),      runner,      NULL);   /* HERE you can do anything you want with that   * monitored pipeline */   /* Now print the errors on stdout.   * The return value of that function   * is != 0 if if critical errors occured   * during the execution of the pipeline */  ret = gst_validate_runner_printf (runner);   /* Cleanup */  gst_object_unref (pipeline);  gst_object_unref (monitor);  gst_object_unref (runner);   return ret; } </pre> <p>The result of gst_validate_runner_printf will look something like:</p> <pre>issue : buffer is out of the segment range Detected on theoradec0.srcpad at 0:00:00.096556426          Details : buffer is out of segment and shouldn't be pushed. Timestamp: 0:00:25.000 - duration: 0:00:00.040 Range: 0:00:00.000 - 0:00:04.520 Description : buffer being pushed is out of the current segment's start-stop  range. Meaning it is going to be discarded downstream without any use </pre> <p>Here we can see that an issue occurred on the src pad of theoradec as it outputted a buffer that was not inside the segment it last pushed. This is an interesting piece of information and clearly shows an error in the element. (Note: This issue does not actually exist)</p> <h1>How should it be used?</h1> <h2>GstValidate command line tools</h2> <p>In order to make gst-validate usage simple, we created command line tools that allow plugin developers test there elements in many use cases from a high level perspective.</p> <h3>The gst-validate pipeline launcher</h3> <p>This is a command line pipeline launcher similar to <a>gst-launch</a>. That tool uses the gst-launch pipeline description syntax and make sure that the pipeline is monitored and that the users will have all the reported information from the GstValidate infrastructure. As you can expect, you can monitor the playback of a media file using <a href=\"https://blogs.gnome.org/tsaunier/feed/gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-plugins/html/gst-plugins-base-plugins-playbin.html\">playbin </a>as follow:</p> <pre>gst-validate-1.0 playbin uri=file:///.../file.ogg </pre> <p>You will then be able to see all the issues GstValidate found.</p> <h3>The gst-validate-transcoding tool</h3> <p>A command line tool allowing to test media files transcoding with a straight forward syntax. You can for example transcode any media file to vorbis vp8 in webm doing:</p> <pre>gst-validate-transcoding-1.0      file:///./file.ogg      file:///.../transcoded.webm      -o 'video/webm:video/x-vp8:audio/x-vorbis'</pre> <p>It will report what issues happened during the execution of that pipeline.</p> <h3>The gst-validate-media-check tool</h3> <p>A command line tool checking that media files discovering works properly with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstdiscoverer.html\">gst-discoverer</a>. Basically it needs a reference text file containing valid information about a media file (which can be generated with the same tool) and then it will be able to check that those informations correspond to what is reported by gst-discoverer over new runs.\\ufffd\\ufffd For example, given that we have a valid reference.media_info file, we can run:</p> <pre>gst-validate-media-check-1.0    file:///./file.ogv    --expected-results reference.media_info </pre> <p>That will then output found errors if any and return an exist code different from 0 if an error was found.</p> <h3>GstValidateScenarios</h3> <p>As you can notice, those tools let us test static pipelines execution and not that the pipeline reacts properly during execution of actions from the end user such as seeking, or changing the pipeline state, etc\\ufffd\\ufffd\\ufffd In order to make that possible and easy to use we introduced the concept of scenarios.</p> <p>A scenario is a set of actions to be executed on the monitored pipeline serialized in a text file. An\\ufffd\\ufffd action (GstValidateAction) is just a function call executed at a precise time (usually based on the playback position of the pipeline).</p> <p>An example of scenario:</p> <pre># Just some metadatas describing the scenario # The format is the GstStructure serialization  # synthax description, seek=true, duration=3.0  # When the pipeline reaches 1.0 second of # playback it launches an accurate flushing # seek to 10.0 seconds seek, playback_time=1.0, start=10.0,  flags=accurate+flush  # Send EOS to the pipeline # so it stops and the application # knows about it. eos, playback_time=12.0 </pre> <p>You can find more examples of scenarios <a href=\"http://cgit.freedesktop.org/gstreamer/gst-devtools/tree/validate/data\">here</a></p> <h2>gst-validate-launcher</h2> <p>This looks all right but shouldn\\ufffd\\ufffd\\ufffdt those tests be executed automatically on a large number of samples and with the various existing scenarios? This is where gst-validate-launcher comes into play. It is basically a python application that launches the tools described above with the proper parameters. It then monitors them, check their results and serializes those results into a junit xml file (more formatter could obviously be implemented). That tools is pretty simple and it is only a matter of setting the media samples to run the tests on and set what scenarios you want to run.</p> <h1>Where is it used?</h1> <h2>GStreamer Editing Services</h2> <p>As part of the <a href=\"http://wiki.pitivi.org/wiki/GES\">GStreamer Editing Services</a> project, I have made sure that ges-launch (a command line tool that launches timelines, video editing projects etc\\ufffd\\ufffd\\ufffd) works with GstValidate, if compiled against it. This means that we can launch scenarios and test GES sharing the same infrastructure as the rest of GStreamer. It is also very interesting to be able to monitor dynamic pipeline (within GES the GstPipeline changes very dynamically) to discover elements misbehavior in that stressful use case. For the time being we do not have many GES specific GstValidateActions implemented, but we will implement more as needed (mostly implementing timeline edition actions, ie. moving clips around the timeline, changing effect properties, etc\\ufffd\\ufffd\\ufffd) As part of the <a href=\"http://fundraiser.pitivi.org\">Pitvi fundraiser</a>, we are also investigating how to serialize users action in <a href=\"http://pitivi.org\">Pitivi</a> so that we could easily reproduce users issues outside of the application (and thus outside the python interpreter).</p> <h2>The GStreamer jenkins integration server</h2> <p>On the <a href=\"https://jenkins.arracacha.collabora.co.uk\">GStreamer continuous integration</a> server, we are <a href=\"https://jenkins.arracacha.collabora.co.uk/view/pitivi/job/gst-validate-tests/\">running gst-validate-launcher</a> on a set of media sample in major formats after (almost) each commit on any of the component of the GStreamer stack. This is just the beginning and we are slowly adding more tests there making sure they pass and tracking regressions.</p> <p>A lot of work has been done around that tool. We still need to clean up some part, review the few APIs we have, and a particular effort as to be made around the documentation. But now that good basis are there, we should just keep adding more tests to detect regressions in GStreamer as soon as possible. If you are interested in using that tool please come talk to us in #gstreamer on freenode!</p></div>     </content>     <updated>2014-04-21T10:02:19Z</updated>     <category term=\"Uncategorized\"/>     <author>       <name>thiblahute</name>     </author>     <source>       <id>https://blogs.gnome.org/tsaunier</id>       <link href=\"https://blogs.gnome.org/tsaunier/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://blogs.gnome.org/tsaunier\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>thiblahute hacking web log</subtitle>       <title>Thibault Saunier's blog</title>       <updated>2014-04-27T18:15:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/04/14/first-delivery-pitivi-fundraiser-universal-daily-bundles-linux/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/04/14/first-delivery-pitivi-fundraiser-universal-daily-bundles-linux/\" rel=\"alternate\" type=\"text/html\"/>     <title>First delivery of the pitivi fundraiser: universal daily bundles for Linux</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p align=\"justify\"> The Pitivi community is very happy to announce the availability of easy to use, distro-independent Linux bundles to test latest version of the application. This eliminates dependency problems and allows quicker testing cycles.  Our entire <a href=\"http://wiki.pitivi.org/wiki/Architecture\">stack</a> is bundled, so the only requirement is glibc \\ufffd\\ufffd\\ufffd 2.13. </p>  <p align=\"justify\"> Simply <a href=\"http://fundraiser.pitivi.org/download-bundles\">Download the bundle</a> and run it! </p> <p align=\"justify\"> This is the first delivery of the Pitivi Fundraiser\\ufffd\\ufffd\\ufffdas you can see, we are already well on our way to deliver what has been promised in our <a href=\"http://fundraiser.pitivi.org/the-plan\">detailed planning</a>. You can have a look at what is happening with the \"daily build\" bundles on <a href=\"https://jenkins.arracacha.collabora.co.uk/view/pitivi/job/pitivi-bundling/\">on our Jenkins instance</a> (main server hosting donated by Collabora\\ufffd\\ufffd\\ufffdthanks!). </p>  <p align=\"justify\"> To build the bundles we use <a href=\"http://docs.gstreamer.com/display/GstSDK/Multiplatform+deployment+using+Cerbero\">Cerbero</a>, which is the build and packaging system used by Collabora and Fluendo to construct the <a href=\"http://gstreamer.com/\">GStreamer SDK</a>, and is also used by the GStreamer community to deliver <a href=\"http://gstreamer.freedesktop.org/data/pkg/\">GStreamer 1.x binaries for Android, iOS, Mac OS X and Windows</a>. It is a very useful and well-designed technology, which will allow us to easily create packages for Windows and Mac OS X in the future. </p>  <p align=\"justify\"> This does not only apply to us, of course: work that has been made for creating Linux distro bundles allows anyone to easily create bundles for their applications with Cerbero. This has not been merged just yet, but that should happen quite soon. If you want to bundle your app using Cerbero, do not hesitate to ask us, even if it should already be <b>really</b> straight forward! </p>  <p align=\"justify\"> We raised half of the amount we are targeting for the Pitivi fundraising campaign, and we are in very good shape to be able to deliver everything on time. We need your help to reach that target. </p> <p> Please <a href=\"http://fundraiser.pitivi.org/donate\">donate now</a> to make sure we will be able to provide the community with the great video editing app it deserves!</p></div>     </summary>     <updated>2014-04-14T14:40:15Z</updated>     <category term=\"announcement\"/>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry>     <id>http://cfoch-dev.tumblr.com/post/82600727362</id>     <link href=\"http://cfoch-dev.tumblr.com/post/82600727362\" rel=\"alternate\" type=\"text/html\"/>     <title>How to play a video using GES?</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Hello. I want to show you an example of a command-line video player using GES. This program is very simple and my purpose is you learn the basis. I paste the enterily code here if you just want to read the code.</p> <pre class=\"prettyprint linenums\">from gi.repository import Gtk from gi.repository import GES from gi.repository import Gst from gi.repository import GObject  import signal  video_path = \"/home/cfoch/Videos/samples/big_buck_bunny_1080p_stereo.ogg\"  def handle_sigint(sig, frame):     print \"Bye!\"     Gtk.main_quit()  def busMessageCb(unused_bus, message):     if message.type == Gst.MessageType.EOS:         print \"EOS: The End\"         Gtk.main_quit()  def duration_querier(pipeline):     print pipeline.query_position(Gst.Format.TIME)     return True  if __name__ == \"__main__\":     GObject.threads_init()     Gst.init(None)     GES.init()      video_uri = \"file://\" + video_path      timeline = GES.Timeline.new_audio_video()     layer = timeline.append_layer()      asset = GES.UriClipAsset.request_sync(video_uri)     clip = layer.add_asset(asset, 0, 0, asset.get_duration(), GES.TrackType.UNKNOWN)      timeline.commit()      pipeline = GES.Pipeline()     pipeline.set_timeline(timeline)      pipeline.set_state(Gst.State.PLAYING)      bus = pipeline.get_bus()     bus.add_signal_watch()     bus.connect(\"message\", busMessageCb)     GObject.timeout_add(300, duration_querier, pipeline)      signal.signal(signal.SIGINT, handle_sigint)      Gtk.main() </pre> <p>We\\ufffd\\ufffd\\ufffdre going to start checking these lines. <br/><br/></p> <pre class=\"prettyprint\">    Gst.init(None)     GES.init() </pre> <p>We always need to use these lines to initialize GES. And you have to follow this order: initialize Gst before GES. If you change the order of these lines you program won\\ufffd\\ufffd\\ufffdt work.</p> <p>The next important line is</p> <pre class=\"prettyprint\">    timeline = GES.Timeline.new_audio_video() </pre> <p>With this line we create a Timeline. I understand the timeline as the general container. It will contain all the elements necessary to play the (edited) video or audio we want. A timeline contains GESVideoTracks and/or GESAudioTracks.</p> <p>For example, if we want to play a video (with sound), our Timeline will contain both, a GESVideoTrack and a GESAudioTrack. If we want to play our favorite song, the timeline will contain only a GESAudioTrack.</p> <p>In this case, this line is creating a GESTimeline adding to it a GESVideoTrack and a GESAudioTrack. It is a shortcut to it:</p> <pre class=\"prettyprint\">    videotrack = GES.VideoTrack.new()     audiotrack = GES.AudioTrack.new()     timeline = GES.Timeline.new()     timeline.add_track(videotrack)     timeline.add_track(audiotrack) </pre> <p>The Timeline not only contains tracks, but also it contains many GESLayer. Our program will contain an only one GESLayer. But a Timeline is a stack of layers. The most-top layer will have the major priority. In the default case, the priority is given by 0. But\\ufffd\\ufffd\\ufffd why do we need a GESLayer? Here we\\ufffd\\ufffd\\ufffdll add our clips, our effects, transitions. So, a GESLayer is another container. We not only create a GESLayer with this following line, but also we append the created layer to our timeline:</p> <pre class=\"prettyprint\">    layer = timeline.append_layer() </pre> <p>What it is a kind of confusing to me is the GESAsset. I found them as an abstract idea of information of the video or audio file for example we will use. However, a GESAsset is not only limited to audio and video. It can have information about an effect or about a GESVideoTrack/GESAudioTrack.</p> <p>In this case we\\ufffd\\ufffd\\ufffdll take advantage of the method request_sync GESUriClipAsset which allow us to create a GESAsset from a real file located in our computer, for example from a \\ufffd\\ufffd\\ufffdvideo.ogv\\ufffd\\ufffd\\ufffd. This method gets information like the duration of the video.</p> <pre class=\"prettyprint\">    asset = GES.UriClipAsset.request_sync(video_uri) </pre> <p>The following line will generate the clip from the asset and add it to the layer we\\ufffd\\ufffd\\ufffdve created before.</p> <pre class=\"prettyprint\">    clip = layer.add_asset(asset, 0, 0, asset.get_duration(), GES.TrackType.UNKNOWN) </pre> <p>And To apply our changes\\ufffd\\ufffd\\ufffd</p> <pre class=\"prettyprint\">    timeline.commit() </pre> <p>To be able to display our video on the screen we need the GESPipeline. The GESPipeline allow us to play or render the result of our work, the result of our timeline. So a pipeline needs to be linked to a timeline.</p> <pre class=\"prettyprint\">    pipeline = GES.Pipeline()     pipeline.set_timeline(timeline) </pre> <p>By default, the state of the pipeline is NULL. However, we can change this state to PLAYING or RENDER. When its state is in PLAYING the pipeline will display the result in the screen. If the state is RENDER it will \\ufffd\\ufffd\\ufffdexport\\ufffd\\ufffd\\ufffd the result of our work in an out_file.ogv video, for example. We will set the state or mode of the pipeline in PLAYING because we want only to play the video.</p> <pre class=\"prettyprint\">    pipeline.set_state(Gst.State.PLAYING) </pre> <p>If we remove lines bewtween 43 and 48 lines, and we execute the program, we can see the video playing. But these lines are necessary to handle when to stop the program. The program is an active process until something stop it. If we don\\ufffd\\ufffd\\ufffdt stop it, when our video has finished, it will be still executing. We don\\ufffd\\ufffd\\ufffdt want. We would like to stop/close/finish our program when. Ok\\ufffd\\ufffd\\ufffd but\\ufffd\\ufffd\\ufffd what do we have to stop? We have to stop the loop. What loop?</p> <pre class=\"prettyprint\">    Gtk.main() </pre> <p>Every pipeline contains a GstBUS by default. A GstBUS is a system which is watching out to some mesages; this messages could be for example: the EOS of the video or another messages. See <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/gstreamer-GstMessage.html#GstMessageType\">http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/gstreamer-GstMessage.html#GstMessageType</a>. We need to add a message handler to the bus of our pipeline using gst_bus_add_watch().</p> <pre class=\"prettyprint\">    bus.add_signal_watch() </pre> <p>If you want to know more about the GstBUS, by the way. Look at this link: <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/manual/html/chapter-bus.html\">http://gstreamer.freedesktop.org/data/doc/gstreamer/head/manual/html/chapter-bus.html</a></p> <p>We\\ufffd\\ufffd\\ufffdve already added the message handler, but now we need to add the function we\\ufffd\\ufffd\\ufffdre going to use to handle the message. This function is busMessageCb. \\ufffd\\ufffd\\ufffdCb\\ufffd\\ufffd\\ufffd from Callback. We connect the bus with this function with the following line.</p> <pre class=\"prettyprint\">    bus.connect(\"message\", busMessageCb) </pre> <p>The function busMessageCb is created by the developer. The target of this function is to stop the loop create by Gtk.main() when the playing of the video has finished.</p> <pre class=\"prettyprint\">def busMessageCb(unused_bus, message):     if message.type == Gst.MessageType.EOS:         print \"EOS: The End\"         Gtk.main_quit() </pre> <p>We\\ufffd\\ufffd\\ufffdre finishing\\ufffd\\ufffd\\ufffd this following line is just going to tell us what nanosecond of the video is the program playing each 300 miliseconds. Each 300 miliseconds our program will execute the duration_querier function which prints on the console the time of the video in a certain moment in nanoseconds.</p> <pre class=\"prettyprint\">    bus.connect(\"message\", busMessageCb) </pre> <p>Finally, as an extra, I want this program being able to get closed when the user press \\ufffd\\ufffd\\ufffdCtrl+C\\ufffd\\ufffd\\ufffd. The line below allow it. We\\ufffd\\ufffd\\ufffdre taking advantage of the signal python library. And the program knows when \\ufffd\\ufffd\\ufffdCtrl+c\\ufffd\\ufffd\\ufffd keys have been pressed because of the signal.SIGINT parameter. When these keys are pressed it calls to the function handle_sigint(sig, frame) which says <strong>\"Bye!\"</strong> and stop the loop.</p> <pre class=\"prettyprint\">    signal.signal(signal.SIGINT, handle_sigint) </pre></div>     </summary>     <updated>2014-04-13T18:03:00Z</updated>     <category term=\"ges\"/>     <category term=\"gstreamer-editing-services\"/>     <category term=\"gstreamer editing services\"/>     <category term=\"gstreamer\"/>     <category term=\"pitivi\"/>     <author>       <name>cfoch</name>     </author>     <source>       <id>http://cfoch-dev.tumblr.com/</id>       <link href=\"http://cfoch-dev.tumblr.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://cfoch-dev.tumblr.com/tagged/pitivi/rss\" rel=\"self\" type=\"application/rss+xml\"/>       <title>cfoch-dev: non-confidential development files</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2598</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/04/07/how-do-you-visually-represent-a-projects-timeline/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F04%2F07%2Fhow-do-you-visually-represent-a-projects-timeline%2F&amp;language=en_GB&amp;category=software&amp;title=How+do+you+visually+represent+a+project%26%238217%3Bs+timeline%3F&amp;description=Here+is+a+fun+example+to+illustrate+why+software+development+in+general+is+a+complex+endeavour%3A+You+think+you%26%238217%3Bre+going+to+fix+a+tiny+problem%3A+%26%238220%3Bhey%2C+maybe+we+could+make...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>How do you visually represent a project\\ufffd\\ufffd\\ufffds timeline?</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Here is a fun example to illustrate why software development in general is a complex endeavour: You think you\\ufffd\\ufffd\\ufffdre going to fix a tiny problem: \\ufffd\\ufffd\\ufffdhey, maybe we could make \\ufffd\\ufffd\\ufffds welcome dialog look a bit nicer\\ufffd\\ufffd\\ufffd. Eventually, someone proposes \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/04/07/how-do-you-visually-represent-a-projects-timeline/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Here is a fun example to illustrate why software development in general is a complex endeavour:</p> <ol> <li>You think you\\ufffd\\ufffd\\ufffdre going to fix a tiny problem: \\ufffd\\ufffd\\ufffd<a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=693014\">hey, maybe we could make \\ufffd\\ufffd\\ufffds welcome dialog look a bit nicer</a>\\ufffd\\ufffd\\ufffd.</li> <li>Eventually, someone proposes a design or idea that looks interesting, and you realize that to truly realize it, you should also implement an audacious new feature: <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=727319\">a way to visually represent an entire timeline as a thumbnail</a> (that one is an open question, by the way; if you have some clever ideas, feel free to share them)</li> <li>\\ufffd\\ufffd\\ufffdand to display new <em>feature B</em> properly, you should also consider\\ufffd\\ufffd\\ufffdideally\\ufffd\\ufffd\\ufffdbeing a good citizen and implementing <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=727321\">feature C</a> upstream, in the toolkit you use instead of doing your own thing in your corner.</li> </ol> <p><span id=\"more-2598\"/></p> <p>This kind of <a href=\"https://en.wikipedia.org/wiki/Serendipity\">serendipity</a> and interdependence happens regularly in <a href=\"http://en.wikipedia.org/wiki/Free_and_open_source_software\">FLOSS</a> applications like <a href=\"http://pitivi.org\">Pitivi</a> where we prioritize quality over \\ufffd\\ufffd\\ufffdmeeting shareholders\\ufffd\\ufffd\\ufffd deadlines and objectives\\ufffd\\ufffd\\ufffd, which is why we sometimes take more time to flesh out a solution to a problem: we aim for the best user experience possible, all while negotiating and working with the greater software ecosystem we live in, instead of silently piling up hacks in our application\\ufffd\\ufffd\\ufffd and we depend on the involvement of everyone for things to progress.</p></div>     </content>     <updated>2014-04-08T01:47:04Z</updated>     <category term=\"N'importequoi\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"Usability\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/03/21/gstreamer-hackfest-and-first-beta-release-pitivi-ra-happy/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/03/21/gstreamer-hackfest-and-first-beta-release-pitivi-ra-happy/\" rel=\"alternate\" type=\"text/html\"/>     <title>GStreamer Hackfest and the first Beta release of Pitivi, \"Ra is a happy\"</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div style=\"text-align: justify;\"> <p> Last week-end, part of the Pitivi Team went to the GStreamer Hackfest in Google's offices in Munich to work with twenty other GStreamer hackers on various important technical issues. A big thanks to Google and Stefan Sauer for hosting the event! Keep your eyes peeled: we will soon blog the results of the work the Pitivi team has accomplished during the hackfest. </p> <p> During the hackfest a very important milestone has been reached: the first <a href=\"http://gstreamer.freedesktop.org/releases/gst-editing-services/1.2.0.html\">GStreamer Editing Services</a>, <a href=\"http://gstreamer.freedesktop.org/releases/gnonlin/1.2.0.html\">GNonLin</a> and <a href=\"http://gstreamer.freedesktop.org/releases/gst-python/1.2.0.html\">gst-python</a> stable versions in the 1.X branch have been released. That means that these very central components of the Pitivi project are now considered stable. </p> <p> While this backend work was essential to the <a href=\"http://wiki.pitivi.org/wiki/0.93\">beta release</a>, we also want to specifically thank Alexandru Balut for his impressive involvement during the 0.92 -&gt; 0.93 cycle. He provided an impressive amount of bug fixing and cleanup patches in Pitivi itself, and has greatly helped the project reach a beta state. Any inquiries regarding the 0.93 release codename must be sent in his general direction. </p> <p> This release will be the basis on which we will start our work for our ongoing <a href=\"http://fundraiser.pitivi.org\">fundraiser</a>. We've done that work in our spare time, and we're excited about what we'll be able to accomplish once we start working full time! Thibault Saunier has already been preparing bundles for the release, more on that in the next post! </p> <p> Once again, you can <a href=\"http://fundraiser.pitivi.org/donate\">help</a> us in producing a rock solid stable release, by donating and spreading the message! </p> </div></div>     </summary>     <updated>2014-03-21T16:12:43Z</updated>     <category term=\"announcement\"/>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2593</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/03/21/pitivi-0-93-released/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"http://pitivi.ecchi.ca/2014-04-fundraiser-motivational-SD.webm\" length=\"5248916\" rel=\"enclosure\" type=\"video/webm\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F03%2F21%2Fpitivi-0-93-released%2F&amp;language=en_GB&amp;category=software&amp;title=Pitivi+0.93+released&amp;description=Last+week%2C+a+flash+snowstorm+brought+me+around+2ft+of+snow+overnight.+I+thought%2C+%26%238220%3BIf+I%26%238217%3Bm+going+to+clear+that+much+snow%2C+might+as+well+have+some+fun+and+make...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Pitivi 0.93 released</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Last week, a flash snowstorm brought me around 2ft of snow overnight. I thought, \\ufffd\\ufffd\\ufffdIf I\\ufffd\\ufffd\\ufffdm going to clear that much snow, might as well have some fun and make a timelapse out of it\\ufffd\\ufffd\\ufffd, and so I did. While \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/03/21/pitivi-0-93-released/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Last week, a flash snowstorm brought me around 2ft of snow overnight. I thought, \\ufffd\\ufffd\\ufffdIf I\\ufffd\\ufffd\\ufffdm going to clear that much snow, might as well have some fun and make a timelapse out of it\\ufffd\\ufffd\\ufffd, and so I did. While watching it, I realized, \\ufffd\\ufffd\\ufffdHmm\\ufffd\\ufffd\\ufffd that\\ufffd\\ufffd\\ufffds an interesting metaphor for the huge amount of preparatory and cleanup work we\\ufffd\\ufffd\\ufffdve been doing in the past few years\\ufffd\\ufffd\\ufffd:</p> <p><span id=\"more-2593\"/></p>         <div>    <div class=\"video-wrapper\" style=\"padding-bottom: 56.25%;\">         <video class=\"video-js vjs-default-skin\" controls=\"controls\" height=\"\" id=\"example_video_id_472655716\" poster=\"http://pitivi.ecchi.ca/2014-04-fundraiser-motivational-SD.jpg\" preload=\"none\" width=\"\">      <source src=\"http://pitivi.ecchi.ca/2014-04-fundraiser-motivational-SD.webm\" type=\"video/webm; codecs=&quot;vp8, vorbis&quot;\"/>     </video>       </div>   </div>       <p>Today, we\\ufffd\\ufffd\\ufffdre very happy to announce another great Pitivi release. It brings <strong>a truckload of bug fixes and refinements</strong>, which you can read about in the <a href=\"http://wiki.pitivi.org/wiki/0.93\">0.93 release notes</a> (prepared by yours truly). This release now brings us to a quality level where we can <strong>let go of the \\ufffd\\ufffd\\ufffdalpha\\ufffd\\ufffd\\ufffd status and call this a \\ufffd\\ufffd\\ufffdbeta\\ufffd\\ufffd\\ufffd</strong>. Many nasty bugs are gone and people are increasingly relying on it for their own projects. Besides the video above, the 2014 <a href=\"http://fundraiser.pitivi.org\">fundraiser</a>\\ufffd\\ufffd\\ufffds video and the Pitivi showcase, I was quite pleased to see someone using Pitivi to easily make a nice video for a commercial booth at a technology tradeshow!</p> <p><strong>0.93 is the result of continued efforts in our spare time</strong>\\ufffd\\ufffd\\ufffdoccasional hacking during vacations, nights and week-ends. Just <em>imagine</em> what could be achieved if Mathieu and Thibault could be <a href=\"http://fundraiser.pitivi.org\">funded</a> to work full-time towards bringing us to 1.0!</p> <p><strong>Update</strong>: you may also want to take a look at <a href=\"http://fundraiser.pitivi.org/blog/2014/03/21/gstreamer-hackfest-and-first-beta-release-pitivi-ra-happy/\">this</a> blog post.</p></div>     </content>     <updated>2014-03-21T04:48:38Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"R&#xE9;alisations\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry>     <id>http://cfoch-dev.tumblr.com/post/78590605593</id>     <link href=\"http://cfoch-dev.tumblr.com/post/78590605593\" rel=\"alternate\" type=\"text/html\"/>     <title>Ayuda a PiTiVi a llegar a su versi\\ufffd\\ufffdn 1.0</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>PiTiVi, el editor de video open source, ha iniciado una recaudaci\\ufffd\\ufffdn de fondos para poder llegar a su versi\\ufffd\\ufffdn 1.0. <br/><br/>Como muchos de los usuarios de linux pueden saber, actualmente hay pocos programas de c\\ufffd\\ufffddigo abierto para editar video. A ello se le suma que ninguno de ellos son muy buenos. En los \\ufffd\\ufffdltimos dos a\\ufffd\\ufffdos, PiTiVi ha pasado a usar una potente librer\\ufffd\\ufffda para edici\\ufffd\\ufffdn de video llamada Gstreamer Editing Services (GES). PiTiVi ahora es una UI para esta librer\\ufffd\\ufffda. Los dos desarrolladores que trabajaron en GES han iniciado una campa\\ufffd\\ufffda de recolecci\\ufffd\\ufffdn de fondos en Internet para hacer de PiTiVi una versi\\ufffd\\ufffdn estable, ofrecer un programa de calidad y lanzar PiTiVi 1.0. Por ahora ya se ha recaudado m\\ufffd\\ufffds de un tercio del total (35.000 euros) en menos de dos semanas.<br/><br/>El lema de PiTiVi es \\ufffd\\ufffd\\ufffdallowing everyone on the planet to express themselves through filmmaking, with tools that they can own and improve (permitir a todos en el planeta expresarse a s\\ufffd\\ufffd mismos a trav\\ufffd\\ufffds de la producci\\ufffd\\ufffdn audiovisual con herramientas que ellos puedan poseer y mejorar)\\ufffd\\ufffd\\ufffd. El equipo quiere construir una aplicaci\\ufffd\\ufffdn de edici\\ufffd\\ufffdn de video flexible y de gama alta que pueda ser usado por profesionales o aficionados.<br/><br/>Desde un punto de vista t\\ufffd\\ufffdcnico, PiTiVi es probablemente el editor de video opensource m\\ufffd\\ufffds prometedor (disponible en Linux) porque es respaldado por Gstreamer (un framework multimedia), el cual es usado por la mayor\\ufffd\\ufffda de las distribuciones de Linux. Se ha requerido bastante tiempo por los desarrolladores de GES y Gstreamer. Usar una librer\\ufffd\\ufffda de edici\\ufffd\\ufffdn de video de gama alta como GES hace relativamente f\\ufffd\\ufffdcil la tarea de crear un editor de video para adaptarlo necesidades espec\\ufffd\\ufffdficas, por ejemplo. Todas las aplicaciones que usan Gstreamer (como Totem) se beneficiar\\ufffd\\ufffdn de su desarrollo.<br/><br/>Esta no es una inciativa personal. En primer lugar, dos es m\\ufffd\\ufffd\\ufffd\\ufffd que uno. En segundo lugar, GES ha sido desarrollado con una colaboraci\\ufffd\\ufffdn muy cercana del equipo de Gstreamer. Adem\\ufffd\\ufffds, hay otros desarrolladores y contribuidores involucrados, y cada verano aparecen los estudiantes que participan del Google Summer of Code. \\ufffd\\ufffdLa comunidad es muy activa!<br/><br/>El rol de esta camapa\\ufffd\\ufffda es acelerar el desarrollo para conseguir nuestras metas m\\ufffd\\ufffds r\\ufffd\\ufffdpido. Las donaciones van a trav\\ufffd\\ufffds de la fundaci\\ufffd\\ufffdn sin \\ufffd\\ufffdnimos de lucro GNOME. Esto quiere decir que las donaciones en USA son deducibles de impuestos. Por favor, vea el video de la campa\\ufffd\\ufffda y done en <a href=\"http://fundraiser.pitivi.org\">http://fundraiser.pitivi.org</a> <br/><br/>Gracias :o)</p>  <p/></div>     </summary>     <updated>2014-03-04T23:31:19Z</updated>     <category term=\"pitivi\"/>     <author>       <name>cfoch</name>     </author>     <source>       <id>http://cfoch-dev.tumblr.com/</id>       <link href=\"http://cfoch-dev.tumblr.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://cfoch-dev.tumblr.com/tagged/pitivi/rss\" rel=\"self\" type=\"application/rss+xml\"/>       <title>cfoch-dev: non-confidential development files</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/03/03/pitivi-10-update-and-great-piece-news/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/03/03/pitivi-10-update-and-great-piece-news/\" rel=\"alternate\" type=\"text/html\"/>     <title>Pitivi Fundraiser Week One Update (And A Great Piece Of News)</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><h1> <b> Greetings Pitivi supporters!</b> </h1> <p>         We hope everyone had a great week! We've had a rather hectic one, and hopefully that's just the beginning. This is the first update for our fundraising <a href=\"http://fundraiser.pitivi.org/\">campaign</a>, be sure to check our blog weekly for more ;) </p> <h2>         Announcement! </h2> <p>         We are happy to announce that the GStreamer maintainers decided to show us their faith and support, by allocating 2 500 \\ufffd\\ufffd\\ufffd to our project from GStreamer funds! This is great news for several reasons:         </p><ul>                 <li>                         <p>                         It's obviously nice to get such an amount of money as it represents <b>seven percent</b> of the total needed to get a 1.0 release or, to put it another way, <b>three weeks</b> of full time development!                         </p>                 </li>                 <li>                         <p>                         GStreamer is the central component of our architecture, and it is the one on which we plan to spend most of our time during the push to 1.0. Pitivi really is just the tip of the iceberg, to put things in perspective, it now only is a mere 25,000 lines of Python code, whereas GStreamer and its plugins represent around 1.5 <i>million</i> lines of code.                         </p>                         <p>                         Our work really benefits every other project that uses GStreamer (for example, accurate seeking in ogg files? That was <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=700537\">us</a>!), and it is meaningful to see the GStreamer maintainers acknowledge that \"officially\", many thanks to them! And then many more for the road. They're awesome and a big reason why we love working on Pitivi.                         </p>                 </li>                 <li>                         <p>                         We really hope this donation will help everyone that cares about Open Source, be they individuals craving for flawless multimedia handling on Linux or companies interested in building products around GStreamer, to see that we are an integral part of the community, and that donating to the campaign is not only about getting a great video editor, but also about improving the core multimedia engine shared by most if not all the Linux distributions!                         </p>                 </li>         </ul> <p/> <h2>         Acknowledgement! </h2> <p>         We would like to thank each and everyone of the 350+ backers that already donated to the campaign and helped us break the 10 000 euros bar during this last week. 11 000 \\ufffd\\ufffd\\ufffd is a great amount of money, sufficient to cover our expenses for <b>three months</b> of full-time development! With your help, we already made it to a third of our first goal, and with your help we can make it to Pitivi 1.0 and beyond. Anything helps, be it blogging, tweeting and sharing on social networks, or getting the word out to journalists. </p> <p>        DistroWatch also decided to make <a href=\"http://distrowatch.com/weekly.php?issue=20140303#donation&quot;\">us</a> the recipient of their monthly donation, and granted us 280 euros, it's a great honor for us to be listed among the previous recipients of that donation! </p> <h2>         Appetizement! </h2>    <p>         The dictionary doesn't seem to agree that this word should exist, but it's here nevertheless. Next week should see an interesting announcement for all the fans of Python, Romania and clean code, make sure to stay tuned on our <a href=\"https://twitter.com/Pitivi\">twitter</a> or to add this blog to your RSS feeds ;) </p></div>     </summary>     <updated>2014-03-03T13:51:51Z</updated>     <category term=\"announcement\"/>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2588</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/02/27/pitivi-status-update-for-q1-2014-fundraiser-launch/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F02%2F27%2Fpitivi-status-update-for-q1-2014-fundraiser-launch%2F&amp;language=en_GB&amp;category=software&amp;title=Pitivi+status+update+for+Q1+2014%2C+fundraiser+launch&amp;description=Since+my+previous+technical+update+in+January%2C+I+haven%26%238217%3Bt+had+time+to+touch+Pitivi%26%238217%3Bs+code.+Thankfully+though%2C+Alexandru%C2%A0B%C4%83lu%C8%9B+has+been+filling+the+gap+with+a+ton+of+refactoring+work%3A+around...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Pitivi status update for Q1 2014, fundraiser launch</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Since my previous technical update in January, I haven\\ufffd\\ufffd\\ufffdt had time to touch Pitivi\\ufffd\\ufffd\\ufffds code. Thankfully though, Alexandru\\ufffd\\ufffdB\\ufffd\\ufffdlu\\ufffd\\ufffd has been filling the gap with a ton of refactoring work: around 150 commits! That took a fair amount of time to \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/02/27/pitivi-status-update-for-q1-2014-fundraiser-launch/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Since my <a href=\"http://jeff.ecchi.ca/blog/2014/01/04/scratching-some-media-library-itches/\" title=\"Scratching some Media Library itches\">previous</a> technical update in January, I haven\\ufffd\\ufffd\\ufffdt had time to touch Pitivi\\ufffd\\ufffd\\ufffds code. Thankfully though, Alexandru\\ufffd\\ufffdB\\ufffd\\ufffdlu\\ufffd\\ufffd has been filling the gap with a ton of refactoring work: around 150 commits! That took a fair amount of time to review and merge, believe me. Besides code cleanup, he also finished the port of the viewer to a cluttersink, fixed fonts and theme colors detection for the timeline (so it looks fine even if you\\ufffd\\ufffd\\ufffdre not using the Adwaita GNOME theme).</p> <p><span id=\"more-2588\"/></p> <p>Alexandru took the opportunity to not only fix some bugs, but also do some visual refinements on the timeline ruler: it now shows hours and miliseconds only when needed (depending on the zoom level) and subtly grays out units that did not change from one \\ufffd\\ufffd\\ufffdtick\\ufffd\\ufffd\\ufffd to another, so your eyes can focus on what <em>actually</em> changed:</p> <p><img alt=\"2014-02-26\" class=\"alignnone size-full wp-image-2589\" height=\"198\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-02-26.png\" width=\"488\"/></p> <p>More interestingly though, with the limited time available to me, I helped prepare <strong>Pitivi\\ufffd\\ufffd\\ufffds 2014 <a href=\"http://fundraiser.pitivi.org\">fundraising campaign</a></strong>. It involves a huge amount of groundwork from an administrative and marketing point of view. It\\ufffd\\ufffd\\ufffds been <em>months</em> in the making.</p> <ul> <li>I\\ufffd\\ufffd\\ufffdm glad that Mathieu and Thibault were able to spearhead the work of setting up the infrastructure, preparing the majority of written materials and setting up their legal and financial relationship with the GNOME Foundation.</li> <li>Huge props to Fateh Slavitskaya and Bassam Kurdali for the great work they put into making the fundraiser video (I\\ufffd\\ufffd\\ufffdm a filmmaker, believe me, I know how hard and time-consuming it is to get this done right, especially when you have voice-overs and 3D animation involved. Oh, and all the editing was done with Pitivi, VFX with Blender). Thanks to Thomas Vecchione for cleaning up the voice recordings and doing proper sound mixing for the video, I definitely can hear the difference.</li> <li>Thanks to Oliver Propst for drafting initial contents for the FAQ and various emails that we had to send for outreach! It is always easier for me to start from existing contents rather than stare at a blank page (you could say I hate reinventing the wheel :)</li> </ul> <p>And thanks to the <strong>300 backers who believed in us and broke the 7000 euros bar in five days</strong> since the launch! This is a great start\\ufffd\\ufffd\\ufffdit could pay for two months of full-time work for one developer such as Mathieu\\ufffd\\ufffd\\ufffdbut we need to reach the minimum of 35\\ufffd\\ufffd000 and the target of 100\\ufffd\\ufffd000 if we really want to achieve the goals we\\ufffd\\ufffd\\ufffdve set. Get involved and spread the word!</p> <p>You may also be interested in the following blog posts that did not show up on Planet GNOME (but are visible on <a href=\"http://pitivi.org/planet\">Planet Pitivi</a>):</p> <ul> <li>The <a href=\"http://fundraiser.pitivi.org/blog/2014/02/21/give-some-love-pitivi/\">initial 2014 fundraiser announcement</a></li> <li><a href=\"http://fundraiser.pitivi.org/blog/2014/02/25/votes-tool-engagement-and-development/\">Votes: a tool of engagement and development</a> \\ufffd\\ufffd\\ufffd an explanation of the campaign\\ufffd\\ufffd\\ufffds voting system and a review of current votes</li> <li>An example of <a href=\"http://fundraiser.pitivi.org/blog/2014/02/26/using-gstreamer-make-smooth-slow-motion/\">amazing slow-motion processing capabilities that we have in the works</a>.</li> </ul> <p>Oh, and besides our G+ page, <a href=\"https://twitter.com/pitivi\">we\\ufffd\\ufffd\\ufffdre on Twitter</a> now. I reclaimed control of our \\ufffd\\ufffd\\ufffdbrand\\ufffd\\ufffd\\ufffd by kindly asking Twitter\\ufffd\\ufffd\\ufffds legal department (yes, really). Until now, the @pitivi account was held by someone unknown to us, inactive and unreachable since 2010, so it was not helping anybody:</p> <p><img alt=\"2014-02-26-2\" class=\"alignnone size-full wp-image-2590\" height=\"223\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-02-26-2.png\" width=\"543\"/></p> <p>It is now linked from <a href=\"http://pitivi.org\">the main website</a> alongside other social gadgetry.</p> <p>Also, some upcoming events:</p> <ul> <li>The <a href=\"https://wiki.gnome.org/Hackfests/GStreamerMuc2014\">2014 GStreamer hackfest</a> is coming in two weeks! Thibault and Mathieu will be there with the rest of the GStreamer community.</li> <li><a href=\"http://jeff.ecchi.ca/blog/2014/01/29/presenting-and-hacking-pitivi-at-pycon-2014/\" title=\"Presenting and hacking Pitivi at Pycon 2014\">A live demo at Pycon 2014\\ufffd\\ufffd\\ufffds poster session</a> by yours truly, and probably some hacking.</li> <li>By the way, our friends at MediaGoblin are <a href=\"http://mediagoblin.org/pages/campaign.html\">also</a> doing a fundraiser (with the FSF). Check them out if you consider our YouTube monoculture <a href=\"http://jeff.ecchi.ca/blog/2012/09/22/youtube-considered-harmful/\" title=\"YouTube considered harmful\">harmful</a>.</li> </ul></div>     </content>     <updated>2014-02-27T14:44:51Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"R&#xE9;alisations\"/>     <category term=\"Usability\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/02/26/using-gstreamer-make-smooth-slow-motion/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/02/26/using-gstreamer-make-smooth-slow-motion/\" rel=\"alternate\" type=\"text/html\"/>     <title>Using GStreamer to make smooth slow motion!</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p> This is a very good example of what our developers can do! There has been some preliminary work on bringing slow and fast motion to GStreamer and Pitivi, and a plugin has been created to allow for frame interpolation, which means you and I with our regular 24 frames per second cameras will be able to get <b>smooth slowmotion</b> from Pitivi in the future! </p>  <p> All that work has not yet been merged and thoroughly tested, and we need your <a href=\"http://fundraiser.pitivi.org/donate\">help</a> to make it happen! </p>  <p> To help you understand the difference between regular and smooth slowmotion, here is a video showing both types side by side, created by Alexandre Prokoudine. The difference is quite stunning! </p>  <br/>   <p><a href=\"http://vimeo.com/76288762\">Slowmo video effect with GStreamer</a> from <a href=\"http://vimeo.com/prokoudine\">Alexandre Prokoudine</a> on <a href=\"https://vimeo.com\">Vimeo</a>.</p></div>     </summary>     <updated>2014-02-26T21:27:08Z</updated>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/02/25/votes-tool-engagement-and-development/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/02/25/votes-tool-engagement-and-development/\" rel=\"alternate\" type=\"text/html\"/>     <title>Votes: a tool of engagement and development.</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>  During the creation of the <a href=\"http://fundraiser.pitivi.org\">campaign</a>, we debated what kind of perks we should offer. The thing is, we are not t-shirt   creators, we are software developers and UI designers. </p>  <p/> We believe people who give us money do so in order for us to develop a <b>good software</b>, and thus we tried to focus on perks that made real sense. What could we offer to the community that would help us in making the software that they truly want? Our answer to that question: <i>a voice</i>, simple as that. <p/>  <p>  Though we already have a very active community and listen to feedback from our users, we were missing a way to quantify the priority of feature requests for the people to whom our software matters enough to sponsor our work. </p>  <p>  We decided on two types of perks we would offer: invitations to hangouts organized monthly (we'll tell you more about that in a future post), and the subject of today's post, our voting system! </p>  <p>  We wanted to grant the possibility of voting to anyone who donated, from the lowest amount available, and decided to weigh the vote proportionally to the amount given, with steps at which the curve flattens a bit, to make sure people who can't donate 300 euros still have a reasonable chance to have their voice heard. </p>  <p>  Later I'll post implementation details for those interested, on my personal blog. Suffice to say that it works, and more exciting that people are already making good use of it!  </p>  <p>  This brings me to the exciting news we want to share: we made the current vote results public! Obviously, as we're in the early stages of the campaign, they're not nearly as significant as they will be later, but we think it's already interesting data, and you can have a look at them live right <a href=\"http://fundraiser.pitivi.org/vote/results/\">now</a> . </p>  <p>  Now to our own analysis of the data so far: </p>  <p>  The first exciting figure for us is that even though we're not yet guaranteed to reach a funding point that can put vote results into development (you can help us get there <a href=\"http://fundraiser.pitivi.org/donate\">faster</a>), one third of our backers already took the time to go through the form and rate features on the 0 to 10 scale, and we clearly expect that ratio to grow if we reach the 35,000 bar. </p>  <p>  We interpret that as a sign that our voting system answers a real demand. This figure is a clear success in our effort to create sustainable community engagement to support  responsive and dynamic Pitivi development, alongside the growing number of people who choose to put their faith in us and donate. </p>  <p>  Some points in the feature ranking results caught our attention: </p>  <ul>  <li>   <p>    The clear first place of hardware accelerated decoding and encoding. This is really interesting to the engineers among us, who already salivate at the possible prospect of implementing it!   </p>   <p>    It also goes to show that performance is critical to people using video editing software, and reassures us in our architectural choices: the decision to ally with GStreamer means a lot of the heavy lifting is done as part of a partner project that doesn't have to be written by Pitivi developers from scratch. Instead, we contribute to GStreamer  while also reaping the huge benefits of it -- and that means we can focus better on the video editing side of our code (making sure dynamic pipelines work with hardware-accelerated decoders/encoders, adapting and extending our integration test suites to ensure it keeps on being true)   </p>  </li>   <li>   <p>    The very pragmatic second place of copy paste, a small but oh-so-helpful feature, which goes to show that our backers are sensible, productivity and detail-oriented people.   </p>  </li>  <li>   <p>    The low ranking of Windows and Mac ports, which is certainly due in part to the fact that awareness about our campaign is pretty much limited to the Free Software community for now.   </p>  </li>  <li>   <p>    Finally, something we don't really know how to interpret on the spot, but that is interesting to remark nevertheless is that the three last spots are occupied at the time of writing by external project formatters, such as Final Cut projects.   </p>  </li> </ul>  <p>  I'll repeat that these rankings are absolutely not definitive, as already existing backers can change their votes and new backers should hopefully continue to give their opinion on what matters to them. </p> <p>  The conclusion is: \"Don't like these rankings ? <a href=\"http://fundraiser.pitivi.org/donate\">Donate</a> and you can contribute in changing them!\" </p> <p>  We're really interested in your analysis of these early results, and hoping that discussion will occur about them in the comments section or on our IRC channel (#pitivi on freenode)! </p>  <p>  Thanks for reading,  the Pitivi team </p></div>     </summary>     <updated>2014-02-25T22:56:00Z</updated>     <category term=\"announcement\"/>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry xml:lang=\"en-us\">     <id>http://fundraiser.pitivi.org/blog/2014/02/21/give-some-love-pitivi/</id>     <link href=\"http://fundraiser.pitivi.org/blog/2014/02/21/give-some-love-pitivi/\" rel=\"alternate\" type=\"text/html\"/>     <title>Give some love to Pitivi !</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div style=\"text-align: justify;\"> <p> Today we're thrilled to announce a <a href=\"http://fundraiser.pitivi.org\">crowdfunding</a> campaign to support the development of Pitivi! </p> <p> We have made the choice not to use one of the major crowdfunding platforms such as kickstarter for <a href=\"http://fundraiser.pitivi.org/faq\">multiple reasons</a>, and instead partner with the <a href=\"http://www.gnome.org/foundation/\">GNOME foundation</a>, which is ideologically aligned with us and will support our financial infrastructure. </p> <p> We are proud of that partnership, as we share their objective of \"creating a free software computing platform for the general public\", and the foundation is excited as well: </p> <p> \"GNOME is proud to host the Pitivi campaign. Pitivi fills a real need for  stable and approachable high quality video editing. Its software  architecture and UI design share the same sleek and forward-thinking  approach that we value in the GNOME project.\" \\ufffd\\ufffd\\ufffd <i>Karen Sandler, executive director of the GNOME Foundation</i> </p> <p> With that campaign, our aim is to provide everyone with a rock-solid Free Software video editor, based on the awesome technology that is GStreamer. We have spent a lot of time working on the campaign website, and it holds a lot more content than a simple blogpost could. </p> <p> We know that what we want to do is the right thing, and requesting money for quality and stabilization first is the correct and honest thing to do. We obviously encourage you to <a href=\"http://fundraiser.pitivi.org/donate\">donate</a> to the campaign, but we also hope that you will be willing to spread the message, and explain why what we do is important and good. </p> <p> Free and Open Source video editing is something that can help make the world a better place, as it gives people all around the world one more tool to express themselves creatively, fight oppression, create happiness and spread love. </p>  <p> Hoping you'll spread the love too, thanks for reading !  </p>  </div></div>     </summary>     <updated>2014-02-21T18:34:00Z</updated>     <category term=\"announcement\"/>     <author>       <name>Mathieu Duponchelle</name>       <email>mduponchelle1@gmail.com</email>     </author>     <source>       <id>http://fundraiser.pitivi.org/blog/</id>       <link href=\"http://fundraiser.pitivi.org/blog/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://fundraiser.pitivi.org/blog/feeds/\" rel=\"self\" type=\"application/rss+xml\"/>       <rights>Zinnia</rights>       <subtitle>The latest entries for the site fundraiser.pitivi.org</subtitle>       <title>fundraiser.pitivi.org - Latest entries</title>       <updated>2014-08-06T14:45:01Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2581</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/02/15/applying-for-a-gsoc-project-is-all-about-early-involvement-and-commitment/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F02%2F15%2Fapplying-for-a-gsoc-project-is-all-about-early-involvement-and-commitment%2F&amp;language=en_GB&amp;category=software&amp;title=Applying+for+a+GSoC+project+is+all+about+early+involvement+and+commitment&amp;description=This+year%2C+Pitivi%26%238216%3Bs+focus+for+GSoC+projects+will+be+a+little+bit+different+than+in+2013.+As+you+can+see+in+our+preliminary+ideas+page%2C+there+is+much+less+GStreamer...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Applying for a GSoC project is all about early involvement and commitment</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">This year, Pitivi\\ufffd\\ufffd\\ufffds focus for GSoC projects will be a little bit different than in 2013. As you can see in our preliminary ideas page, there is much less GStreamer (or GES) work involved, as we tried to focus on \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/02/15/applying-for-a-gsoc-project-is-all-about-early-involvement-and-commitment/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>This year, <a href=\"http://www.pitivi.org\">Pitivi</a>\\ufffd\\ufffd\\ufffds focus for GSoC projects will be a little bit different than in 2013. As you can see in our preliminary <a href=\"http://wiki.pitivi.org/wiki/Google_Summer_of_Code\">ideas page</a>, there is much less GStreamer (or GES) work involved, as we tried to focus on Pitivi UI work \\ufffd\\ufffd\\ufffd easier, concrete projects, mostly only in Python. Most of the hardcore backend work we needed to accomplish was done throughout 2013. Of course, there are still some hardcore project ideas around if you feel like you\\ufffd\\ufffd\\ufffdre up for a challenge. Anyway, the list of ideas is just that: a list of ideas. We\\ufffd\\ufffd\\ufffdre more than happy for you to come up with your own ideas (thinking outside the box is a positive trait, feel free to impress us).</p> <p><span id=\"more-2581\"/></p> <p>More importantly, here\\ufffd\\ufffd\\ufffds how our approach differs this year:</p> <ul> <li>We changed the application \\ufffd\\ufffd\\ufffdprocedure\\ufffd\\ufffd\\ufffd (see the \\ufffd\\ufffd\\ufffdHow to apply and get started\\ufffd\\ufffd\\ufffd section on the ideas page). Essentially, \\ufffd\\ufffd\\ufffddiscuss your ideas with us\\ufffd\\ufffd\\ufffd has become step #3 instead of step #1. The first steps are now <strong>get your build working, test and use the application, figure out what you love and hate about it, and then start contributing some fixes immediately</strong>. This came out of the realization that this is what we actually tell everybody who shows up on IRC asking \\ufffd\\ufffd\\ufffdI don\\ufffd\\ufffd\\ufffdt know what to get started with as a contribution\\ufffd\\ufffd\\ufffd: <em>get the dev version, use it, then you\\ufffd\\ufffd\\ufffdll certainly see things you want to improve to get your feet wet</em>.</li> <li>Like one of the maintainers of Inkscape once said, <a href=\"http://sourceforge.net/mailarchive/message.php?msg_id=30663710\">I will not believe anything you write in your GSoC application</a>. Your formal application is only 10% of the equation. We will base ourselves 90% on your involvement and demonstrated ability to contribute code to Pitivi. <strong>The more good-quality patches you\\ufffd\\ufffd\\ufffdve made, the more chances you have.</strong> As such, we expect you to <strong>start getting involved in February</strong> (March at the latest). If you only start hanging around by the time GSoC application period starts, you will need to work <em>very</em> hard to convince us that you have what it takes.</li> </ul></div>     </content>     <updated>2014-02-15T23:27:39Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2015-02-20T20:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2576</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/01/29/presenting-and-hacking-pitivi-at-pycon-2014/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F01%2F29%2Fpresenting-and-hacking-pitivi-at-pycon-2014%2F&amp;language=en_GB&amp;category=software&amp;title=Presenting+and+hacking+Pitivi+at+Pycon+2014&amp;description=Pycon%2C+or+what+I%26%238217%3Bd+call+the+%26%238220%3Bmain+Pycon%26%238221%3B+%28vs+one+of+the+sub-Pycons%29%2C+has+traditionally+always+been+held+in+the+United+States+of+America.+This+year%2C+it+will+be+held...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Presenting and hacking Pitivi at Pycon 2014</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Pycon, or what I\\ufffd\\ufffd\\ufffdd call the \\ufffd\\ufffd\\ufffdmain Pycon\\ufffd\\ufffd\\ufffd (vs one of the sub-Pycons), has traditionally always been held in the United States of America. This year, it will be held in Montr\\ufffd\\ufffdal. The most astute among you might have noticed \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/01/29/presenting-and-hacking-pitivi-at-pycon-2014/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p><a href=\"https://en.wikipedia.org/wiki/Pycon\">Pycon</a>, or what I\\ufffd\\ufffd\\ufffdd call the \\ufffd\\ufffd\\ufffdmain Pycon\\ufffd\\ufffd\\ufffd (vs one of the <a href=\"http://www.pycon.org/\">sub-Pycons</a>), has traditionally always been held in the United States of America. This year, it will be held <a href=\"https://us.pycon.org/2014/\">in Montr\\ufffd\\ufffdal</a>.</p> <p><span id=\"more-2576\"/></p> <p><img alt=\"pycon2014-logo\" class=\"alignnone size-full wp-image-2577\" height=\"105\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pycon2014-logo.png\" width=\"522\"/></p> <p>The most astute among you might have noticed that Montr\\ufffd\\ufffdal (Qu\\ufffd\\ufffdbec) is <em>not actually in the USA</em> (because trying to capture Qu\\ufffd\\ufffdbec City during a snowstorm on New Year\\ufffd\\ufffd\\ufffds Eve is <a href=\"https://en.wikipedia.org/wiki/Battle_of_Quebec_%281775%29\">a terrible idea</a>).</p> <p>Since Montr\\ufffd\\ufffdal is my homebase (and Pycon happening there might be the event of a lifetime), I decided to showcase\\ufffd\\ufffd\\ufffd you guessed it: the new version of the <a href=\"http://pitivi.org\">Pitivi video editor</a>.</p> <ul> <li>I will be <strong>making a \\ufffd\\ufffd\\ufffdscientific congress\\ufffd\\ufffd\\ufffd-sized\\ufffd\\ufffdposter</strong> (122\\ufffd\\ufffd122 cm, that\\ufffd\\ufffd\\ufffds 4\\ufffd\\ufffd4 feet for you southerners). I enjoy distilling marketing contents into visually compelling print materials, so I\\ufffd\\ufffd\\ufffdm pretty excited about making an unconventional, jaw-dropping poster. I\\ufffd\\ufffd\\ufffdll be using some Pitivi <a href=\"http://pitivi.org/?go=donators\">donation money</a> to cover the printing costs (around 25$ according to UQ\\ufffd\\ufffdM\\ufffd\\ufffd\\ufffds estimates, other places start at 90$\\ufffd\\ufffd\\ufffd). If you have ideas of things I should have on the poster (besides nice charts/graphs, screenshots and artwork), feel free to comment.</li> <li>I won\\ufffd\\ufffd\\ufffdt be just talking in front of an unusually large piece of paper: it will be <strong>a live demo booth with Pitivi running</strong> in front of the poster (maybe I\\ufffd\\ufffd\\ufffdll need to get something better than a netbook\\ufffd\\ufffd\\ufffd).</li> </ul> <p>Besides talks, tutorials and poster sessions, Pycon also has sprints (which, as I understand it, are what I usually refer to as \\ufffd\\ufffd\\ufffdhackfests\\ufffd\\ufffd\\ufffd). So I will most certainly be looking to host <strong>a Pitivi sprint/hackfest</strong> from April 14th to 17th.</p> <p>If you are attending Pycon this year, I hope you will drop by to say hi, try out the coolest pythonic open-source video editor out there or get started hacking on the code!</p></div>     </content>     <updated>2014-01-29T05:20:34Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-11-01T01:30:04Z</updated>     </source>   </entry>    <entry>     <id>http://mathieuduponchelle.github.io/social/2014/01/20/Announcing-Fundraising-Campaign</id>     <link href=\"http://mathieuduponchelle.github.io//social/2014/01/20/Announcing-Fundraising-Campaign.html\" rel=\"alternate\" type=\"text/html\"/>     <title type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Announcing pitivi's fundraising <a href=\"http://fundraiser.pitivi.org\">campaign</a> !</div>     </title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><h2> Our team </h2><p> I've been a part of the Pitivi story on and off since three years now, whenever I could find time really. I've loved every moment I've spent in the community, I've made friends, I've learnt good engineering practices, how to fit in a team, how to communicate clearly, and so much more I can't even start to list. </p><p> Not gonna tell the whole story because that would be boring to write and even more to read, but eventually and naturally I became a maintainer alongside Thibault and Jean-Fran\\ufffd\\ufffdois. Jean-Fran\\ufffd\\ufffdois has been around the project for 10 years now, he's awesome, a really dedicated guy. Thibault and I are friends since a long time, well before I started programming, I've been his padawan for the best part of my initiation to programming and Free Software, and he's a great Jedi ! </p><p> Recently, Alexandru Balut has also started to work with us again, I don't know him as closely as I know Jeff and Thib, but he's commited so much things in the last two months that we've had a hard time reviewing it and preparing the campaign at the same time !  I don't know him as well on a personal level as I know Jeff and Thibault, but I like working with him a lot, he makes great and clean patches and has a seemingly boundless dedication to cleaning up the code and making it elegant. </p><p> All this to say I'm proud and happy to be part of such a team. Free Software's most important asset isn't the code, the bug trackers, the continuous integration servers, it's the people, and these folks are great, I can't stress that enough. </p><h2> Our project </h2><p> You might have guessed by now that our project isn't to grow genetically modified potatoes in the Southern part of Italy, even though that seems like a compelling idea at first sight. Give it a second thought and you'll realize the hygrometry of that region is absolutely not appropriate, give it a third one for good measure then forget about it. </p><p> I'll briefly explain what it is that makes of the Pitivi project the most exciting open source video editing project in my  very humble opinion. The reason goes down to our design choices. We've played the long game, and based ourselves on the gstreamer set of libraries and plugins. For a visual and greatly simplified explanation of how that choice is a good thing, you can refer to <a href=\"http://fundraiser.pitivi.org/gstreamer\">this animation</a>, then have a look at the  <a href=\"http://gstreamer.freedesktop.org/documentation/plugins.html\">impressive</a> list of plugins that we can tap into. GStreamer is where most of the companies interested in open source multimedia invest their money and their time, it's where most of the exciting stuff happens and it's definitely where an ambitious video editing application has to look at. </p><p> We also have made the choice of clearly splitting our editing core, our model, from our view, and made it a library, with an awesome API, gstreamer-editing-services, directly usable from C, C++, javascript, python and every language supported by introspection, and possibly any other language provided someone writes bindings for it. That choice was the right one, decoupling components always pays off in the long term, and we are finally starting to see the benefits of that choice: Pitivi has seen its size divided by two, while gaining in stability.  This makes it much easier for new contributors to come in, and for us to maintain it. </p><p> tl; dr: GStreamer rocks, and GES is great.  With that said, we are aware that the stabilization is not yet over. Pitivi is in a beta state, and it still needs intensive work to make it so we kill the bugs and they never come back. To do this, we must extend our test suites, we must continue collaborating with GStreamer devs, we must create better ways for users to share with us failing scenarios. For all this we've got great ideas, but what we miss is being able to work full-time on the project, which basically means we need money, for reasons I don't think I have to detail ! </p><p> I'm afraid this might sound a little boring, as we all tend to be more attracted to feature promises and shiny things, and that's obviously what we all deserve, but I think that's not what we need right now (hope I got the quote right).  Fortunately we estimate that phase to be around 6 months long for one person full time, we did *a lot* of the groundwork already, and we just have to expand on that, and track the corner cases cause the devil is in the details, and he knows how to hide damn well.  After that, we will be ready to unleash GStreamer's power, and come up with great features in no time, and ride on the work of others to get for example hardware acceleration basically for free. From that moment, when we'll have released 1.0, things will get seriously real, and our backers will be able to vote on the features they care the most about.  I've worked on the voting system and I think it's a great thing to have, I'm really impatient to see it used in real life (and hopefully not break), I think I'll write a more technical blogpost on its implementation. </p><h2> How you can help. </h2><p> I'm writing this the day before launching the campaign, and I have the website in the background, taunting me with its \"0 \\ufffd\\ufffd\\ufffd raised, 0 backers\" message. Fortunately I also have the spinning social widgets to cheer me up a bit, but it's not exactly enough to get me rid of my anxiousness.  I know that what we do is right, and that requesting money for stabilization first is the correct and honest thing to do.  Obviously, I hope that you will donate to the campaign, but I also hope that after taking the time to read that rather  lengthy blogpost in its entirety, you will be able to spread the message, and explain why what we do is important and good.  Free and Open Source video editing is something that can help make the world a better place, as it gives people all around the world one more tool to express themselves, fight oppression, create happiness and spread love.  Hoping you'll spread the love too, thanks for reading ! </p></div>     </content>     <updated>2014-01-20T08:00:00Z</updated>     <source>       <id>http://mathieuduponchelle.github.io</id>       <author>         <name>Mathieu Duponchelle</name>       </author>       <link href=\"http://http://mathieuduponchelle.github.io/atom.xml\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://http://mathieuduponchelle.github.io/\" rel=\"alternate\" type=\"text/html\"/>       <title>Mathieu Duponchelle</title>       <updated>2014-02-22T18:53:29Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2549</id>     <link href=\"http://jeff.ecchi.ca/blog/2014/01/04/scratching-some-media-library-itches/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2014%2F01%2F04%2Fscratching-some-media-library-itches%2F&amp;language=en_GB&amp;category=software&amp;title=Scratching+some+Media+Library+itches&amp;description=Besides+looking+for+a+job%2C+catching+a+cold+and+shovelling+snow%2C+this+holiday+season+I+spent+some+time+scratching+itches+in+Pitivi.+For+starters%2C+thumbnails+generation%3A+if+you%26%238217%3Bve+been+using...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Scratching some Media Library itches</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Besides looking for a job, catching a cold and shovelling snow, this holiday season I spent some time scratching itches in Pitivi. For starters, thumbnails generation: if you\\ufffd\\ufffd\\ufffdve been using the new Pitivi, you certainly ran into this: As you \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2014/01/04/scratching-some-media-library-itches/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Besides <a href=\"http://jeff.ecchi.ca/blog/2013/11/08/available-for-hire/\" title=\"Available for hire\">looking for a job</a>, catching a cold and shovelling snow, this holiday season I spent some time scratching itches in Pitivi. For starters, thumbnails generation: if you\\ufffd\\ufffd\\ufffdve been using the new Pitivi, you certainly ran into this:</p> <p><span id=\"more-2549\"/></p> <p><img alt=\"medialibrary - partial thumbs\" class=\"alignnone size-full wp-image-2552\" height=\"568\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/medialibrary-partial-thumbs.jpg\" width=\"460\"/></p> <p>As you can see, thumbnails were not necessarily being shown for all clips. That was not the result of a buggy algorithm or anything like that (I don\\ufffd\\ufffd\\ufffdt code often, but when I do, it\\ufffd\\ufffd\\ufffds perfect, of course), simply the fact that my solution for <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=432661\">bug 432661</a> was partial: it would fetch the thumbnails if they already exist, but not create new ones.</p> <p>Well, this is <a href=\"https://git.gnome.org/browse/pitivi/commit/?id=bf95c041c\">solved</a> now. No more need to browse the folder with Nautilus to generate thumbnails! This does not block the user interface, thanks to Alexandru B\\ufffd\\ufffdlu\\ufffd\\ufffd who helped me finish the job by correcting my incorrect attempt at threading with <a href=\"https://git.gnome.org/browse/pitivi/commit/?id=75c01e5f0\">his own implementation</a>.</p> <p><img alt=\"medialibrary - complete thumbs\" class=\"alignnone size-full wp-image-2553\" height=\"568\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/medialibrary-complete-thumbs.jpg\" width=\"460\"/></p> <p>The only downside of the threaded version is that you lose the simple benchmarking system I had put in place, but no matter: I\\ufffd\\ufffd\\ufffdve measured the numbers already, so let me share them with you.</p> <p>As you know, I\\ufffd\\ufffd\\ufffdm pretty adamant about maintaining good performance and responsiveness in Pitivi, especially for operations such as importing clips or loading projects. I know that <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=692348\">iconview can be slow</a>, so my commit (before Alex\\ufffd\\ufffd\\ufffds changes) had various timers to check if searching through the iconview or updating its items was a significant performance problem. I tried with two scenarios: importing 68 clips to thumbnail, and importing 485 clips to thumbnail. Here are the resulting processing times in seconds:</p> <table cellpadding=\"3\" cellspacing=\"0\"> <tbody> <tr> <td/> <td><strong>68 thumbnails</strong></td> <td colspan=\"2\"><strong>485 thumbnails</strong></td> </tr> <tr> <td><strong>Generation</strong></td> <td>20.131</td> <td>141.059</td> <td/> </tr> <tr> <td><strong>Model search</strong></td> <td><span style=\"color: #999999;\">0</span>0.1186</td> <td><span style=\"color: #999999;\"><span style=\"color: #999999;\">00</span></span>4.8595</td> <td/> </tr> <tr> <td><strong>Model insertion</strong></td> <td><span style=\"color: #999999;\">0</span>0.0432</td> <td><span style=\"color: #999999;\">00</span>0.4</td> <td/> </tr> </tbody> </table> <p><img alt=\"thumbnail pixbuf iconview model insertion benchmark\" class=\"alignnone size-full wp-image-2550\" height=\"500\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/thumbnail-pixbuf-iconview-model-insertion-benchmark.png\" width=\"359\"/></p> <p>As you can see, for reasonable amounts of clips, the amount of time spent interacting with the iconview/treeview model, even using a na\\ufffd\\ufffdve linear search, is insignificant:</p> <ul> <li>The proportion of time spent searching increases when you have to generate hundreds of thumbnails, but it\\ufffd\\ufffd\\ufffds still mostly negligible (in the \\ufffd\\ufffd\\ufffdworst case\\ufffd\\ufffd\\ufffd shown here, it rises from 0.6% to approximately 3.4%).</li> <li>Surprisingly, the time spent updating the model (inserting the pixbufs) is even more negligible than the time spent searching.</li> <li>In the real world, it is unlikely that each and every thumbnail needs to be generated, searched and inserted. This happens only once in a while for a portion of your clips, not everytime you import each clip or load a project. No point in obsessing and complicating the code with caching, fancy search algorithms or data structures.</li> </ul> <p>I\\ufffd\\ufffd\\ufffdm hoping that we <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=708332\">replace</a> both the iconview and listview by a single \\ufffd\\ufffd\\ufffd<a href=\"http://en.wikipedia.org/wiki/Responsive_design\">responsive</a>\\ufffd\\ufffd\\ufffd GTK <a href=\"https://developer.gnome.org/gtk3/unstable/GtkFlowBox.html\">FlowBox</a> widget eventually, if FlowBox has better (or equal) performance than IconView, but this might take a while. If someone wants to tackle this or wants to help, please get in touch.</p> <h1>Better importing progress indication and error handling</h1> <p>First, <a href=\"https://git.gnome.org/browse/pitivi/commit/?id=7ea7245a06a\">the way we counted progression was wrong</a> from a psychological standpoint. A bit tricky to explain, but the label needs to represent the position in the process (so eventually it reaches 100%), whereas the progressbar must hint at the amount of work remaining to complete (so it never goes to 100%).</p> <p>Second, the error infobar\\ufffd\\ufffd\\ufffds \\ufffd\\ufffd\\ufffdClose\\ufffd\\ufffd\\ufffd button took an insane amount of space, which became quite apparent in verbose languages like French. GTK+ really didn\\ufffd\\ufffd\\ufffdt want me to compact that button no matter what I tried, and using an icon instead of text didn\\ufffd\\ufffd\\ufffdt yield as much space savings as using a single unicode character:\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd</p> <p>Third, the error infobar was a bit of a tease: it told you that errors occured but did not tell you how many:</p> <p><img alt=\"pitivi medialibrary error infobar - after\" class=\"alignnone size-full wp-image-2555\" height=\"361\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-medialibrary-error-infobar-after.png\" width=\"523\"/></p> <p>Well, now it does (you can also see the more balanced layout with the new\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd button):</p> <p><img alt=\"pitivi medialibrary error infobar - before\" class=\"alignnone size-full wp-image-2556\" height=\"399\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-medialibrary-error-infobar-before.png\" width=\"519\"/></p> <p>As you can see, when it comes to designing a good user interface, I\\ufffd\\ufffd\\ufffdm kind of obsessive about details.</p> <h1>HeaderBar</h1> <p>I also have a branch where Pitivi uses the client-side decorations and HeaderBar widget from GTK+ 3.10, however I\\ufffd\\ufffd\\ufffdm blocked by the fact that GStreamer\\ufffd\\ufffd\\ufffds <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=721148\">video overlay doesn\\ufffd\\ufffd\\ufffdt work with client-side decorations</a>:</p> <p><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-01-04.png\"><img alt=\"2014-01-04\" class=\"alignnone size-medium wp-image-2554\" height=\"164\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2014-01-04-500x164.png\" width=\"500\"/></a></p> <p>In other news:</p> <ul> <li>Alexandru B\\ufffd\\ufffdlu\\ufffd\\ufffd fixed importing and timeline thumbnailing for MPEG-TS clips. He also spent a big amount of time and efforts on refactoring various modules.</li> <li>Mathieu Duponchelle made rendering to MP4 and MPEG-TS <a href=\"https://git.gnome.org/browse/pitivi/commit/?id=c2fb6f8b34f\">possible again</a>.</li> <li>Jakub Steiner\\ufffd\\ufffd\\ufffds new super-high-res logo icon for Pitivi has been merged.</li> <li>Tomas Karger got started on <a href=\"http://jeff.ecchi.ca/blog/2013/11/24/wanted-documentation-specialist/\" title=\"Wanted: documentation specialist\">updating the user manual</a>. It\\ufffd\\ufffd\\ufffds great to see someone new getting involved to finally give the user manual the attention it deserves! Thanks, Tomas.</li> <li>I looked again into <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=686182\">reimplementing the missing codecs installer dialog</a>, but I\\ufffd\\ufffd\\ufffdm blocked by the wrong information being provided by the discoverer error signals. On hold for now.</li> <li>I implemented a very nice playback performance boost feature, but I\\ufffd\\ufffd\\ufffdm blocked by the fact that it would pause the pipeline everytime a backup is saved in the background. Need to think of a solution for that without resorting to questionable hacks.</li> </ul></div>     </content>     <updated>2014-01-04T20:00:27Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"R&#xE9;alisations\"/>     <category term=\"Usability\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-09-11T03:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2522</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/11/24/wanted-documentation-specialist/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F11%2F24%2Fwanted-documentation-specialist%2F&amp;language=en_GB&amp;category=software&amp;title=Wanted%3A+documentation+specialist&amp;description=The+Pitivi+project+is+looking+for+someone+who+loves+teaching%2Fwriting%2C+to+fill+the+position+of+%26%238220%3Bdocumentation+specialist%26%238221%3B+among+our+team%21+The+documentation+specialist+will+be+responsible+for+updating+our+fantastic...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Wanted: documentation specialist</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">The Pitivi project is looking for someone who loves teaching/writing, to fill the position of \\ufffd\\ufffd\\ufffddocumentation specialist\\ufffd\\ufffd\\ufffd among our team! The documentation specialist will be responsible for updating our fantastic user manual (online version here) based on release notes of \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/11/24/wanted-documentation-specialist/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>The <a href=\"http://pitivi.org\">Pitivi</a> project is looking for someone who loves teaching/writing, to fill the position of \\ufffd\\ufffd\\ufffddocumentation specialist\\ufffd\\ufffd\\ufffd among our team! The documentation specialist will be responsible for updating <a href=\"https://git.gnome.org/browse/pitivi/tree/help/C\">our fantastic user manual</a> (<a href=\"http://pitivi.org/manual\">online version</a> here) based on release notes of <a href=\"http://wiki.pitivi.org/wiki/0.91\">0.91</a> and <a href=\"http://wiki.pitivi.org/wiki/0.92\">0.92</a> as well as your own imagination/ideas for improvement.</p> <p><span id=\"more-2522\"/></p> <p><img alt=\"cat writing\" class=\"alignnone size-full wp-image-1993\" height=\"275\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/cat-writing.jpg\" width=\"250\"/></p> <p>The user manual is written in <a href=\"http://projectmallard.org/\">Mallard</a>, but I can even accept contributions in plaintext (I would then do the markup myself). You only have to write it in English; other languages are handled by the hyperactive GNOME translation teams. You will receive:</p> <ul> <li>No pay</li> <li>No company-provided car, gym or insurance</li> <li>Praise, hugs, possibly some beers at events such as GUADEC</li> <li>Something great to put in your r\\ufffd\\ufffdsum\\ufffd\\ufffd/CV as a technical writer and contributor to open-source</li> <li>The feeling of a job well done in a project that matters for the world</li> <li>An autographed biography of Richard Stallman <em>in French</em>, if you\\ufffd\\ufffd\\ufffdre into that sort of thing. I\\ufffd\\ufffd\\ufffdm not even kidding, there\\ufffd\\ufffd\\ufffds a guy actually <a href=\"http://libre-ouvert.toile-libre.org/index.php?article169/aidez-a-mettre-a-jour-le-manuel-de-pitivi-et-gagnez-la-biographie-dedicacee-de-richard-stallman\">offering that as a perk</a> on the Internet.</li> <li>A gentle entry into the world of contributing to Pitivi if you want to go further</li> </ul> <p>Apply now on #pitivi on irc.freenode.net !</p></div>     </content>     <updated>2013-11-24T16:07:51Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-09-11T03:30:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2507</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/11/04/pitivi-0-92-and-the-wandering-opensourcerer/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F11%2F04%2Fpitivi-0-92-and-the-wandering-opensourcerer%2F&amp;language=en_GB&amp;category=software&amp;title=Pitivi+0.92+and+the+wandering+opensourcerer&amp;description=The+past+few+weeks+have+been+pretty+crazy.+At+the+last+minute%2C+I+ended+up+going+to+the+GStreamer+Conference+in+Edinburgh%2C+thanks+to+the+GStreamer+project+sponsoring+my+attendance.%C2%A0As...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Pitivi 0.92 and the wandering opensourcerer</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">The past few weeks have been pretty crazy. At the last minute, I ended up going to the GStreamer Conference in Edinburgh, thanks to the GStreamer project sponsoring my attendance.\\ufffd\\ufffdAs always, it was a fantastic event and it was great \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/11/04/pitivi-0-92-and-the-wandering-opensourcerer/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>The past few weeks have been pretty crazy.</p> <p>At the last minute, I ended up going to the GStreamer Conference in Edinburgh, thanks to the GStreamer project sponsoring my attendance.\\ufffd\\ufffdAs always, it was a fantastic event and it was great to meet up with old friends and see great topics being discussed. I was pretty impressed by the amount of attendees too. I\\ufffd\\ufffd\\ufffdm feeling guilty for having missed good talks while being dragged into hallway discussions or being hammered by jetlag, but our pals at Ubicast recorded everything so I should be able to catch up later. My good friend Luis <a href=\"http://luisbg.blogalia.com//historias/73956\">summarized the event</a> much better than I could, so I won\\ufffd\\ufffd\\ufffdt go into detail here. Except that Thibault won a bottle of whiskey and was unable to claim it, so I picked it up and brought it back for him (I don\\ufffd\\ufffd\\ufffdt hack on GStreamer itself, so I don\\ufffd\\ufffd\\ufffdt need the whiskey):</p> <p><span id=\"more-2507\"/></p> <p><img alt=\"2013-10-25\" class=\"alignnone size-full wp-image-2509\" height=\"355\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-10-25.jpg\" width=\"500\"/></p> <p>After gstcon, I embarked on a pretty hectic journey throughout Europe, with the goal of prospecting sustainable development opportunities and to eventually crash at Mathieu Duponchelle\\ufffd\\ufffd\\ufffds home in order to spend time on <a href=\"http://pitivi.org\">Pitivi</a> together.</p> <p><img alt=\"shadow of the colossus horse ride\" class=\"alignnone size-full wp-image-2508\" height=\"300\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/shadow-of-the-colossus-horse-ride.jpg\" width=\"400\"/></p> <p>Since I\\ufffd\\ufffd\\ufffdm someone who tends to plan and optimize everything, hopping from city to city in a semi-improvised way over the past two weeks has been somewhat stressful. Especially the part where I found out the hard way that some capitals have their public transportation system to the airport <em>shut down</em> at night, or the part where I had to sleep on the floor in the entrance of the airport that was <em>also</em> closed at night even though you have flights departing before sunrise. That was fun. It is also a significant amount of transportation costs piling up (even though I\\ufffd\\ufffd\\ufffdm an expert at minimizing them), so if you\\ufffd\\ufffd\\ufffdd like to help offset some of the costs resulting from our current Pitivi activities, please feel free to <a href=\"http://www.pitivi.org/?go=donators\">tip a few bucks</a> ;)</p> <p>Managing and maintaining an established open-source project does not just mean coding: there is a lot of administrativia and planning involved, which has been consuming my free time lately. After discussions with Karen and Jim at the GNOME Montr\\ufffd\\ufffdal Summit, the post-GSoC stuff to deal with, the big research project I\\ufffd\\ufffd\\ufffdve been tackling and the research around the infrastructure needed for it, all on top of paperwork needing to be done at home during my absence, there was pretty much no time left for me to look at code. I somehow still managed to squeeze in a few commits to fix some blockers and a few trivial things, but that means that larger projects (even something as \\ufffd\\ufffd\\ufffdsimple\\ufffd\\ufffd\\ufffd as reviewing <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=711382\">a new set of icons</a>) had to be renegotiated in my TODO list.</p> <p><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-11-02.jpg\"><img alt=\"2013-11-02\" class=\"alignnone size-medium wp-image-2510\" height=\"281\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-11-02-500x281.jpg\" width=\"500\"/></a></p> <p>While staying with Mathieu in the past few days, we made some good progress on a big project coming up for Pitivi (more on that later) and released <a href=\"http://wiki.pitivi.org/wiki/0.92\">0.92</a> to provide some fixes and polish over the <a href=\"http://wiki.pitivi.org/wiki/0.91\">earth-shattering 0.91</a>. As you can see, this release comes just one month after the biggest release in years, so we are indeed aiming to get back onto a \\ufffd\\ufffd\\ufffdrelease early, release often\\ufffd\\ufffd\\ufffd cycle now. We hope you like it.</p></div>     </content>     <updated>2013-11-04T13:47:34Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"R&#xE9;alisations\"/>     <category term=\"Vie personnelle\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-07-07T13:45:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2498</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/10/05/pitivi-0-91-charming-defects/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F10%2F05%2Fpitivi-0-91-charming-defects%2F&amp;language=en_GB&amp;category=software&amp;title=Pitivi+0.91+%26%238220%3BCharming+Defects%26%238221%3B&amp;description=And+so+it+has+come+to+this.+A+few+days+ago%2C+we+stealthily+published+the+tarball+of+the+first+Pitivi+video+editor+release+based+on+the+GES+engine.+Incredible+but...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Pitivi 0.91 \\ufffd\\ufffd\\ufffdCharming Defects\\ufffd\\ufffd\\ufffd</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">And so it has come to this. A few days ago, we stealthily published the tarball of the first Pitivi video editor release based on the GES engine. Incredible but true! 0.91 is finally out! In case you were living \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/10/05/pitivi-0-91-charming-defects/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>And so it has come to this.</p> <p><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-10-05.png\"><img alt=\"2013-10-05\" class=\"alignnone size-medium wp-image-2499\" height=\"281\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-10-05-500x281.png\" width=\"500\"/></a></p> <p><span id=\"more-2498\"/></p> <p>A few days ago, we stealthily published <a href=\"http://ftp.gnome.org/pub/GNOME/sources/pitivi/0.91/\">the tarball</a> of the first <a href=\"http://www.pitivi.org\">Pitivi video editor</a> release based on the <a href=\"http://wiki.pitivi.org/wiki/GES\">GES</a> engine. Incredible but true! <strong>0.91 is finally out!</strong> In case you were living under a rock for the past two years, this release is the result of a major rework of the entire Pitivi <a href=\"http://wiki.pitivi.org/wiki/Architecture\">architecture</a>, and as such it is considered an \\ufffd\\ufffd\\ufffdalpha\\ufffd\\ufffd\\ufffd release. From a very (VERY) high level, it includes:</p> <ul> <li>Replacing the core of Pitivi by GES; 20 thousand lines of code removed</li> <li>Porting to GStreamer 1.x</li> <li>Porting to GTK+ 3.x</li> <li>Replacing GooCanvas by Clutter for the timeline</li> <li>An automated UI test suite, with many checks for mission-critical parts</li> <li>Fixing hundreds of bugs</li> <li>Implementing many new features</li> <li>UI polish all over the place</li> <li>Refactoring pretty much the entire codebase</li> </ul> <p>Since 0.15.2, <strong>over 1300 changes</strong> have been committed in Pitivi alone. That\\ufffd\\ufffd\\ufffds not even counting the incredible amount of work we\\ufffd\\ufffd\\ufffdve done in GES and GStreamer. See the details in the <a href=\"http://wiki.pitivi.org/wiki/0.91\">0.91 release notes</a>.</p> <p>I would like to extend my deepest thanks to all the people who, through their contributions and the trust they have put in us over the past two years, have helped us achieve this milestone. The adventure continues however: we need your involvement more than ever to continue on the path we have set! If you\\ufffd\\ufffd\\ufffdve been shy about getting involved because of the huge amount of architectural changes we were going through, <em>now</em> is the perfect time to start <a href=\"http://www.pitivi.org/?go=contributing\">contributing</a> on fresh grounds.</p> <p>Oh, and one more thing: <strong>\\ufffd\\ufffd\\ufffdPiTiVi\\ufffd\\ufffd\\ufffd is now known as \\ufffd\\ufffd\\ufffdPitivi\\ufffd\\ufffd\\ufffd</strong>. Our website, documentation and infrastructure have been updated to reflect this small branding adjustment (the only part I didn\\ufffd\\ufffd\\ufffdt update yet is the logo image). Moreover, in order to support open standards, free ourselves from YouTube (or any third party, really) and to make it easier to transition to a responsive design (more on that later), <strong>we now use HTML5 videos in open formats all across the website</strong>. Woohoo!</p></div>     </content>     <updated>2013-10-05T17:08:33Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"R&#xE9;alisations\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-07-02T16:45:03Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2476</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/09/04/fix-it-thrice/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F09%2F04%2Ffix-it-thrice%2F&amp;language=en_GB&amp;category=software&amp;title=Fix+it+thrice&amp;description=Some+of+you+may+be+familiar+with+the+good+old+%26%238220%3Bfix+it+twice%26%238221%3B+adage%3A+fix+the+problem+and+then+ensure+it+never+happens+again.+Last+year%2C+when+I+made+Pitivi%26%238217%3Bs...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Fix it thrice</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Some of you may be familiar with the good old \\ufffd\\ufffd\\ufffdfix it twice\\ufffd\\ufffd\\ufffd adage: fix the problem and then ensure it never happens again. Last year, when I made Pitivi\\ufffd\\ufffd\\ufffds automatic backup feature work, I requested someone to write extensive \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/09/04/fix-it-thrice/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Some of you may be familiar with the good old \\ufffd\\ufffd\\ufffd<a href=\"http://www.joelonsoftware.com/articles/customerservice.html\">fix it twice</a>\\ufffd\\ufffd\\ufffd adage: fix the problem and then ensure it never happens again.</p> <p><span id=\"more-2476\"/></p> <p>Last year, when I <a href=\"http://jeff.ecchi.ca/blog/2012/01/25/restoring-from-backups/\" title=\"Restoring from backups\">made Pitivi\\ufffd\\ufffd\\ufffds automatic backup feature work,</a> I requested someone to write extensive automated tests for it (with Dogtail), so that I could feel confident about this feature never being broken again, even if it underwent massive refactoring or if everything else changed around it.</p> <p>Turns out that it <em>did</em> break again this year. After the port to <em>GES Assets</em> and <em>GES Project</em>, loading a backup project would not actually populate the media library and timeline! The tests were not strict enough to check those kinds of \\ufffd\\ufffd\\ufffddetails\\ufffd\\ufffd\\ufffd, so this flew completely <a href=\"http://www.youtube.com/watch?feature=player_detailpage&amp;v=lWuunMB_1Rk#t=214\">under the radar</a>.</p> <p>I thought I\\ufffd\\ufffd\\ufffdd fix the whole thing again\\ufffd\\ufffd\\ufffd however, in addition to not wanting to see it break again later I wanted to be <em>more efficient,</em> so I did things differently this time: <a href=\"http://en.wikipedia.org/wiki/Test-driven_development\">test-driven</a> programming. I refactored our automated UI tests, made them much more exhaustive and sadistic, made them fail, and <em>then</em> spent time fixing the code until the tests would pass. And whenever I found another bug in that branch, I wrote tests to fail before I would fix the issue.</p> <p>Now it works, and I can be confident about it again. I have effectively <strong>fixed it thrice</strong>.</p> <p><img alt=\"Testing a bulletproof vest, 1923 - cropped\" class=\"alignnone size-full wp-image-2477\" height=\"367\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/Testing-a-bulletproof-vest-1923-cropped.jpg\" width=\"600\"/></p> <p>Why do I care so much about making it <em>bulletproof?</em> Because <strong>projects are Pitivi users\\ufffd\\ufffd\\ufffd most important data</strong>. It is <em>critical</em> to ensure their safety through unsaved changes warnings, disaster-proof automatic backups, backup restoring that actually works, and preventing accidental overwrites: Pitivi tries to gently steer you away from overwriting important stuff (you need to go through the \\ufffd\\ufffd\\ufffdSave As\\ufffd\\ufffd\\ufffd process and confirm the overwrite, if you consider the restored version to be the correct one). All that, and much more, is part of my automated tests.</p> <h1>Other recent stuff</h1> <h2>Software Center description</h2> <p>I\\ufffd\\ufffd\\ufffdve been watching closely as Richard Hughes put forth a proposal for a new <a href=\"http://people.freedesktop.org/~hughsient/appdata/\">specification to describe applications in the GNOME Software Center</a>. Here is what I wrote for Pitivi.</p> <p>Summary:</p> <blockquote><p>A video editor that aims to appeal to hobbyists and professionals alike, with a strong focus on usability, efficiency and quality</p></blockquote> <p>Description:</p> <blockquote><p>Integrating well with the GNOME desktop environment and other applications, Pitivi sports a beautiful user interface designed to be powerful yet easy to learn.</p> <p>With a non-modal editing workflow, a framerate-independent and playhead-centric timeline, Pitivi allows you quickly and accurately trim, split and review your scenes. Pitivi\\ufffd\\ufffd\\ufffds ripple and roll editing features allow spending more time on storytelling and less time on \\ufffd\\ufffd\\ufffdpushing clips around\\ufffd\\ufffd\\ufffd.</p> <p>Some other features include:</p> <ul> <li>Accepts any file formats supported by the GStreamer multimedia framework</li> <li>Can animate hundreds of special effects and filters with keyframable properties</li> <li>Ability to set custom aspect ratios, framerates and rendering presets</li> <li>Easy to use crossfades and SMPTE transitions</li> <li>Multihead-friendly with detachable user interface components</li> </ul> </blockquote> <p>Hopefully this should capture the essence of what it can do.</p> <p>On a sidenote, we currently use INTLTOOL_XML_RULE to make this file translatable, and I heard that\\ufffd\\ufffd\\ufffds <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=707510\">terribly uncool</a>. Please help us by providing a patch to make it work using itstool instead!</p> <h2>New project render dialog, filesize estimates</h2> <p>It feels great when you pick up a patch you wrote \\ufffd\\ufffd\\ufffdblindfolded\\ufffd\\ufffd\\ufffd four months ago (back then, it was impossible to test) and see it \\ufffd\\ufffd\\ufffdjust work\\ufffd\\ufffd\\ufffd: I had this small \\ufffd\\ufffd\\ufffdKnuth\\ufffd\\ufffd\\ufffd moment when it not only rebased cleanly, but worked as intended with only one or two Python syntax adjustments. The patch in question is a little feature I wanted to make it easier to figure out if the resolution/quality/bitrate settings I chose are getting me to get the kind of filesize I want: <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=637079\">output filesize estimation</a>.</p> <p><img alt=\"2013-08-31 23:26:09\" class=\"alignnone size-full wp-image-2478\" height=\"206\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-08-31-232609.png\" width=\"408\"/></p> <p>The algorithm I devised is na\\ufffd\\ufffdve, but does the trick for the vast majority of cases. I cheat a little bit by waiting long enough to have gathered enough data for prediction to be somewhat significative, and by fuzzying the estimates\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd you\\ufffd\\ufffd\\ufffdd be surprised how innacuracy can improve perceived accuracy!</p> <p>While I was doing that, I started playing around to make the rendering dialog prettier and more informative. For starters, the \\ufffd\\ufffd\\ufffdRendering movie\\ufffd\\ufffd\\ufffd header felt wrong for various reasons, and this became quite apparent once you add the \\ufffd\\ufffd\\ufffdEstimated filesize\\ufffd\\ufffd\\ufffd text right below it. Rewording the header to say something like \\ufffd\\ufffd\\ufffdYour movie is now being rendered and encoded\\ufffd\\ufffd\\ufffd didn\\ufffd\\ufffd\\ufffdt help much.</p> <p>That header was basically still duplicating what was in the window title. I pondered what could be put in its place; emptiness would look a bit silly, as the dialog would just be a titlebar, a progressbar and buttons. I then decided to put some informational text for educational purposes: <strong>few people actually understand what factors influence the encoding performance</strong> (or the speed at which your project renders), yet many people are surprised when it takes a long time, so I thought I\\ufffd\\ufffd\\ufffdd add a contextual tip:</p> <p><img alt=\"2013-09-01 00:14:09\" class=\"alignnone size-full wp-image-2481\" height=\"281\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-09-01-001409.png\" width=\"408\"/></p> <p><img alt=\"2013-09-01 00:12:17\" height=\"281\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-09-01-001217.png\" width=\"408\"/></p> <p>\\ufffd\\ufffd\\ufffdWhat\\ufffd\\ufffd\\ufffds that ridiculous amount of empty space below the progressbar\\ufffd\\ufffd\\ufffd, you say? A bug in GTK, it seems. I spent quite some time changing things all over the place until I discovered that making the window non-resizable \\ufffd\\ufffd\\ufffdfixes\\ufffd\\ufffd\\ufffd the issue. My guess is that GTK3\\ufffd\\ufffd\\ufffds size calculations are based on the height of the window before its width would be set by the \\ufffd\\ufffd\\ufffddefault width\\ufffd\\ufffd\\ufffd property in my dialog\\ufffd\\ufffd\\ufffd and then the height would never shrink. How odd. Anyway, the new text paragraph does prevent the window from being too narrow now, so the dialog doesn\\ufffd\\ufffd\\ufffdt really need to be resized by users. Here\\ufffd\\ufffd\\ufffds how it looks like now:</p> <p><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-09-01-095422.png\"><img alt=\"2013-09-01 09:54:22\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-09-01-095422.png\"/></a></p> <p>Certainly more useful than what we started out with, isn\\ufffd\\ufffd\\ufffdt it? Paying attention to little details like that\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd having empathy for your userbase\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd allows creating what I call \\ufffd\\ufffd\\ufffdintuitive\\ufffd\\ufffd\\ufffd or \\ufffd\\ufffd\\ufffdself-documenting\\ufffd\\ufffd\\ufffd software.</p> <h1>Brace yourselves, 0.91 is coming</h1> <p>Oh, did I mention that Pitivi actually renders now? Well yes, that\\ufffd\\ufffd\\ufffds because we (especially Mathieu) have been doing a massive amount of work all across the GStreamer, GES and Pitivi stack to make this happen.</p> <p>We have been incredibly busy in the past few months, pushing really hard to finally get a release out of the door by the end of the summer. In recent times, we have committed around 250 changes in Pitivi, 180 in GES, and I don\\ufffd\\ufffd\\ufffdt know how many hundreds in GStreamer. My spare time was spent swimming through emails, having <em>many</em> technical discussions on IRC and dealing with hundreds of bug reports/issues/TODOs.</p> <div class=\"wp-caption alignnone\" id=\"attachment_2483\" style=\"width: 594px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-08-01-18.20.51.jpg\"><img alt=\"Working hard at GUADEC\" class=\"size-large wp-image-2483\" height=\"334\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-08-01-18.20.51-1024x587.jpg\" width=\"584\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Working hard at GUADEC</p></div> <p>With a few issues remaining (mainly related to scaling in videomixer), we\\ufffd\\ufffd\\ufffdre now at the point where stuff\\ufffd\\ufffd\\ufffd works. Audio mixing and video compositing are back (and keyframable), effect properties are keyframable, deadlocks and crashers are pretty much gone (as far as we can tell), etc. I\\ufffd\\ufffd\\ufffdm starting to run out of bugs. Amazing!</p> <p>We can <em>finally</em> make an alpha release in the near future.</p> <h2>How you can help with 0.91</h2> <p>0.91 will be our first alpha release based on GES. It\\ufffd\\ufffd\\ufffds a very exciting release with many improvements, bug fixes and new shiny things. You can help by:</p> <ul> <li><strong>Trying out the <a href=\"http://wiki.pitivi.org/wiki/Building_with_GES\">development version</a> right now</strong>. Come have a chat and let us know how well it works for you!</li> <li>Documenting. The <strong>user manual</strong> is quite outdated right now (it is still based on the 0.15 featureset). We need writers!</li> <li>Helping me prepare the huge <strong>release notes</strong>. If you\\ufffd\\ufffd\\ufffdre crazy enough.</li> <li>Creating simple and lightweight <a href=\"https://github.com/pitivi/assets\">test projects for Mathieu</a></li> <li><strong>Helping with packaging</strong> efforts (ensuring this can be packaged nicely, fixing build/setup issues etc.). Two issues you can tackle immediately are: <ul> <li>The port to Yelp tools <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=687563#c12\">broke our make distcheck</a>, and this blocks the release. Help!</li> <li>We implemented the AppData spec but we use INTLTOOL_XML_RULE\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd please <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=707510\">provide us with a patch to make it work with itstool instead</a>. I know nothing about this stuff.</li> </ul> </li> <li>Revising the existing bug reports and doing a big triage cleanup</li> <li><strong>Hacking!</strong> As usual, we\\ufffd\\ufffd\\ufffdll be happy to help you get started.</li> <li>Spreading the news</li> </ul></div>     </content>     <updated>2013-09-04T21:45:08Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"Usability\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-04-11T12:00:09Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://lubosz.wordpress.com/?p=69</id>     <link href=\"https://lubosz.wordpress.com/2013/08/28/view-side-by-side-stereoscopic-video-with-gstreamer-and-oculus-rift/\" rel=\"alternate\" type=\"text/html\"/>     <title>View Side-by-Side Stereoscopic Videos with GStreamer and Oculus Rift</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">GStreamer can do a lot. Most importantly it has the exact functionality I was looking for when I wanted to play a stereoscopic video on the Oculus Rift: Decoding a video stream and applying a GLSL fragment shader to it. \\ufffd\\ufffd\\ufffd <a href=\"https://lubosz.wordpress.com/2013/08/28/view-side-by-side-stereoscopic-video-with-gstreamer-and-oculus-rift/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a><img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=lubosz.wordpress.com&amp;blog=39161129&amp;post=69&amp;subd=lubosz&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p><a href=\"https://lubosz.files.wordpress.com/2013/08/screenshot-from-2013-08-28-163617.png\"><img alt=\"Screenshot from 2013-08-28 16:36:17\" class=\"aligncenter\" src=\"https://lubosz.files.wordpress.com/2013/08/screenshot-from-2013-08-28-163617.png?w=600\"/></a></p> <p>GStreamer can do a lot. Most importantly it has the exact functionality I was looking for when I wanted to play a stereoscopic video on the Oculus Rift: Decoding a video stream and applying a GLSL fragment shader to it.</p> <h1>Available Players</h1> <p>I found a few solutions that to try to achieve that goal, but they were very unsatisfactory. Mostly they failed to decode the video stream or didn\\ufffd\\ufffd\\ufffdt start for other reasons. They are not maintained that well, since they are recent one man projects with compiled only releases on forums. And worst of all, they only support Windows.</p> <p>Surprisingly, I experienced the best results with <a href=\"http://www.riftenabled.com/admin/app/128\">OculusOverlay</a> and VLC Player. Which transforms a hardcoded part of your desktop in a very hacky way with XNA. Works also with YouTube.</p> <p><a href=\"http://videopal.videogame.se/\">VideoPal</a> is a player written in Java and using JOGL. In theory it could work in Linux but:</p> <blockquote><p>Exception in thread \\ufffd\\ufffd\\ufffdmain\\ufffd\\ufffd\\ufffd java.lang.UnsatisfiedLinkError: Could not load SWT library. Reasons:<br/> no swt-win32-3740 in java.library.path</p></blockquote> <p>Yeah.. no time for jar reverse engineering and no link to the source. I was able to run it on Windows, but it couldn\\ufffd\\ufffd\\ufffdt open a H264 video.</p> <p>There is also <a href=\"http://www.riftenabled.com/admin/app/70\">OculusPlayer</a> using libvlc but does not release the source. The idea is good, but it didn\\ufffd\\ufffd\\ufffdt work.</p> <p><a href=\"http://vrplayer.codeplex.com/\">VR Player</a> is a GPLv2 licenced Player written in C#. It also couldn\\ufffd\\ufffd\\ufffdt decode the stream.</p> <p>Another player is <a href=\"http://www.riftenabled.com/admin/app/182\">VR Cinema 3D</a>, which does not play a stereo video, but simulates a virtual cinema with a 2D film. Funny idea.</p> <h1>Get some Stereo Videos</h1> <p>You can search for stereoscopic videos on YouTube with the 3D search filter. There a tons of stereoscopic videos, like this video of <a href=\"http://www.youtube.com/watch?v=tgWIdiEponQ\">Piranhas</a>.</p> <p>Download the YouTube video with the YouTube downloader of you choice, which supports 3D videos. For example <a href=\"http://deturl.com/bookmarklet-to-directly-download-videos-from-youtube.asp\">PwnYouTube</a>.</p> <p>For convenient usage in the terminal you should rename the file to something short and without spaces.</p> <h1>Using GStreamer</h1> <p>The minimal GStreamer pipeline for playing the video stream of a mp4 file\\ufffd\\ufffd(QuickTime / H.264 / AAC) \\ufffd\\ufffdlooks like this</p> <blockquote><p>$ gst-launch-1.0 filesrc location=piranhas.mp4 ! qtdemux ! avdec_h264 ! autovideosink</p></blockquote> <p>It contains the GStreamer elements for file source, QuickTime demuxer, H264 decoder and the automatic video sink.</p> <p>If you want more information on the elements, try gst-inspect</p> <blockquote><p>$ gst-inspect-1.0 qtdemux</p></blockquote> <p>If you want audio you need to name the demuxer and add a audio queue with a decoder and an audio sink.</p> <blockquote><p>$ gst-launch-1.0 filesrc location=piranhas.mp4 ! qtdemux name=dmux ! avdec_h264 ! autovideosink dmux. ! queue ! faad ! autoaudiosink</p></blockquote> <p>Let\\ufffd\\ufffd\\ufffds add some Oculus Rift distortion now. We will use a GLSL fragment shader and the\\ufffd\\ufffdglshader element from the <a href=\"http://cgit.freedesktop.org/gstreamer/gst-plugins-gl/\">gst-plugins-gl</a> package for that. Since the GStreamer GL Plugins are not released yet, you need to build them by yourself. You could use my Archlinux <a href=\"https://aur.archlinux.org/packages/gst-plugins-gl-git/\">AUR package</a> or the GStreamer SDK build system <a href=\"http://cgit.freedesktop.org/gstreamer-sdk/cerbero/\">cerbero</a>. Here is a tutorial how to <a href=\"http://docs.gstreamer.com/display/GstSDK/Building+from+source+using+Cerbero\">build GStreamer with cerbero</a>.</p> <p>In the GLSL shader you can change some parameters like video resolution, eye distance, scale and kappa. This could also be done with uniforms and set by a GUI.</p> <p/> <p>The final GStreamer pipeline looks like this. Since we are using a GL plugin, we need to use the glimagesink.</p> <p><strong>TL;DR</strong></p> <blockquote><p>$ gst-launch-1.0 filesrc location=piranhas.mp4 ! qtdemux name=dmux ! avdec_h264 ! glshader location=distortion.frag ! glimagesink dmux. ! queue ! faad ! autoaudiosink</p></blockquote> <p>Seeking and full screen are features that could be achieved in a GStreamer python application.</p><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/lubosz.wordpress.com/69/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/lubosz.wordpress.com/69/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=lubosz.wordpress.com&amp;blog=39161129&amp;post=69&amp;subd=lubosz&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2013-08-28T14:40:13Z</updated>     <category term=\"Uncategorized\"/>     <category term=\"pitivi\"/>     <author>       <name>lubosz</name>     </author>     <source>       <id>https://lubosz.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://lubosz.wordpress.com/tag/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://lubosz.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://lubosz.wordpress.com/osd.xml\" rel=\"search\" title=\"Lubosz's Blog\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://lubosz.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>This was supposed to be the future.</subtitle>       <title>Lubosz's Blog \\ufffd\\ufffd pitivi</title>       <updated>2015-03-19T08:45:07Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2470</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/07/26/prague-brno-london-gnome-pitivi/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F07%2F26%2Fprague-brno-london-gnome-pitivi%2F&amp;language=en_GB&amp;category=software&amp;title=Prague%2C+Brno%2C+London%2C+GNOME+%2B+Pitivi&amp;description=Guess+where+I+am+going%3F+To+the+end+of+the+world+and+back+To+that+event+%26%238220%3Bwhere+nobody+goes+anymore%26%238221%3B.+I%26%238217%3Bm+not+entirely+sure+what%26%238217%3Bs+in+the+air+this+year....&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Prague, Brno, London, GNOME + Pitivi</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Guess where I am going? To the end of the world and back To that event \\ufffd\\ufffd\\ufffdwhere nobody goes anymore\\ufffd\\ufffd\\ufffd. I\\ufffd\\ufffd\\ufffdm not entirely sure what\\ufffd\\ufffd\\ufffds in the air this year. I\\ufffd\\ufffd\\ufffdm not talking about what\\ufffd\\ufffd\\ufffds been going on in the \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/07/26/prague-brno-london-gnome-pitivi/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Guess where I am going?</p> <p/><div class=\"wp-caption alignnone\" id=\"attachment_2471\" style=\"width: 510px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><a href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-07-25-22.30.51.jpg\"><img alt=\"2013-07-25--22.30.51\" class=\"size-medium wp-image-2471\" height=\"353\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-07-25-22.30.51-500x353.jpg\" width=\"500\"/></a><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">That moment when you think \\ufffd\\ufffd\\ufffdjeez, I wish I could bring less equipment with me for once\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd</p></div><span id=\"more-2470\"/><p/> <h1>To the end of the world and back</h1> <p>To that event \\ufffd\\ufffd\\ufffdwhere nobody goes anymore\\ufffd\\ufffd\\ufffd. I\\ufffd\\ufffd\\ufffdm not entirely sure what\\ufffd\\ufffd\\ufffds in the air this year. I\\ufffd\\ufffd\\ufffdm not talking about what\\ufffd\\ufffd\\ufffds been going on in the industry and the public perception of GNOME in various circles, that might not be the whole picture. There may also be something else I\\ufffd\\ufffd\\ufffdd like to assess while I\\ufffd\\ufffd\\ufffdm there. While I deeply disagree with the use of sensationalistic and \\ufffd\\ufffd\\ufffddemotivational\\ufffd\\ufffd\\ufffd titles like Lionel\\ufffd\\ufffd\\ufffds last blog post, some of those concerns are quite valid and important to our sustainability. I, for one, am looking forward to participating in the ecosystem <a href=\"https://wiki.gnome.org/GUADEC/2013/BOFs\">BoF</a>.</p> <h1>Taking it easy. Maybe.</h1> <ul> <li>Before GUADEC, I will spend a few days visiting Prague with friends. I\\ufffd\\ufffd\\ufffdm pretty bad at this \\ufffd\\ufffd\\ufffdtaking vacations\\ufffd\\ufffd\\ufffd thing however; my obsessive self might spend time trying to fix some Pitivi issues instead of being a good tourist.</li> <li>I will not be working while at GUADEC. I will be devoting my mind to attending and giving (two!) presentations, interacting with new and old community members and having fun (might even try playing <a href=\"https://wiki.gnome.org/GUADEC/2013/Football\">futbol this year</a>, but I fear Bastien will kick my arse for all those years of pestering him with bug reports). <ul> <li>I might have a twisted definition of \\ufffd\\ufffd\\ufffdfun\\ufffd\\ufffd\\ufffd though: I have 30+ items in <a href=\"http://gtgnome.net/\">GTG</a> tagged \\ufffd\\ufffd\\ufffd@guadec\\ufffd\\ufffd\\ufffd, which means I will be chasing down people all over the place. I\\ufffd\\ufffd\\ufffdm looking at you, <em>Allan, Bastien, Karen, Cosimo, Benjamin, Zeeshan, Jon, Lionel, Jakub, Sebastian, Tim, Edward,\\ufffd\\ufffd\\ufffd </em>gosh, the list is endless. I\\ufffd\\ufffd\\ufffdm forgetting a ton of people. I also have to catch up with Igalians, Lanedians, Pitivites\\ufffd\\ufffd\\ufffd the fact that I didn\\ufffd\\ufffd\\ufffdt mention your name doesn\\ufffd\\ufffd\\ufffdt imply that you\\ufffd\\ufffd\\ufffdre safe.</li> </ul> </li> <li>Unfortunately, special circumstances will call me back to work in the last few days of GUADEC. I will be in London on the 8th and 9th.</li> </ul> <p>If you want to catch me in Prague or London, let me know.</p> <div class=\"wp-caption alignnone\" id=\"attachment_2472\" style=\"width: 510px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><img alt=\"2013-07-25--23.13.44\" class=\"size-full wp-image-2472\" height=\"281\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-07-25-23.13.44.jpg\" width=\"500\"/><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">All the equipment shown previously fits in these two carry-on bags. Nekohayorganization at its finest.</p></div> <h1>Pitivi happenings</h1> <ul> <li><a href=\"https://plus.google.com/events/cojglsgghee7c70ik1cu89q50ag\"> Pitivi hackfest @ GUADEC 2013</a>. Be there.</li> <li>I think I\\ufffd\\ufffd\\ufffdm at the point where I really need <strong>someone to succeed me in the role of writing the Pitivi user guide and release notes for the upcoming release</strong>. Please get in touch if you love writing and are interested in helping out. If you\\ufffd\\ufffd\\ufffdre at GUADEC, we can even get started together!</li> <li>Interesting results for the 2013 Pitivi user survey, pretty much confirming what I\\ufffd\\ufffd\\ufffdve been thinking for many years. Hopefully I\\ufffd\\ufffd\\ufffdll touch upon that in my talk.</li> <li>For those interested in vastly improved playback performance with super-high-definition footage: take a look at <a href=\"http://wiki.pitivi.org/wiki/Proxy_editing_requirements\">our spec for proxy editing</a> and let us know what you think. Anton, one of our GSoC students, is working on laying the foundations for that. <ul> <li>I haven\\ufffd\\ufffd\\ufffdt had time to blog about the big question around video codecs, but I\\ufffd\\ufffd\\ufffdll get to that eventually. Grab me at GUADEC to discuss this, if the feature matters to you or if space-performance tradeoffs are a problem that you find interesting to think about.</li> </ul> </li> <li><strong>Brace yourselves, a new website is coming</strong>. It\\ufffd\\ufffd\\ufffds friggin\\ufffd\\ufffd\\ufffd awesome. Not releasing it yet though, so you can relax for now.</li> <li>Mathieu Duponchelle made a small script to do <a href=\"http://www.youtube.com/watch?v=grTxE6sFIJM\">special video compositing of a dance clip</a>\\ufffd\\ufffd\\ufffd in <b>ten minutes<b>!</b></b> That\\ufffd\\ufffd\\ufffds how powerful GES is: it\\ufffd\\ufffd\\ufffds not just about making full-fledged video editing apps, it\\ufffd\\ufffd\\ufffds also a powerful scripting and automation engine. See his <a href=\"http://mathieuduponchelle.github.io/coding/2013/06/08/Fun-with-videomixer.html\">explanations (with source code!) here</a>.</li> </ul></div>     </content>     <updated>2013-07-26T05:24:21Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-03-23T14:45:04Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2428</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/06/25/2013-open-source-video-editor-user-survey/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F06%2F25%2F2013-open-source-video-editor-user-survey%2F&amp;language=en_GB&amp;category=software&amp;title=2013+open+source+video+editor+user+survey&amp;description=What+was+initially+planned+as+a+one-question+referendum+for+Pitivi+users+%28how+critical+is+it+for+us+to+have+perfect+xptv+import+on+the+upcoming+release%29+became+a+full-fledged+survey...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>2013 open source video editor user survey</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">What was initially planned as a one-question referendum for Pitivi users (how critical is it for us to have perfect xptv import on the upcoming release) became a full-fledged survey to give us a clearer picture of what users care \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/06/25/2013-open-source-video-editor-user-survey/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>What was initially planned as a one-question referendum for <a href=\"http://pitivi.org\">Pitivi</a> users <em>(how critical is it for us to have perfect xptv import on the upcoming release)</em> became a full-fledged survey to give us a clearer picture of what users care the most about these days. If you\\ufffd\\ufffd\\ufffdre a fan of Free Software and video editing, please take a few seconds to fill <a href=\"https://docs.google.com/forms/d/1H9wkzGSGisgNGVHEHph47Jvtmo44NKhvxM--JQOE-wM/viewform\">this survey</a>. Please please share this with everyone you know who is interested in Free and Open-Source video editing. Thanks!</p> <p><span id=\"more-2428\"/></p> <p><strong>Version fran\\ufffd\\ufffdaise:</strong> la prochaine version de <a href=\"http://pitivi.org\">Pitivi</a> approche rapidement. Suite \\ufffd\\ufffd une discussion concernant nos priorit\\ufffd\\ufffds \\ufffd\\ufffd court terme afin de pouvoir sortir une nouvelle version au cours de l\\ufffd\\ufffd\\ufffd\\ufffd\\ufffdt\\ufffd\\ufffd (avec un peu de chance), nous avons concoct\\ufffd\\ufffd un court sondage sur votre utilisation des logiciels de montage vid\\ufffd\\ufffdo libres. S\\ufffd\\ufffd\\ufffdil-vous-pla\\ufffd\\ufffdt, veuillez prendre quelques secondes pour r\\ufffd\\ufffdpondre \\ufffd\\ufffd <a href=\"https://docs.google.com/forms/d/1H9wkzGSGisgNGVHEHph47Jvtmo44NKhvxM--JQOE-wM/viewform\">ce d\\ufffd\\ufffdlicieux questionnaire</a>, et n\\ufffd\\ufffd\\ufffdh\\ufffd\\ufffdsitez pas \\ufffd\\ufffd en parler \\ufffd\\ufffd tous ceux autour de vous qui s\\ufffd\\ufffd\\ufffdint\\ufffd\\ufffdressent \\ufffd\\ufffd l\\ufffd\\ufffd\\ufffd\\ufffd\\ufffddition vid\\ufffd\\ufffdo libre!</p></div>     </content>     <updated>2013-06-25T20:14:24Z</updated>     <category term=\"Pitivi\"/>     <category term=\"Plan&#xE8;te Libre\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-03-04T15:00:04Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2418</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/06/08/status-update-new-pitivi-timeline-gsoc-projects-etc/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-clutter-timeline-2013-06-08.webm\" length=\"1472852\" rel=\"enclosure\" type=\"application/wordperfect\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F06%2F08%2Fstatus-update-new-pitivi-timeline-gsoc-projects-etc%2F&amp;language=en_GB&amp;category=software&amp;title=Status+update+%E2%80%94+new+Pitivi+timeline%2C+GSoC+projects%2C+etc&amp;description=Dear+shareholders+fans%2C+here+is+the+quarterly+report+from+the+frontlines+of+Pitivi%2C+your+favorite+futuretrocyberpunk+video+editor.+I+will+cover+the+following+from+a+very+high-level+view+%28I%26%238217%3Bll+have...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>Status update \\ufffd\\ufffd\\ufffd new Pitivi timeline, GSoC projects, etc</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Dear shareholders fans, here is the quarterly report from the frontlines of Pitivi, your favorite futuretrocyberpunk video editor. I will cover the following from a very high-level view (I\\ufffd\\ufffd\\ufffdll have to make separate blog posts to cover them in detail, \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/06/08/status-update-new-pitivi-timeline-gsoc-projects-etc/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Dear <del>shareholders</del> fans, here is the quarterly report from the frontlines of Pitivi, your favorite futuretrocyberpunk video editor.</p> <p><span id=\"more-2418\"/></p> <div class=\"wp-caption alignnone\" id=\"attachment_2419\" style=\"width: 510px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><img alt=\"2013-06-08\" class=\"size-full wp-image-2419\" height=\"284\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-06-08.jpg\" width=\"500\"/><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">A typical day in my life as of late</p></div> <p>I will cover the following from a very high-level view (I\\ufffd\\ufffd\\ufffdll have to make separate blog posts to cover them in detail, there\\ufffd\\ufffd\\ufffds too much to say):</p> <ul> <li>The state of our multimedia stack</li> <li>Our new timeline canvas and how you can help</li> <li>This year\\ufffd\\ufffd\\ufffds accepted Summer of Code projects</li> <li>Upcoming GUADEC presentation</li> </ul> <p>Also, a small announcement: for those who also want some shorter, less formal status updates and occasional feedback probes, you can look at the new <a href=\"https://plus.google.com/+pitivi\">PiTiVi G+ page</a>.</p> <h1>Clutter timeline canvas</h1> <p>In preparation for the Summer of Code, but mostly just to help us and demonstrate how much of a badass he is, Mathieu Duponchelle killed our goocanvas-based timeline and redid the whole thing with <a href=\"http://en.wikipedia.org/wiki/Clutter_%28toolkit%29\">Clutter</a>. In <em>two weeks</em>. This is what it looks like at the moment:</p>         <div>    <div class=\"video-wrapper\" style=\"padding-bottom: 56.25%;\">         <video class=\"video-js vjs-default-skin\" controls=\"controls\" height=\"360\" id=\"example_video_id_500713821\" preload=\"none\" width=\"640\">      <source src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-clutter-timeline-2013-06-08.webm\" type=\"video/webm; codecs=&quot;vp8, vorbis&quot;\"/>     </video>       </div>   </div>       <h1>The state of our multimedia stack</h1> <p>We fixed some initial bugs in GNonLin <a href=\"http://jeff.ecchi.ca/blog/2013/04/03/gstreamer-hackfest-2013-moving-images/\" title=\"GStreamer Hackfest 2013: Moving Images\"> in Milan</a>. Since then, further investigation revealed that most of the issues we are encountering are actually generic bugs in GStreamer. Mathieu is now working full time on fixing bugs everywhere in the stack. We hope to have something showable (beta) for GUADEC and a release this fall\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd as you can imagine however, I\\ufffd\\ufffd\\ufffdm unable to make solid promises at this point.</p> <p>There are still many things that we need to rearchitect in GNonLin, but that\\ufffd\\ufffd\\ufffds a story for another blog post.</p> <p>We recently started using Github\\ufffd\\ufffd\\ufffds bug tracking tool to keep a more easily manageable list of <a href=\"https://github.com/pitivi/pitivi/issues/\">issues we have to deal with</a> in the development version. Please note:</p> <ul> <li>This is <em>not</em> a replacement for GNOME Bugzilla. It is meant as a temporary measure for our extended development version, for stuff that is too small, fluid or uncertain to be filed as proper bug reports. Once we release, we\\ufffd\\ufffd\\ufffdll move remaining issues to Bugzilla. Upstream issues in GStreamer, once properly identified, are always filed in GStreamer\\ufffd\\ufffd\\ufffds (GNOME) Bugzilla.</li> <li>We welcome your help in fixing or investigating these issues. There\\ufffd\\ufffd\\ufffds also an \\ufffd\\ufffd\\ufffd<a href=\"https://github.com/pitivi/pitivi/issues?labels=Easy\">easy</a>\\ufffd\\ufffd\\ufffd tag for those of you looking for bitesized stuff.</li> </ul> <h1>Stuff you can fix in Pitivi, right now.</h1> <p>If working on GStreamer and GES is not your cup of tea, we still have a ton of fun little projects for you to do on Pitivi itself, including:</p> <ul> <li>A bunch of little <a href=\"https://github.com/pitivi/pitivi/issues?labels=%28Clutter%29+timeline+canvas\">nitpicks/papercuts for our Clutter timeline</a></li> <li>During the port to Clutter, Daniel Thul helped Mathieu by rearchitecturing and fixing the timeline clip thumbnailer module. It works, but there are <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=700610\">some remaining, significant performance issues</a>. This is a <em>great</em> project if you\\ufffd\\ufffd\\ufffdre looking for finite, concrete, <a href=\"https://git.gnome.org/browse/pitivi/tree/pitivi/timeline/previewers.py\">self-contained</a> work to improve performance with a <em>very</em> highly visible impact on the UI. You would get a ton of love points for this.</li> <li>We have a title editor UI, but it needs some love. You don\\ufffd\\ufffd\\ufffdt want us to ship with an unrefined UI, do you?</li> <li><a href=\"http://wiki.pitivi.org/wiki/Test_suite_wishlist\">UI tests</a>!</li> </ul> <h1>This Summer of Code\\ufffd\\ufffd\\ufffds projects</h1> <p>We have four students working on Pitivi this summer, thanks to GNOME kindly offering us an extra slot to be able to achieve our mission. Here\\ufffd\\ufffd\\ufffds our ambitious list of project goals:</p> <ul> <li>General bug fixing in the entire GStreamer + GES + Pitivi stack, to be able to make a Pitivi release.</li> <li>Motion ramping (keyframable fast/slow motion, allowing the speed of clips to be changed over time, ideally with smooth frame interpolation)</li> <li>Finish the enablement of our new timeline layers management UI</li> <li>Reimplement audio waveforms. Better, faster, stronger.</li> <li>Video compositing</li> <li><a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=609136\">Proxy editing</a>. I\\ufffd\\ufffd\\ufffdm currently writing a design and API requirements brainstorming page to help plan this feature. I will share it in my next blog post, where I\\ufffd\\ufffd\\ufffdll present some of the dilemmas I\\ufffd\\ufffd\\ufffdm encountering (particularly around codecs).</li> </ul> <h1>Presenting at GUADEC</h1> <p><img alt=\"\" class=\"alignnone\" height=\"259\" src=\"https://www.guadec.org/wp-content/themes/wordcamp-base/images/guadec2012.png\" width=\"564\"/></p> <p>Come to <a href=\"http://guadec.org\">GUADEC</a> and attend my presentation at the beginning of August. Plans are a bit fuzzy for the time being, but you can expect my typical <a href=\"http://jeff.ecchi.ca/blog/2012/08/12/guadec-talk-video-published/\" title=\"GUADEC talk video published\">award-winning</a> presentation style. Also, as usual, we\\ufffd\\ufffd\\ufffdll be having a <strong>Pitivi hackfest</strong> there. Czech it out.</p></div>     </content>     <updated>2013-06-08T21:32:57Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-02-27T14:30:05Z</updated>     </source>   </entry>    <entry>     <id>http://mathieuduponchelle.github.io/coding/2013/06/08/Fun-with-videomixer</id>     <link href=\"http://mathieuduponchelle.github.io//coding/2013/06/08/Fun-with-videomixer.html\" rel=\"alternate\" type=\"text/html\"/>     <title>Fun with videomixer</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><h2> Introduction </h2><p> When you've spent the whole week painstakingly fixing bugs, coding something just for fun is a welcome breath of fresh air. These last weeks, one of my areas of work has been the gstreamer \"videomixer\" element. It needed some love, and still needs, but I've been able to fix some of the issues we had. When we first ported gstreamer-editing-services and gnonlin to gstreamer 1.0, even the most basic editing became impossible. That was quite frustrating to say the least, and being able to do edition once again feels extremely good ! </p><p> One of the great things with the extraction of pitivi's edition code to GES is that you can now write fancy scripts to make automated edition, and with a little luck you won't encounter a bug on your way. At the end of this article, you will find a video showing an example result. </p><p> There haven't been much tutorials about using GES, the only way to learn that is either looking at the examples on the git repo, or to directly look at pitivi's source code. With that blogpost I'm gonna try to present that cool library, while coding something fun. The idea from the script came from that video : http://vimeo.com/35770492, linked to me by Nicolas Dufresne. We won't be able to reproduce the most advanced bits of this video, as it also seems to be content-aware at some points, but we will make a fun script nevertheless ! </p><h2> Sounds sweet, where's the code ? </h2><div>  </div><h2> Looks fine, explain it now ! </h2><p> I'll select the meaningful bits, assuming you know python well enough. If not, this is easily translatable to C, or any language that can take advantage of GObject introspection's dynamic bindings. </p> <p>First, let\\ufffd\\ufffd\\ufffds look at the main.</p> <pre><code>     timeline = GES.Timeline.new_audio_video() </code> </pre> <p>This convenience function will create a timeline with an audio and a video track for us.</p> <pre><code>     asset = GES.UriClipAsset.request_sync(sys.argv[1])     audio_asset = GES.UriClipAsset.request_sync(sys.argv[3]) </code> </pre> <p>This is part of the new API. Thanks to that, GES will only discover the file once, discovering meaning learning what streams are contained in the media, how long it lasts and other infos. Previously, we would discover the file each time we created an object with it, which was not optimized. request_sync is not what you would use in a GUI application, instead you would want to request_async, then take action in a callback.</p>  <p>Now, let\\ufffd\\ufffd\\ufffds look at createLayers, which is where the magic happens.</p> <pre><code>     layer = timeline.append_layer() </code> </pre> <p>A timeline is a stack of layers, with ascending \\ufffd\\ufffd\\ufffdpriorities\\ufffd\\ufffd\\ufffd. Thanks to these layers, we are able for example to decide if a transition has to be created between two track objects, or, if two clips have an alpha of 1.0, which one will be the \\ufffd\\ufffd\\ufffdtopmost\\ufffd\\ufffd\\ufffd one.</p> <pre><code>     clip = layer.add_asset(asset, i * Gst.SECOND * 0.3, 0, asset.get_duration(), GES.TrackType.UNKNOWN) </code> </pre> <p>This code is very interesting. We are basically asking GES to : create a clip based on the asset we discovered earlier, set its start a i * 0.3 seconds, its inpoint (the place in the file from which it will be played) to 0, and its duration to the original duration of the file. The last argument means : for every kind of stream you find, add it if the timeline contains an appropriate track (here, audio and video). We could have decided to only keep the VIDEO, but that was a good occasion to show that.</p>  <p>With that logic, we can now see that the resulting timeline is gonna be sort of a \\ufffd\\ufffd\\ufffdcanon\\ufffd\\ufffd\\ufffd: one video mixed with n earlier versions of itself.</p> <pre><code>     for source in clip.get_children():         if source.props.track_type == GES.TrackType.VIDEO:         break       source.set_child_property(\"alpha\", alpha)     alpha = mylog(alpha) </code> </pre> <p>Here, I browse the children of my timeline element, and when I find a video element, I set the alpha of an element inside it, and update the alpha. The log here makes it so each layer has the same perceived opacity at the end.</p>  <p>Afterwards, we create a pipeline to play our timeline, and if needed we set it to the render mode, that code is quite self-explanatory.</p>  <p>We now just have to wait until the EOS, or until the user interrupts the program.</p>  <p>I use Gtk.main() out of pure laziness, a GLib mainloop would work as well.</p> <h2> How does it look like then ? </h2> <p>I really hope this example made you want to learn more about GES, it\\ufffd\\ufffd\\ufffds a great library that lets you do awesome stuff in very few lines of code, we\\ufffd\\ufffd\\ufffdre in active development and the best is still to come !</p>  <p>Here is the promised video:</p>   <p>Notice the code was only tried with mp4 containing h264, feel free to report any issues with other codecs on my github !</p></div>     </content>     <updated>2013-06-08T07:00:00Z</updated>     <source>       <id>http://mathieuduponchelle.github.io</id>       <author>         <name>Mathieu Duponchelle</name>       </author>       <link href=\"http://http://mathieuduponchelle.github.io/atom.xml\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://http://mathieuduponchelle.github.io/\" rel=\"alternate\" type=\"text/html\"/>       <title>Mathieu Duponchelle</title>       <updated>2014-02-22T18:53:29Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2405</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/04/28/no-more-stuck-render-dialogs/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F04%2F28%2Fno-more-stuck-render-dialogs%2F&amp;language=en_GB&amp;category=software&amp;title=No+more+stuck+rendering+dialogs%21&amp;description=If+you%26%238217%3Bve+tried+rendering+projects+with+Pitivi+0.15+or+older%2C+chances+are+you%26%238217%3Bve+encountered+one+of+these+dreadful+situations+where+the+rendering+process+would+get+stuck%3A+%26%238230%3Bat+the+beginning%2C+with...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>No more stuck rendering dialogs!</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">If you\\ufffd\\ufffd\\ufffdve tried rendering projects with Pitivi 0.15 or older, chances are you\\ufffd\\ufffd\\ufffdve encountered one of these dreadful situations where the rendering process would get stuck: \\ufffd\\ufffd\\ufffdat the beginning, with the progressbar saying it\\ufffd\\ufffd\\ufffds currently \\ufffd\\ufffd\\ufffdestimating\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd which was a \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/04/28/no-more-stuck-render-dialogs/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>If you\\ufffd\\ufffd\\ufffdve tried rendering projects with Pitivi 0.15 or older, chances are you\\ufffd\\ufffd\\ufffdve encountered one of these dreadful situations where the rendering process would get stuck:<span id=\"more-2405\"/></p> <ul> <li>\\ufffd\\ufffd\\ufffdat the beginning, with the progressbar saying it\\ufffd\\ufffd\\ufffds currently \\ufffd\\ufffd\\ufffdestimating\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd which was a lie that I <a href=\"https://git.gnome.org/browse/pitivi/commit/?id=df3689239\">corrected</a> a little while ago.</li> <li>\\ufffd\\ufffd\\ufffdat the very end. Extra trolling points for having made you waste a huge amount of time to get a 0 bytes output file (if we\\ufffd\\ufffd\\ufffdre lucky, <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=692316\">that bug</a> is gone).</li> <li>\\ufffd\\ufffd\\ufffdsomewhere in the middle, because caps negotiation failed, some elements were not linked, GStreamer thinks you ran out of available RAM, or because you\\ufffd\\ufffd\\ufffdve been very naughty.</li> </ul> <p>In any such case, the rendering dialog just sat there and smiled at you, as if everything was fine in the world. Well, no more:</p> <div class=\"wp-caption alignnone\" id=\"attachment_2409\" style=\"width: 410px; border: 1px solid #dddddd; background-color: #f3f3f3; padding-top: 4px; margin: 10px; text-align: center;\"><img alt=\"slap\" class=\"size-full wp-image-2409\" height=\"279\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/slap.jpg\" width=\"400\"/><p class=\"wp-caption-text\" style=\"padding: 0 4px 5px; margin: 0;\">Pitivi is going to give you the honest, brutal truth.</p></div> <p>This is the result of a horrifying thought suddenly springing to my mind yesterday night: \\ufffd\\ufffd\\ufffdHey, what if the code was not even <em>checking</em> for errors in the pipeline when rendering?\\ufffd\\ufffd\\ufffd</p> <p>Indeed, it wasn\\ufffd\\ufffd\\ufffdt. How silly is that! I have thus prepared a simple fix to improve the situation: catch pipeline error messages, abort the render (you really don\\ufffd\\ufffd\\ufffdt want to ignore a GStreamer error) and display an error dialog. This will at least <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=635874\">let people know that something is wrong</a> and that they should start writing patches to GStreamer instead of accusing Pitivi of hurting kittens. You\\ufffd\\ufffd\\ufffdd be surprised how many people can sit for hours in front of that stuck progressbar.</p> <p>Before I commit the fix however, I would need your feedback on the usability of that dialog:</p> <p><img alt=\"2013-04-27\" class=\"alignnone size-full wp-image-2406\" height=\"267\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-04-27.png\" width=\"662\"/></p> <p>This is not terribly pretty, but it\\ufffd\\ufffd\\ufffds better than nothing. A few things to consider:</p> <ul> <li>In that screenshot, all the text except the window title (\\ufffd\\ufffd\\ufffdError While Rendering Project\\ufffd\\ufffd\\ufffd) comes from the GStreamer pipeline error message (the error and the error\\ufffd\\ufffd\\ufffds details). I know that the error details look ugly, but I suspect it wouldn\\ufffd\\ufffd\\ufffdt be useful to GStreamer/Pitivi developers if we don\\ufffd\\ufffd\\ufffdt have them \\ufffd\\ufffd\\ufffdverbatim\\ufffd\\ufffd\\ufffd. Maybe we could try to mangle the error details string (split using \\ufffd\\ufffd\\ufffd:\\ufffd\\ufffd\\ufffd and take only the first and last two items of the resulting list?) and encourage the user to run from a terminal to get better debug info, but that feels a bit backwards.</li> <li>We should probably have some less-scary text to accompany the actual error details. Something that guides the user towards an action that can be done to address the problem (ex: reporting a bug). Maybe it can be placed between the header and the details (above the \\ufffd\\ufffd\\ufffdqtdemux.c\\ufffd\\ufffd\\ufffd line)? The problem is finding a universal text to be used.</li> <li>If we consider the route where we suggest the user to report bugs, where should we point to? The Pitivi bugs investigation page? Pitivi bugzilla? GStreamer bugzilla? The distro\\ufffd\\ufffd\\ufffds bug tracker?</li> <li>Let\\ufffd\\ufffd\\ufffds keep this simple, both visually and in terms of code/implementation.</li> </ul> <p>What do you think? Is the current approach sufficient or is there something better that we can easily do?</p> <p><strong>Update</strong>: here\\ufffd\\ufffd\\ufffds an alternative dialog with some more comprehensible text, where the actual error (as seen in the previous screenshot) gets shoved under the rug by putting it in a GTK expander widget (clicking \\ufffd\\ufffd\\ufffdDetails\\ufffd\\ufffd\\ufffd reveals the error\\ufffd\\ufffd\\ufffds details as above):</p> <p><img alt=\"2013-04-29\" class=\"alignnone size-full wp-image-2413\" height=\"235\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/2013-04-29.png\" width=\"648\"/></p></div>     </content>     <updated>2013-04-28T04:19:25Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <category term=\"Usability\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-02-15T23:15:10Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://jeff.ecchi.ca/blog/?p=2397</id>     <link href=\"http://jeff.ecchi.ca/blog/2013/04/11/pitivi-and-the-2013-summer-of-code/\" rel=\"alternate\" type=\"text/html\"/>     <link href=\"https://flattr.com/submit/auto?user_id=nekohayo&amp;popout=1&amp;url=http%3A%2F%2Fjeff.ecchi.ca%2Fblog%2F2013%2F04%2F11%2Fpitivi-and-the-2013-summer-of-code%2F&amp;language=en_GB&amp;category=software&amp;title=PiTiVi+and+the+2013+Summer+of+Code&amp;description=This+year+will+be+a+little+bit+different.+In+a+rather+unexpected+turn+of+events%2C+PiTiVi+has+been+accepted+as+a+mentoring+organization+but+GStreamer+has+not.+Fear+not+however%2C...&amp;tags=blog\" rel=\"payment\" title=\"Flattr this!\" type=\"text/html\"/>     <title>PiTiVi and the 2013 Summer of Code</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">This year will be a little bit different. In a rather unexpected turn of events, PiTiVi has been accepted as a mentoring organization but GStreamer has not. Fear not however, as GStreamer has no better ally than the PiTiVi team \\ufffd\\ufffd\\ufffd <a href=\"http://jeff.ecchi.ca/blog/2013/04/11/pitivi-and-the-2013-summer-of-code/\">Continue reading <span class=\"meta-nav\">\\ufffd\\ufffd\\ufffd</span></a></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>This year will be a little bit different. In a rather unexpected turn of events, <a href=\"http://pitivi.org\">PiTiVi</a> has been accepted as a mentoring organization but <a href=\"http://gstreamer.net\">GStreamer</a> has not. Fear not however, as GStreamer has no better ally than the PiTiVi team when it comes to pushing our favorite multimedia framework to its limits and beyond. As you may know, PiTiVi makes heavy use of the <em>GStreamer Editing Services</em> library and, in turn, GNonLin and the rest of GStreamer. With the switch to GES and the <a href=\"http://jeff.ecchi.ca/blog/2012/05/19/break-the-kettles-and-sink-the-boats/\" title=\"Break the kettles and sink the boats\">irrevocable shedding of our old skin</a>, <strong>any backend work done for the sake of the PiTiVi project ends up benefitting GStreamer and other projects.</strong></p> <p><span id=\"more-2397\"/></p> <p>One way to look at things is that <em>there is no such thing as a PiTiVi backend anymore</em>. PiTiVi\\ufffd\\ufffd<em>is\\ufffd\\ufffd</em>a frontend that pushes the latest and greatest open-source multimedia technologies forward.</p> <p>With the GES port nearing completion, this is the first time that we can truly say there are three interrelated components to contribute to. This new reality sets the tone for a different way to look at PiTiVi project ideas this year: you can finally\\ufffd\\ufffd\\ufffd</p> <h1>Choose your character class</h1> <p><img alt=\"pitivi hacker style\" class=\"alignnone  wp-image-2398\" height=\"312\" src=\"http://jeff.ecchi.ca/blog/wp-content/uploads/pitivi-hacker-style.png\" title=\"With apologies to Mr. Amano\" width=\"700\"/></p> <p>Are you a ninja? A spellcaster? A tank? While most projects are a balance of backend and UI work, we know that some people prefer to lean more to one side or another of the continuum \\ufffd\\ufffd\\ufffd that\\ufffd\\ufffd\\ufffds why I created a new visual notation for <a href=\"http://wiki.pitivi.org/wiki/Google_Summer_of_Code\">our ideas page</a> this year. Instead of an \\ufffd\\ufffd\\ufffdeasy/hard\\ufffd\\ufffd\\ufffd system (which would be inaccurate and misleading, as perceived difficulty is measured differently for everybody), we simply provided a visual indication of the expected involvement in the various components for a given project idea (for example, \\ufffd\\ufffd\\ufffdPiTiVi: \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd GES: \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd GStreamer: \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd). So if you were looking for something closer to a hardcore GStreamer GSoC project, you can spot ideas that might interest you here.</p> <p>Not a programmer? You can help raise awareness about this. Maybe you know a brilliant hacker friend/relative or a top-notch computer science student waiting for a chance to make a big difference in the world. Tell that person about how cool and welcoming PiTiVi is and how getting involved is the best way to advance free, powerful and intuitive video editing for everyone!</p></div>     </content>     <updated>2013-04-11T19:09:26Z</updated>     <category term=\"GNOME\"/>     <category term=\"Pitivi\"/>     <category term=\"Planet GNOME\"/>     <author>       <name>nekohayo</name>     </author>     <source>       <id>http://jeff.ecchi.ca/blog</id>       <link href=\"http://jeff.ecchi.ca/blog/category/pitivi/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://jeff.ecchi.ca/blog\" rel=\"alternate\" type=\"text/html\"/>       <subtitle>La vie personnelle du chat</subtitle>       <title>Nekohayo ! \\ufffd\\ufffd Pitivi</title>       <updated>2014-01-28T01:00:18Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-6715983774773260157.post-1627373074559370885</id>     <link href=\"http://blog.aleb.ro/feeds/1627373074559370885/comments/default\" rel=\"replies\" title=\"Post Comments\" type=\"application/atom+xml\"/>     <link href=\"http://blog.aleb.ro/2011/06/httptimwise.html#comment-form\" rel=\"replies\" title=\"0 Comments\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/6715983774773260157/posts/default/1627373074559370885\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/6715983774773260157/posts/default/1627373074559370885\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://blog.aleb.ro/2011/06/httptimwise.html\" rel=\"alternate\" title=\"Setting up Supybot with the Bugzilla plugin\" type=\"text/html\"/>     <title>Setting up Supybot with the Bugzilla plugin</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div dir=\"ltr\" style=\"text-align: left;\"><a href=\"http://supybot.com/\">Supybot</a> is an IRC bot, an application which can connect to a specific IRC channel and do stuff there. For example, with the <a href=\"http://www.blogger.com/blogger.g?blogID=6715983774773260157\">Bugzilla plugin</a>, Supybot can report on the channel whenever a new bug is filed, or if somebody mentions \"bug 1234\" in the conversation, it will print details about bug 1234.<br/><br/><h2 style=\"text-align: left;\">Install supybot</h2>First, you have to install Supybot. If you are using Arch Linux, <a href=\"https://aur.archlinux.org/packages/supybot/\">get supybot from AUR</a>, otherwise read the <a href=\"http://sourceforge.net/p/supybot/code/?branch=ref%2Fmaster\">INSTALL</a> file.<br/><br/>Create a <tt>supybot</tt> user on your system, or on a virtual machine where you want to run the bot.<br/><br/><blockquote>groupadd --system supybot<br/>useradd -m --system -g supybot supybot</blockquote><br/><h2 style=\"text-align: left;\">Install the supybot Bugzilla plugin</h2>If you want your bot to announce when new bugs are created, you need to set up an email account, register it on bugzilla and set it up so it gets mails when bugs for your project are created. For this go to Bugzilla -&gt; Preferences -&gt; Email Preferences and read the User Watching section!<br/><br/>Once you have the email account receiving emails from bugzilla, <a href=\"http://www.mattcutts.com/blog/backup-gmail-in-linux-with-getmail/\">setup getmail on your machine</a> so it downloads the messages from the email account to /var/mail/supybot.<br/><br/><blockquote>touch /var/mail/supybot<br/>chown supybot.supybot /var/mail/supybot<br/>chmod g+w /var/mail/supybot<br/>chmod o-rwx /var/mail/supybot<br/>chown supybot.supybot /var/mail/supybot</blockquote><br/>Set the getmail job to download the messages using POP and to delete them from the server after retrieving them.<br/><br/><blockquote>[destination]<br/>type = Mboxrd<br/>path = /var/mail/supybot<br/><br/>[options]<br/>verbose = 2<br/>message_log = ~/.getmail/gmail.log</blockquote><br/>Now add yourself to the supybot group (so your getmail cronjob can write the bugzilla emails to /var/mail/supybot). For this to take effect the best option is to re-login! <br/><blockquote>usermod -a -G supybot YOUR_USERNAME</blockquote><br/>Add a crontab to your account (not supybot) to fetch the bugzilla mail every minute.<br/><br/><blockquote>* * * * * getmail -d -q -r /path/to/your/getmail/config/file</blockquote><br/><h2 style=\"text-align: left;\">Setup your bot</h2>Next you have to create a config, and here it gets even more tricky. Unfortunately, most of the Supybot documentation is <a href=\"http://web.archive.org/web/20080913184204/http://supybot.com/\">gone</a> because the supybot.com website is dead and only redirects to the sourceforge page of the project, where Supybot can be <a href=\"http://sourceforge.net/projects/supybot/files/supybot/\">downloaded</a>. You have to create a config using <tt>supybot-wizard</tt>:<br/><br/><blockquote>mkdir /home/supybot/pitivi<br/>cd /home/supybot/pitivi<br/># I suggest to act as an \"advanced user\" when the wizard asks you<br/># about what kind of user you are!<br/>supybot-wizard<br/>[...]<br/># Now see the conf file it created, feel free to rename it to bot.conf. ;)<br/>ls -l *.conf</blockquote><br/><br/>Copy the <a href=\"http://code.google.com/p/supybot-bugzilla/\">Supybot Bugzilla plugin</a> to your conf.<br/><br/><blockquote>cd /home/supybot/pitivi<br/>mkdir plugins<br/>cd plugins<br/>bzr co bzr://bzr.everythingsolved.com/supybot/Bugzilla</blockquote><br/><br/>Copy the bugzilla section from this <a href=\"http://live.gnome.org/SupybotBugzillaPlugin\">sample config file</a> to your <tt>bot.conf</tt> file. Or copy it from the pitivibot's <tt>bot.conf</tt> file below.<br/><br/><blockquote>###<br/># Determines the bot's default nick.<br/>#<br/># Default value: supybot<br/>###<br/>supybot.nick: pitivibot<br/><br/>###<br/># Determines what alternative nicks will be used if the primary nick<br/># (supybot.nick) isn't available. A %s in this nick is replaced by the<br/># value of supybot.nick when used. If no alternates are given, or if all<br/># are used, the supybot.nick will be perturbed appropriately until an<br/># unused nick is found.<br/>#<br/># Default value: %s` %s_<br/>###<br/>supybot.nick.alternates: %s` %s_<br/><br/>###<br/># Determines the bot's ident string, if the server doesn't provide one<br/># by default.<br/>#<br/># Default value: supybot<br/>###<br/>supybot.ident: supybot<br/><br/>###<br/># Determines the user the bot sends to the server. A standard user using<br/># the current version of the bot will be generated if this is left<br/># empty.<br/>#<br/># Default value: <br/>###<br/>supybot.user: pitivibot<br/><br/>###<br/># Determines what networks the bot will connect to.<br/>#<br/># Default value:  <br/>###<br/>supybot.networks: freenode<br/><br/>###<br/># Determines what password will be used on freenode. Yes, we know that<br/># technically passwords are server-specific and not network-specific,<br/># but this is the best we can do right now.<br/>#<br/># Default value: <br/>###<br/>supybot.networks.freenode.password: <br/><br/>###<br/># Determines what servers the bot will connect to for freenode. Each<br/># will be tried in order, wrapping back to the first when the cycle is<br/># completed.<br/>#<br/># Default value: <br/>###<br/>supybot.networks.freenode.servers: chat.eu.freenode.net<br/><br/>###<br/># Determines what channels the bot will join only on freenode.<br/>#<br/># Default value:  <br/>###<br/>supybot.networks.freenode.channels: #pitivi<br/><br/>###<br/># Determines what key (if any) will be used to join the channel.<br/>#<br/># Default value: <br/>###<br/>supybot.networks.freenode.channels.key: <br/><br/>###<br/># Determines whether the bot will attempt to connect with SSL sockets to<br/># freenode.<br/>#<br/># Default value: False<br/>###<br/>supybot.networks.freenode.ssl: False<br/><br/>###<br/># Determines how timestamps printed for human reading should be<br/># formatted. Refer to the Python documentation for the time module to<br/># see valid formatting characters for time formats.<br/>#<br/># Default value: %I:%M %p, %B %d, %Y<br/>###<br/>supybot.reply.format.time: %H:%M %Y-%m-%d %Z<br/><br/>###<br/># Determines whether elapsed times will be given as \"1 day, 2 hours, 3<br/># minutes, and 15 seconds\" or as \"1d 2h 3m 15s\".<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.format.time.elapsed.short: True<br/><br/>###<br/># Determines the absolute maximum length of the bot's reply -- no reply<br/># will be passed through the bot with a length greater than this.<br/>#<br/># Default value: 131072<br/>###<br/>supybot.reply.maximumLength: 131072<br/><br/>###<br/># Determines whether the bot will break up long messages into chunks and<br/># allow users to use the 'more' command to get the remaining chunks.<br/>#<br/># Default value: True<br/>###<br/>supybot.reply.mores: True<br/><br/>###<br/># Determines what the maximum number of chunks (for use with the 'more'<br/># command) will be.<br/>#<br/># Default value: 50<br/>###<br/>supybot.reply.mores.maximum: 50<br/><br/>###<br/># Determines how long individual chunks will be. If set to 0, uses our<br/># super-tweaked, get-the-most-out-of-an-individual-message default.<br/>#<br/># Default value: 0<br/>###<br/>supybot.reply.mores.length: 0<br/><br/>###<br/># Determines how many mores will be sent instantly (i.e., without the<br/># use of the more command, immediately when they are formed). Defaults<br/># to 1, which means that a more command will be required for all but the<br/># first chunk.<br/>#<br/># Default value: 1<br/>###<br/>supybot.reply.mores.instant: 1<br/><br/>###<br/># Determines whether the bot will send multi-message replies in a single<br/># message or in multiple messages. For safety purposes (so the bot is<br/># less likely to flood) it will normally send everything in a single<br/># message, using mores if necessary.<br/>#<br/># Default value: True<br/>###<br/>supybot.reply.oneToOne: True<br/><br/>###<br/># Determines whether the bot will reply with an error message when it is<br/># addressed but not given a valid command. If this value is False, the<br/># bot will remain silent, as long as no other plugins override the<br/># normal behavior.<br/>#<br/># Default value: True<br/>###<br/>supybot.reply.whenNotCommand: False<br/><br/>###<br/># Determines whether error messages that result from bugs in the bot<br/># will show a detailed error message (the uncaught exception) or a<br/># generic error message.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.error.detailed: False<br/><br/>###<br/># Determines whether the bot will send error messages to users in<br/># private. You might want to do this in order to keep channel traffic to<br/># minimum. This can be used in combination with<br/># supybot.reply.error.withNotice.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.error.inPrivate: False<br/><br/>###<br/># Determines whether the bot will send error messages to users via<br/># NOTICE instead of PRIVMSG. You might want to do this so users can<br/># ignore NOTICEs from the bot and not have to see error messages; or you<br/># might want to use it in combination with supybot.reply.errorInPrivate<br/># so private errors don't open a query window in most IRC clients.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.error.withNotice: False<br/><br/>###<br/># Determines whether the bot will send an error message to users who<br/># attempt to call a command for which they do not have the necessary<br/># capability. You may wish to make this True if you don't want users to<br/># understand the underlying security system preventing them from running<br/># certain commands.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.error.noCapability: False<br/><br/>###<br/># Determines whether the bot will reply privately when replying in a<br/># channel, rather than replying to the whole channel.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.inPrivate: False<br/><br/>###<br/># Determines whether the bot will reply with a notice when replying in a<br/># channel, rather than replying with a privmsg as normal.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.withNotice: False<br/><br/>###<br/># Determines whether the bot will reply with a notice when it is sending<br/># a private message, in order not to open a /query window in clients.<br/># This can be overridden by individual users via the user configuration<br/># variable reply.withNoticeWhenPrivate.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.withNoticeWhenPrivate: False<br/><br/>###<br/># Determines whether the bot will always prefix the user's nick to its<br/># reply to that user's command.<br/>#<br/># Default value: True<br/>###<br/>supybot.reply.withNickPrefix: False<br/><br/>###<br/># Determines whether the bot should attempt to reply to all messages<br/># even if they don't address it (either via its nick or a prefix<br/># character). If you set this to True, you almost certainly want to set<br/># supybot.reply.whenNotCommand to False.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.whenNotAddressed: False<br/><br/>###<br/># Determines whether the bot will allow you to send channel-related<br/># commands outside of that channel. Sometimes people find it confusing<br/># if a channel-related command (like Filter.outfilter) changes the<br/># behavior of the channel but was sent outside the channel itself.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.requireChannelCommandsToBeSentInChannel: False<br/><br/>###<br/># Supybot normally replies with the full help whenever a user misuses a<br/># command. If this value is set to True, the bot will only reply with<br/># the syntax of the command (the first line of the help) rather than the<br/># full help.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.showSimpleSyntax: False<br/><br/>###<br/># Determines what prefix characters the bot will reply to. A prefix<br/># character is a single character that the bot will use to determine<br/># what messages are addressed to it; when there are no prefix characters<br/># set, it just uses its nick. Each character in this string is<br/># interpreted individually; you can have multiple prefix chars<br/># simultaneously, and if any one of them is used as a prefix the bot<br/># will assume it is being addressed.<br/>#<br/># Default value: <br/>###<br/>supybot.reply.whenAddressedBy.chars: <br/><br/>###<br/># Determines what strings the bot will reply to when they are at the<br/># beginning of the message. Whereas prefix.chars can only be one<br/># character (although there can be many of them), this variable is a<br/># space-separated list of strings, so you can set something like '@@ ??'<br/># and the bot will reply when a message is prefixed by either @@ or ??.<br/>#<br/># Default value:  <br/>###<br/>supybot.reply.whenAddressedBy.strings:  <br/><br/>###<br/># Determines whether the bot will reply when people address it by its<br/># nick, rather than with a prefix character.<br/>#<br/># Default value: True<br/>###<br/>supybot.reply.whenAddressedBy.nick: False<br/><br/>###<br/># Determines whether the bot will reply when people address it by its<br/># nick at the end of the message, rather than at the beginning.<br/>#<br/># Default value: False<br/>###<br/>supybot.reply.whenAddressedBy.nick.atEnd: False<br/><br/>###<br/># Determines what extra nicks the bot will always respond to when<br/># addressed by, even if its current nick is something else.<br/>#<br/># Default value:  <br/>###<br/>supybot.reply.whenAddressedBy.nicks:  <br/><br/>###<br/># Determines whether the bot will unidentify someone when that person<br/># changes his or her nick. Setting this to True will cause the bot to<br/># track such changes. It defaults to False for a little greater<br/># security.<br/>#<br/># Default value: False<br/>###<br/>supybot.followIdentificationThroughNickChanges: False<br/><br/>###<br/># Determines whether the bot will always join a channel when it's<br/># invited. If this value is False, the bot will only join a channel if<br/># the user inviting it has the 'admin' capability (or if it's explicitly<br/># told to join the channel using the Admin.join command)<br/>#<br/># Default value: False<br/>###<br/>supybot.alwaysJoinOnInvite: False<br/><br/>###<br/># Determines what message the bot replies with when a command succeeded.<br/># If this configuration variable is empty, no success message will be<br/># sent.<br/>###<br/>supybot.replies.success: The operation succeeded.<br/><br/>###<br/># Determines what error message the bot gives when it wants to be<br/># ambiguous.<br/>###<br/>supybot.replies.error: An error has occurred and has been logged. Please\\\\<br/>contact this bot's administrator for more\\\\<br/>information.<br/><br/>###<br/># Determines what message the bot replies with when someone tries to use<br/># a command that requires being identified or having a password and<br/># neither credential is correct.<br/>###<br/>supybot.replies.incorrectAuthentication: Your hostmask doesn't match or your\\\\<br/>password is wrong.<br/><br/>###<br/># Determines what error message the bot replies with when someone tries<br/># to accessing some information on a user the bot doesn't know about.<br/>###<br/>supybot.replies.noUser: I can't find %s in my user database. If you didn't\\\\<br/>give a user name, then I might not know what your\\\\<br/>user is, and you'll need to identify before this\\\\<br/>command might work.<br/><br/>###<br/># Determines what error message the bot replies with when someone tries<br/># to do something that requires them to be registered but they're not<br/># currently recognized.<br/>###<br/>supybot.replies.notRegistered: You must be registered to use this command.\\\\<br/>If you are already registered, you must\\\\<br/>either identify (using the identify command)\\\\<br/>or add a hostmask matching your current\\\\<br/>hostmask (using the \"hostmask add\" command).<br/><br/>###<br/># Determines what error message is given when the bot is telling someone<br/># they aren't cool enough to use the command they tried to use.<br/>###<br/>supybot.replies.noCapability: You don't have the %s capability. If you think\\\\<br/>that you should have this capability, be sure\\\\<br/>that you are identified before trying again.\\\\<br/>The 'whoami' command can tell you if you're\\\\<br/>identified.<br/><br/>###<br/># Determines what generic error message is given when the bot is telling<br/># someone that they aren't cool enough to use the command they tried to<br/># use, and the author of the code calling errorNoCapability didn't<br/># provide an explicit capability for whatever reason.<br/>###<br/>supybot.replies.genericNoCapability: You're missing some capability you\\\\<br/>need. This could be because you\\\\<br/>actually possess the anti-capability\\\\<br/>for the capability that's required of\\\\<br/>you, or because the channel provides\\\\<br/>that anti-capability by default, or\\\\<br/>because the global capabilities include\\\\<br/>that anti-capability. Or, it could be\\\\<br/>because the channel or\\\\<br/>supybot.capabilities.default is set to\\\\<br/>False, meaning that no commands are\\\\<br/>allowed unless explicitly in your\\\\<br/>capabilities. Either way, you can't do\\\\<br/>what you want to do.<br/><br/>###<br/># Determines what error messages the bot sends to people who try to do<br/># things in a channel that really should be done in private.<br/>###<br/>supybot.replies.requiresPrivacy: That operation cannot be done in a channel.<br/><br/>###<br/># Determines what message the bot sends when it thinks you've<br/># encountered a bug that the developers don't know about.<br/>###<br/>supybot.replies.possibleBug: This may be a bug. If you think it is, please\\\\<br/>file a bug report at                              acker/?func=add&amp;group_id=58965&amp;atid=489447&gt;.<br/><br/>###<br/># A floating point number of seconds to throttle snarfed URLs, in order<br/># to prevent loops between two bots snarfing the same URLs and having<br/># the snarfed URL in the output of the snarf message.<br/>#<br/># Default value: 10.0<br/>###<br/>supybot.snarfThrottle: 10.0<br/><br/>###<br/># Determines the number of seconds between running the upkeep function<br/># that flushes (commits) open databases, collects garbage, and records<br/># some useful statistics at the debugging level.<br/>#<br/># Default value: 3600<br/>###<br/>supybot.upkeepInterval: 3600<br/><br/>###<br/># Determines whether the bot will periodically flush data and<br/># configuration files to disk. Generally, the only time you'll want to<br/># set this to False is when you want to modify those configuration files<br/># by hand and don't want the bot to flush its current version over your<br/># modifications. Do note that if you change this to False inside the<br/># bot, your changes won't be flushed. To make this change permanent, you<br/># must edit the registry yourself.<br/>#<br/># Default value: True<br/>###<br/>supybot.flush: True<br/><br/>###<br/># Determines what characters are valid for quoting arguments to commands<br/># in order to prevent them from being tokenized.<br/>#<br/># Default value: \"<br/>###<br/>supybot.commands.quotes: \"<br/><br/>###<br/># Determines whether the bot will allow nested commands, which rule. You<br/># definitely should keep this on.<br/>#<br/># Default value: True<br/>###<br/>supybot.commands.nested: True<br/><br/>###<br/># Determines what the maximum number of nested commands will be; users<br/># will receive an error if they attempt commands more nested than this.<br/>#<br/># Default value: 10<br/>###<br/>supybot.commands.nested.maximum: 10<br/><br/>###<br/># Supybot allows you to specify what brackets are used for your nested<br/># commands. Valid sets of brackets include [], &lt;&gt;, and {} (). [] has<br/># strong historical motivation, as well as being the brackets that don't<br/># require shift. &lt;&gt; or () might be slightly superior because they cannot<br/># occur in a nick. If this string is empty, nested commands will not be<br/># allowed in this channel.<br/>#<br/># Default value: []<br/>###<br/>supybot.commands.nested.brackets: []<br/><br/>###<br/># Supybot allows nested commands. Enabling this option will allow nested<br/># commands with a syntax similar to UNIX pipes, for example: 'bot: foo |<br/># bar'.<br/>#<br/># Default value: False<br/>###<br/>supybot.commands.nested.pipeSyntax: False<br/><br/>###<br/># Determines what commands have default plugins set, and which plugins<br/># are set to be the default for each of those commands.<br/>###<br/>supybot.commands.defaultPlugins.addcapability: Admin<br/>supybot.commands.defaultPlugins.capabilities: User<br/>supybot.commands.defaultPlugins.disable: Owner<br/>supybot.commands.defaultPlugins.enable: Owner<br/>supybot.commands.defaultPlugins.help: Misc<br/>supybot.commands.defaultPlugins.ignore: Admin<br/><br/>###<br/># Determines what plugins automatically get precedence over all other<br/># plugins when selecting a default plugin for a command. By default,<br/># this includes the standard loaded plugins. You probably shouldn't<br/># change this if you don't know what you're doing; if you do know what<br/># you're doing, then also know that this set is case-sensitive.<br/>#<br/># Default value: Plugin Admin Misc User Owner Config Channel<br/>###<br/>supybot.commands.defaultPlugins.importantPlugins: Plugin Admin Misc User Owner Config Channel<br/>supybot.commands.defaultPlugins.list: Misc<br/>supybot.commands.defaultPlugins.reload: Owner<br/>supybot.commands.defaultPlugins.removecapability: Admin<br/>supybot.commands.defaultPlugins.unignore: Admin<br/><br/>###<br/># Determines what commands are currently disabled. Such commands will<br/># not appear in command lists, etc. They will appear not even to exist.<br/>#<br/># Default value:  <br/>###<br/>supybot.commands.disabled:  <br/><br/>###<br/># Determines whether the bot will defend itself against command-<br/># flooding.<br/>#<br/># Default value: True<br/>###<br/>supybot.abuse.flood.command: True<br/><br/>###<br/># Determines how many commands users are allowed per minute. If a user<br/># sends more than this many commands in any 60 second period, he or she<br/># will be ignored for supybot.abuse.flood.command.punishment seconds.<br/>#<br/># Default value: 12<br/>###<br/>supybot.abuse.flood.command.maximum: 12<br/><br/>###<br/># Determines how many seconds the bot will ignore users who flood it<br/># with commands.<br/>#<br/># Default value: 300<br/>###<br/>supybot.abuse.flood.command.punishment: 300<br/><br/>###<br/># Determines whether the bot will defend itself against invalid command-<br/># flooding.<br/>#<br/># Default value: True<br/>###<br/>supybot.abuse.flood.command.invalid: True<br/><br/>###<br/># Determines how many invalid commands users are allowed per minute. If<br/># a user sends more than this many invalid commands in any 60 second<br/># period, he or she will be ignored for<br/># supybot.abuse.flood.command.invalid.punishment seconds. Typically,<br/># this value is lower than supybot.abuse.flood.command.maximum, since<br/># it's far less likely (and far more annoying) for users to flood with<br/># invalid commands than for them to flood with valid commands.<br/>#<br/># Default value: 5<br/>###<br/>supybot.abuse.flood.command.invalid.maximum: 5<br/><br/>###<br/># Determines how many seconds the bot will ignore users who flood it<br/># with invalid commands. Typically, this value is higher than<br/># supybot.abuse.flood.command.punishment, since it's far less likely<br/># (and far more annoying) for users to flood witih invalid commands than<br/># for them to flood with valid commands.<br/>#<br/># Default value: 600<br/>###<br/>supybot.abuse.flood.command.invalid.punishment: 600<br/><br/>###<br/># Determines the default length of time a driver should block waiting<br/># for input.<br/>#<br/># Default value: 1.0<br/>###<br/>supybot.drivers.poll: 1.0<br/><br/>###<br/># Determines what driver module the bot will use. Socket, a simple<br/># driver based on timeout sockets, is used by default because it's<br/># simple and stable. Twisted is very stable and simple, and if you've<br/># got Twisted installed, is probably your best bet.<br/>#<br/># Default value: default<br/>###<br/>supybot.drivers.module: default<br/><br/>###<br/># Determines the maximum time the bot will wait before attempting to<br/># reconnect to an IRC server. The bot may, of course, reconnect earlier<br/># if possible.<br/>#<br/># Default value: 300.0<br/>###<br/>supybot.drivers.maxReconnectWait: 300.0<br/><br/>###<br/># Determines what directory configuration data is put into.<br/>#<br/># Default value: conf<br/>###<br/>supybot.directories.conf: /home/supybot/pitivi/conf<br/><br/>###<br/># Determines what directory data is put into.<br/>#<br/># Default value: data<br/>###<br/>supybot.directories.data: /home/supybot/pitivi/data<br/><br/>###<br/># Determines what directory temporary files are put into.<br/>#<br/># Default value: tmp<br/>###<br/>supybot.directories.data.tmp: /home/supybot/pitivi/data/tmp<br/><br/>###<br/># Determines what directory backup data is put into.<br/>#<br/># Default value: backup<br/>###<br/>supybot.directories.backup: /home/supybot/pitivi/backup<br/><br/>###<br/># Determines what directories the bot will look for plugins in. Accepts<br/># a comma-separated list of strings. This means that to add another<br/># directory, you can nest the former value and add a new one. E.g. you<br/># can say: bot: 'config supybot.directories.plugins [config<br/># supybot.directories.plugins], newPluginDirectory'.<br/>#<br/># Default value:  <br/>###<br/>supybot.directories.plugins: /home/supybot/pitivi/plugins<br/><br/>###<br/># Determines what directory the bot will store its logfiles in.<br/>#<br/># Default value: logs<br/>###<br/>supybot.directories.log: /home/supybot/pitivi/logs<br/><br/>###<br/># Determines what plugins will be loaded.<br/>#<br/># Default value:  <br/>###<br/>supybot.plugins: Web Admin Misc Bugzilla User Owner Config Channel<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Admin: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Admin.public: True<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Bugzilla: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Bugzilla.public: True<br/><br/>###<br/># Determines whether the bug snarfer will be enabled, such that any<br/># Bugzilla URLs and bug ### seen in the channel will have their<br/># information reported into the channel.<br/>#<br/># Default value: False<br/>###<br/>supybot.plugins.Bugzilla.bugSnarfer: True<br/><br/>###<br/># Users often say \"bug XXX\" several times in a row, in a channel. If<br/># \"bug XXX\" has been said in the last (this many) seconds, don't fetch<br/># its data again. If you change the value of this variable, you must<br/># reload this plugin for the change to take effect.<br/>#<br/># Default value: 300<br/>###<br/>supybot.plugins.Bugzilla.bugSnarferTimeout: 300<br/><br/>###<br/># The fields to list when describing a bug, after the URL.<br/>#<br/># Default value: bug_severity priority target_milestone assigned_to bug_status short_desc<br/>###<br/>supybot.plugins.Bugzilla.bugFormat: bug_severity priority target_milestone assigned_to bug_status short_desc<br/><br/>###<br/># The fields to list when describing an attachment after announcing a<br/># change to that attachment.<br/>#<br/># Default value: type desc filename<br/>###<br/>supybot.plugins.Bugzilla.attachFormat: type desc filename<br/><br/>###<br/># How various messages should be formatted in terms of bold, colors,<br/># etc.<br/>###<br/><br/>###<br/># When the plugin reports that something has changed on a bug, how<br/># should that string be formatted?<br/>#<br/># Default value: teal<br/>###<br/>supybot.plugins.Bugzilla.format.change: teal<br/><br/>###<br/># When the plugin reports the details of an attachment, how should we<br/># format that string?<br/>#<br/># Default value: green<br/>###<br/>supybot.plugins.Bugzilla.format.attachment: green<br/><br/>###<br/># When the plugin reports the details of a bug, how should we format<br/># that string?<br/>#<br/># Default value: red<br/>###<br/>supybot.plugins.Bugzilla.format.bug: red<br/><br/>###<br/># The number of results to show when using the \"query\" command.<br/>#<br/># Default value: 5<br/>###<br/>supybot.plugins.Bugzilla.queryResultLimit: 5<br/><br/>###<br/># A path to the mbox that we should be watching for bugmail.<br/>#<br/># Default value: <br/>###<br/>supybot.plugins.Bugzilla.mbox: /var/mail/supybot<br/><br/>###<br/># How many seconds should we wait between polling the mbox?<br/>#<br/># Default value: 10<br/>###<br/>supybot.plugins.Bugzilla.mboxPollTimeout: 10<br/><br/>###<br/># Various messages that can be re-formatted as you wish. If a message<br/># takes a format string, the available format variables are: product,<br/># component, bug_id, attach_id, and changer)<br/>###<br/><br/>###<br/># What the bot will say when somebody adds a new attachment to a bug.<br/>#<br/># Default value: %(changer)s added attachment %(attach_id)d to bug %(bug_id)d<br/>###<br/>supybot.plugins.Bugzilla.messages.newAttachment: %(changer)s added attachment %(attach_id)d to bug %(bug_id)d<br/><br/>###<br/># What the bot will say when a new bug is filed.<br/>#<br/># Default value: New %(product)s bug %(bug_id)d filed by %(changer)s.<br/>###<br/>supybot.plugins.Bugzilla.messages.newBug: New %(product)s bug %(bug_id)d filed by %(changer)s.<br/><br/>###<br/># How should we describe it when somebody requests a flag without<br/># specifying a requestee? This should probably start with \"from.\" It can<br/># also be entirely empty, if you want.<br/>#<br/># Default value: from the wind<br/>###<br/>supybot.plugins.Bugzilla.messages.noRequestee: from the wind<br/><br/>###<br/># The various Bugzilla installations that have been created with the<br/># 'add' command.<br/>#<br/># Default value:  <br/>###<br/>supybot.plugins.Bugzilla.bugzillas: gnome<br/><br/>###<br/># Determines the URL to this Bugzilla installation. This must be<br/># identical to the urlbase (or sslbase) parameter used by the<br/># installation. (The url that shows up in emails.) It must end with a<br/># forward slash.<br/>#<br/># Default value: <br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.url: https://bugzilla.gnome.org/<br/><br/>###<br/># Additional search terms in QuickSearch format, that will be added to<br/># every search done with \"query\" against this installation.<br/>#<br/># Default value: <br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.queryTerms: <br/><br/>###<br/># Should *all* changes be reported to this channel?<br/>#<br/># Default value: False<br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.watchedItems.all: False<br/><br/>###<br/># Whose changes should be reported to this channel?<br/>#<br/># Default value:  <br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.watchedItems.changer:  <br/><br/>###<br/># What components should be reported to this channel?<br/>#<br/># Default value:  <br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.watchedItems.component: <br/><br/>###<br/># What products should be reported to this channel?<br/>#<br/># Default value:  <br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.watchedItems.product: pitivi<br/><br/>###<br/># The names of fields, as they appear in bugmail, that should be<br/># reported to this channel.<br/>#<br/># Default value: newBug, newAttach, Flags, Attachment Flags, Resolution, Product, Component<br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.reportedChanges: newBug<br/><br/>###<br/># Some Bugzilla installations have gdb stack traces in comments. If you<br/># turn this on, the bot will report some basic details of any trace that<br/># shows up in the comments of a new bug.<br/>#<br/># Default value: False<br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.traces.report: False<br/><br/>###<br/># Some functions are useless to report, from a stack trace. This<br/># contains a list of function names to skip over when reporting traces<br/># to the channel.<br/>#<br/># Default value: __kernel_vsyscall raise abort ??<br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.traces.ignoreFunctions: __kernel_vsyscall raise abort ??<br/><br/>###<br/># How many stack frames should be reported from the crash?<br/>#<br/># Default value: 5<br/>###<br/>supybot.plugins.Bugzilla.bugzillas.gnome.traces.frameLimit: 5<br/><br/>###<br/># If commands don't specify what installation to use, then which<br/># installation should we use?<br/>#<br/># Default value: <br/>###<br/>supybot.plugins.Bugzilla.defaultBugzilla: gnome<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Channel: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Channel.public: True<br/><br/>###<br/># Determines whether the bot will always try to rejoin a channel<br/># whenever it's kicked from the channel.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Channel.alwaysRejoin: True<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Config: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Config.public: True<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Misc: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Misc.public: True<br/><br/>###<br/># Determines whether the bot will list private plugins with the list<br/># command if given the --private switch. If this is disabled, non-owner<br/># users should be unable to see what private plugins are loaded.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Misc.listPrivatePlugins: False<br/><br/>###<br/># Determines the format string for timestamps in the Misc.last command.<br/># Refer to the Python documentation for the time module to see what<br/># formats are accepted. If you set this variable to the empty string,<br/># the timestamp will not be shown.<br/>#<br/># Default value: [%H:%M:%S]<br/>###<br/>supybot.plugins.Misc.timestampFormat: [%H:%M:%S]<br/><br/>###<br/># Determines whether or not the timestamp will be included in the output<br/># of last when it is part of a nested command<br/>#<br/># Default value: False<br/>###<br/>supybot.plugins.Misc.last.nested.includeTimestamp: False<br/><br/>###<br/># Determines whether or not the nick will be included in the output of<br/># last when it is part of a nested command<br/>#<br/># Default value: False<br/>###<br/>supybot.plugins.Misc.last.nested.includeNick: False<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Owner: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Owner.public: True<br/><br/>###<br/># Determines what quit message will be used by default. If the quit<br/># command is called without a quit message, this will be used. If this<br/># value is empty, the nick of the person giving the quit command will be<br/># used.<br/>#<br/># Default value: <br/>###<br/>supybot.plugins.Owner.quitMsg: <br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.User: True<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.User.public: True<br/><br/>###<br/># Determines whether this plugin is loaded by default.<br/>###<br/>supybot.plugins.Web: False<br/><br/>###<br/># Determines whether this plugin is publicly visible.<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.Web.public: True<br/><br/>###<br/># Determines whether the bot will output the HTML title of URLs it sees<br/># in the channel.<br/>#<br/># Default value: False<br/>###<br/>supybot.plugins.Web.titleSnarfer: False<br/><br/>###<br/># Determines what URLs are to be snarfed and stored in the database in<br/># the channel; URLs matching the regexp given will not be snarfed. Give<br/># the empty string if you have no URLs that you'd like to exclude from<br/># being snarfed.<br/>#<br/># Default value: <br/>###<br/>supybot.plugins.Web.nonSnarfingRegexp: <br/><br/>###<br/># Determines the maximum number of bytes the bot will download via the<br/># 'fetch' command in this plugin.<br/>#<br/># Default value: 0<br/>###<br/>supybot.plugins.Web.fetch.maximum: 0<br/><br/>###<br/># Determines whether the bot will always load important plugins (Admin,<br/># Channel, Config, Misc, Owner, and User) regardless of what their<br/># configured state is. Generally, if these plugins are configured not to<br/># load, you didn't do it on purpose, and you still want them to load.<br/># Users who don't want to load these plugins are smart enough to change<br/># the value of this variable appropriately :)<br/>#<br/># Default value: True<br/>###<br/>supybot.plugins.alwaysLoadImportant: True<br/><br/>###<br/># Determines what databases are available for use. If this value is not<br/># configured (that is, if its value is empty) then sane defaults will be<br/># provided.<br/>#<br/># Default value: anydbm cdb flat pickle<br/>###<br/>supybot.databases: <br/><br/>###<br/># Determines what filename will be used for the users database. This<br/># file will go into the directory specified by the<br/># supybot.directories.conf variable.<br/>#<br/># Default value: users.conf<br/>###<br/>supybot.databases.users.filename: users.conf<br/><br/>###<br/># Determines how long it takes identification to time out. If the value<br/># is less than or equal to zero, identification never times out.<br/>#<br/># Default value: 0<br/>###<br/>supybot.databases.users.timeoutIdentification: 0<br/><br/>###<br/># Determines whether the bot will allow users to unregister their users.<br/># This can wreak havoc with already-existing databases, so by default we<br/># don't allow it. Enable this at your own risk. (Do also note that this<br/># does not prevent the owner of the bot from using the unregister<br/># command.)<br/>#<br/># Default value: False<br/>###<br/>supybot.databases.users.allowUnregistration: False<br/><br/>###<br/># Determines what filename will be used for the ignores database. This<br/># file will go into the directory specified by the<br/># supybot.directories.conf variable.<br/>#<br/># Default value: ignores.conf<br/>###<br/>supybot.databases.ignores.filename: ignores.conf<br/><br/>###<br/># Determines what filename will be used for the channels database. This<br/># file will go into the directory specified by the<br/># supybot.directories.conf variable.<br/>#<br/># Default value: channels.conf<br/>###<br/>supybot.databases.channels.filename: channels.conf<br/><br/>###<br/># Determines whether database-based plugins that can be channel-specific<br/># will be so. This can be overridden by individual channels. Do note<br/># that the bot needs to be restarted immediately after changing this<br/># variable or your db plugins may not work for your channel; also note<br/># that you may wish to set<br/># supybot.databases.plugins.channelSpecific.link appropriately if you<br/># wish to share a certain channel's databases globally.<br/>#<br/># Default value: True<br/>###<br/>supybot.databases.plugins.channelSpecific: False<br/><br/>###<br/># Determines what channel global (non-channel-specific) databases will<br/># be considered a part of. This is helpful if you've been running<br/># channel-specific for awhile and want to turn the databases for your<br/># primary channel into global databases. If<br/># supybot.databases.plugins.channelSpecific.link.allow prevents linking,<br/># the current channel will be used. Do note that the bot needs to be<br/># restarted immediately after changing this variable or your db plugins<br/># may not work for your channel.<br/>#<br/># Default value: #<br/>###<br/>supybot.databases.plugins.channelSpecific.link: #<br/><br/>###<br/># Determines whether another channel's global (non-channel-specific)<br/># databases will be allowed to link to this channel's databases. Do note<br/># that the bot needs to be restarted immediately after changing this<br/># variable or your db plugins may not work for your channel.<br/>#<br/># Default value: True<br/>###<br/>supybot.databases.plugins.channelSpecific.link.allow: True<br/><br/>###<br/># Determines whether CDB databases will be allowed as a database<br/># implementation.<br/>#<br/># Default value: True<br/>###<br/>supybot.databases.types.cdb: True<br/><br/>###<br/># Determines how often CDB databases will have their modifications<br/># flushed to disk. When the number of modified records is greater than<br/># this part of the number of unmodified records, the database will be<br/># entirely flushed to disk.<br/>#<br/># Default value: 0.5<br/>###<br/>supybot.databases.types.cdb.maximumModifications: 0.5<br/><br/>###<br/># Determines what will be used as the default banmask style.<br/>#<br/># Default value: host user<br/>###<br/>supybot.protocols.irc.banmask: host user<br/><br/>###<br/># Determines whether the bot will strictly follow the RFC; currently<br/># this only affects what strings are considered to be nicks. If you're<br/># using a server or a network that requires you to message a nick such<br/># as services@this.network.server then you you should set this to False.<br/>#<br/># Default value: False<br/>###<br/>supybot.protocols.irc.strictRfc: False<br/><br/>###<br/># Determines what user modes the bot will request from the server when<br/># it first connects. Many people might choose +i; some networks allow<br/># +x, which indicates to the auth services on those networks that you<br/># should be given a fake host.<br/>#<br/># Default value: <br/>###<br/>supybot.protocols.irc.umodes: <br/><br/>###<br/># Determines what vhost the bot will bind to before connecting to the<br/># IRC server.<br/>#<br/># Default value: <br/>###<br/>supybot.protocols.irc.vhost: <br/><br/>###<br/># Determines how many old messages the bot will keep around in its<br/># history. Changing this variable will not take effect until the bot is<br/># restarted.<br/>#<br/># Default value: 1000<br/>###<br/>supybot.protocols.irc.maxHistoryLength: 1000<br/><br/>###<br/># A floating point number of seconds to throttle queued messages -- that<br/># is, messages will not be sent faster than once per throttleTime<br/># seconds.<br/>#<br/># Default value: 1.0<br/>###<br/>supybot.protocols.irc.throttleTime: 1.0<br/><br/>###<br/># Determines whether the bot will send PINGs to the server it's<br/># connected to in order to keep the connection alive and discover<br/># earlier when it breaks. Really, this option only exists for debugging<br/># purposes: you always should make it True unless you're testing some<br/># strange server issues.<br/>#<br/># Default value: True<br/>###<br/>supybot.protocols.irc.ping: True<br/><br/>###<br/># Determines the number of seconds between sending pings to the server,<br/># if pings are being sent to the server.<br/>#<br/># Default value: 120<br/>###<br/>supybot.protocols.irc.ping.interval: 120<br/><br/>###<br/># Determines whether the bot will refuse duplicate messages to be queued<br/># for delivery to the server. This is a safety mechanism put in place to<br/># prevent plugins from sending the same message multiple times; most of<br/># the time it doesn't matter, unless you're doing certain kinds of<br/># plugin hacking.<br/>#<br/># Default value: False<br/>###<br/>supybot.protocols.irc.queuing.duplicates: False<br/><br/>###<br/># Determines how many seconds must elapse between JOINs sent to the<br/># server.<br/>#<br/># Default value: 0.0<br/>###<br/>supybot.protocols.irc.queuing.rateLimit.join: 0.0<br/><br/>###<br/># Determines how many bytes the bot will 'peek' at when looking through<br/># a URL for a doctype or title or something similar. It'll give up after<br/># it reads this many bytes, even if it hasn't found what it was looking<br/># for.<br/>#<br/># Default value: 4096<br/>###<br/>supybot.protocols.http.peekSize: 4096<br/><br/>###<br/># Determines what proxy all HTTP requests should go through. The value<br/># should be of the form 'host:port'.<br/>#<br/># Default value: <br/>###<br/>supybot.protocols.http.proxy: <br/><br/>###<br/># Determines whether the bot will ignore unregistered users by default.<br/># Of course, that'll make it particularly hard for those users to<br/># register or identify with the bot, but that's your problem to solve.<br/>#<br/># Default value: False<br/>###<br/>supybot.defaultIgnore: False<br/><br/>###<br/># A string that is the external IP of the bot. If this is the empty<br/># string, the bot will attempt to find out its IP dynamically (though<br/># sometimes that doesn't work, hence this variable).<br/>#<br/># Default value: <br/>###<br/>supybot.externalIP: <br/><br/>###<br/># Determines what the default timeout for socket objects will be. This<br/># means that *all* sockets will timeout when this many seconds has gone<br/># by (unless otherwise modified by the author of the code that uses the<br/># sockets).<br/>#<br/># Default value: 10<br/>###<br/>supybot.defaultSocketTimeout: 10<br/><br/>###<br/># Determines what file the bot should write its PID (Process ID) to, so<br/># you can kill it more easily. If it's left unset (as is the default)<br/># then no PID file will be written. A restart is required for changes to<br/># this variable to take effect.<br/>#<br/># Default value: <br/>###<br/>supybot.pidFile: <br/><br/>###<br/># Determines whether the bot will automatically thread all commands.<br/>#<br/># Default value: False<br/>###<br/>supybot.debug.threadAllCommands: False<br/><br/>###<br/># Determines whether the bot will automatically flush all flushers<br/># *very* often. Useful for debugging when you don't know what's breaking<br/># or when, but think that it might be logged.<br/>#<br/># Default value: False<br/>###<br/>supybot.debug.flushVeryOften: False<br/><br/>###<br/># Determines what the bot's logging format will be. The relevant<br/># documentation on the available formattings is Python's documentation<br/># on its logging module.<br/>#<br/># Default value: %(levelname)s %(asctime)s %(name)s %(message)s<br/>###<br/>supybot.log.format: %(levelname)s %(asctime)s %(name)s %(message)s<br/><br/>###<br/># Determines what the minimum priority level logged to file will be. Do<br/># note that this value does not affect the level logged to stdout; for<br/># that, you should set the value of supybot.log.stdout.level. Valid<br/># values are DEBUG, INFO, WARNING, ERROR, and CRITICAL, in order of<br/># increasing priority.<br/>#<br/># Default value: INFO<br/>###<br/>supybot.log.level: INFO<br/><br/>###<br/># Determines the format string for timestamps in logfiles. Refer to the<br/># Python documentation for the time module to see what formats are<br/># accepted. If you set this variable to the empty string, times will be<br/># logged in a simple seconds-since-epoch format.<br/>#<br/># Default value: %Y-%m-%dT%H:%M:%S<br/>###<br/>supybot.log.timestampFormat: %Y-%m-%dT%H:%M:%S<br/><br/>###<br/># Determines whether the bot will log to stdout.<br/>#<br/># Default value: True<br/>###<br/>supybot.log.stdout: True<br/><br/>###<br/># Determines whether the bot's logs to stdout (if enabled) will be<br/># colorized with ANSI color.<br/>#<br/># Default value: False<br/>###<br/>supybot.log.stdout.colorized: True<br/><br/>###<br/># Determines whether the bot will wrap its logs when they're output to<br/># stdout.<br/>#<br/># Default value: True<br/>###<br/>supybot.log.stdout.wrap: False<br/><br/>###<br/># Determines what the bot's logging format will be. The relevant<br/># documentation on the available formattings is Python's documentation<br/># on its logging module.<br/>#<br/># Default value: %(levelname)s %(asctime)s %(message)s<br/>###<br/>supybot.log.stdout.format: %(levelname)s %(asctime)s %(message)s<br/><br/>###<br/># Determines what the minimum priority level logged will be. Valid<br/># values are DEBUG, INFO, WARNING, ERROR, and CRITICAL, in order of<br/># increasing priority.<br/>#<br/># Default value: INFO<br/>###<br/>supybot.log.stdout.level: DEBUG<br/><br/>###<br/># Determines whether the bot will separate plugin logs into their own<br/># individual logfiles.<br/>#<br/># Default value: False<br/>###<br/>supybot.log.plugins.individualLogfiles: False<br/><br/>###<br/># Determines what the bot's logging format will be. The relevant<br/># documentation on the available formattings is Python's documentation<br/># on its logging module.<br/>#<br/># Default value: %(levelname)s %(asctime)s %(message)s<br/>###<br/>supybot.log.plugins.format: %(levelname)s %(asctime)s %(message)s<br/><br/>###<br/># These are the capabilities that are given to everyone by default. If<br/># they are normal capabilities, then the user will have to have the<br/># appropriate anti-capability if you want to override these<br/># capabilities; if they are anti-capabilities, then the user will have<br/># to have the actual capability to override these capabilities. See<br/># docs/CAPABILITIES if you don't understand why these default to what<br/># they do.<br/>#<br/># Default value: -owner -admin -trusted<br/>###<br/>supybot.capabilities: -owner -admin -trusted<br/><br/>###<br/># Determines whether the bot by default will allow users to have a<br/># capability. If this is disabled, a user must explicitly have the<br/># capability for whatever command he wishes to run.<br/>#<br/># Default value: True<br/>###<br/>supybot.capabilities.default: False</blockquote><br/><h2 style=\"text-align: left;\">Make it dance</h2>Now start your bot from the command line. This way you can see the debug log messages, in case you need to figure out why it does not work.<br/><br/><blockquote>sudo -u supybot supybot /home/supybot/pitivi/bot.conf</blockquote><br/><br/>Finally, create /lib/systemd/system/supybot.service to have it started automatically. <blockquote>[Unit]<br/>Description=Pitivi IRC bot<br/><br/>[Service]<br/>User=supybot<br/>ExecStart=/usr/bin/supybot /home/supybot/pitivi/bot.conf<br/>UMask=0007<br/>Restart=on-abort<br/>StartLimitInterval=5m<br/>StartLimitBurst=1<br/><br/>[Install]<br/>WantedBy=multi-user.target</blockquote><br/>Remember to start it and enable it to start automatically. <blockquote>systemctl start supybot<br/>systemctl enable supybot</blockquote><br/><br/>Alternatively, create a file in <tt>/etc/init/</tt> so Supybot is started automatically when the system starts. I probably copied the file below from somewhere, but I don't remember from where.<br/><br/><blockquote># This IRC bot serves #pitivi.<br/>description \"Pitivi IRC bot\"<br/><br/># I got this from mysql.conf, you might want to have a look<br/># at other files in /etc/init/ and copy a section which<br/># looks appropriate. Basically it should start the daemon<br/># after the network is started.<br/>start on (net-device-up<br/>and local-filesystems<br/>and runlevel [2345])<br/>stop on runlevel [016]<br/><br/># Restart if it dies unexpectedly. Should not happen.<br/>respawn<br/><br/># Make sure the binary exists.<br/># It's recommended you install supybot from the current git<br/># HEAD, because no features are being worked on, and it<br/># should be stable: http://sf.net/projects/supybot/develop<br/># In this case, the binary is in /usr/local/bin/supybot.<br/># This may differ if you are using, the package included in<br/># your Linux distribution, for example.<br/>pre-start script<br/>test -x /usr/local/bin/supybot || { stop; exit 0; }<br/>end script<br/><br/># Output to the console whatever it outputs.<br/>console output<br/><br/># Run the bot with the specified config file.<br/>#<br/># The bot does not need to run as a daemon, unless<br/># there are other jobs depending on its sucessful start,<br/># for example. If there are, you should add \"expect fork\",<br/># and specify --daemon to the command line, and hope that<br/># it works, because:<br/>#   \"One needs to be very careful with the expect stanza<br/>#    to avoid confusing Upstart: the program must fork in<br/>#    precisely the expected way.\" ion<br/>#<br/># To create the supybot system user and system group, and<br/># add yourself to the group so you can easily edit files<br/># run:<br/>#   addgroup --system supybot<br/>#   adduser --system --ingroup supybot supybot<br/>exec sudo -u supybot /usr/local/bin/supybot /home/supybot/pitivi/bot.conf</blockquote><br/><br/>Congratulations! Send me an email and tell me how happy you are that you have your bot. ;)</div></div>     </content>     <updated>2013-02-17T16:47:50Z</updated>     <published>2011-06-18T13:59:00Z</published>     <category scheme=\"http://www.blogger.com/atom/ns#\" term=\"irc\"/>     <category scheme=\"http://www.blogger.com/atom/ns#\" term=\"pitivi\"/>     <category scheme=\"http://www.blogger.com/atom/ns#\" term=\"supybot\"/>     <author>       <name>Alex B\\ufffd\\ufffdlu\\ufffd\\ufffd</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/04626200070551899329</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-6715983774773260157</id>       <category term=\"irc\"/>       <category term=\"pitivi\"/>       <category term=\"supybot\"/>       <author>         <name>Alex B\\ufffd\\ufffdlu\\ufffd\\ufffd</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/04626200070551899329</uri>       </author>       <link href=\"http://blog.aleb.ro/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/6715983774773260157/posts/default/-/pitivi\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://blog.aleb.ro/search/label/pitivi\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <title>Notes</title>       <updated>2014-10-07T03:27:52Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-2750852840563144504.post-3687123827138394966</id>     <link href=\"http://mathieuduponchelle.blogspot.com/feeds/3687123827138394966/comments/default\" rel=\"replies\" title=\"Publier les commentaires\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2012/09/kse-01-released.html#comment-form\" rel=\"replies\" title=\"144 commentaires\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/3687123827138394966\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/3687123827138394966\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2012/09/kse-01-released.html\" rel=\"alternate\" title=\"KSE 0.1 released !\" type=\"text/html\"/>     <title>KSE 0.1 released !</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I just finished fixing the blocker bugs for the open source assets' manager KSE, and I pushed a release there : https://github.com/MathieuDuponchelle/Kerious-Resource-Editor on the branch 0.1.<br/><br/>I recorded this screencast to make a demo of the features included in this release.<br/><br/><div class=\"separator\" style=\"clear: both; text-align: center;\"><br/></div><br/>I want to say thank you to Simon Corsin for his work on the windows port and manual management.<br/><br/>I'd be glad to see pull-requests on github, or comments, critics and feature requests here.<br/><br/>Here is the text of the video for those with no audio:<br/><br/><blockquote class=\"tr_bq\">Hi, my name is Mathieu Duponchelle and I am glad to present you the first release of kse, which is<br/>a tool to simplify asset's management written in python.<br/><br/>This release covers spritesheet creation, sprite naming, automatic sprites detection in an existing spritesheet,<br/>animation referencing and tons of other stuff.<br/><br/>Spritesheet creation.<br/><br/>Let's create a new spritesheet, and start importing resources.<br/>First we create what we call an \"atlas\", specify its width and height and the location of the resulting file.<br/>Then we can specify the size we wish the next sprite to have, and start adding sprites by double-clicking.<br/>Next step is to start naming all these sprites, for now the naming part is a bit tedious, but it works.<br/><br/>Animation referencing.<br/>Another cool feature of KSE is that we can reference animations easily, using multiple selection.<br/>Let's say these sprites belong to the same animation.<br/><br/>We now save the project, and have a look at the xml that was produced.<br/><br/>We can see that a simple xml parser could easily extract coordinates for a given name, here X.<br/><br/>Automatic sprite detection.<br/><br/>Let's now say that we want to use an already existing spritesheet. I have this one, which will make for a good<br/>demonstration.<br/>A really cool feature is automatic sprite detection, which can be configured with this button.<br/>Match-size will specify the desired width and height multiples for the resulting sprites.<br/>Now let's try it out !<br/>As you can see, KSE detected the sprites and automatically highlighted them. However, if the position or size<br/>of any sprite does not match what we intend, we can easily resize and move them using the mouse or, if we want <br/>a more fine-grained control the comboboxes that we have here.<br/><br/><br/>Conclusion.<br/><br/>With some friends of mine, we already developed a space shooter using KSE.<br/>This helped me finding out the features that were most needed.<br/>It can greatly improve the collaboration between designers and developers, by reducing the number of back and forth<br/>trial and errors, allowing the programmer to only parse the xml file looking for the sprite or the animation name,<br/>and thus not having to hardcode coordinates, which is an obvious advantage, and allowing the designer to try things<br/>without having to modify the code or asking the programmer to do so.<br/><br/>KSE now works on both linux and Windows, it has not been tested on OSX yet.<br/><br/>My thoughts for future features are listed in the poll on the right-hand side of the blog, don't hesitate to comment if you have other ideas/remarks/critics. Thanks for watching !</blockquote></div>     </content>     <updated>2012-09-03T21:07:50Z</updated>     <published>2012-09-03T21:07:00Z</published>     <author>       <name>Mathieu Duponchelle</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/06500866716456569717</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-2750852840563144504</id>       <author>         <name>Mathieu Duponchelle</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/06500866716456569717</uri>       </author>       <link href=\"http://mathieuduponchelle.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://mathieuduponchelle.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Gstreamer-editing-services, Pitivi and other hacks.</subtitle>       <title>Mathieu Duponchelle</title>       <updated>2014-10-19T13:14:49Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://palango.wordpress.com/?p=34</id>     <link href=\"https://palango.wordpress.com/2012/07/17/selectable-layers/\" rel=\"alternate\" type=\"text/html\"/>     <title>Selectable layers</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Finally, it\\ufffd\\ufffd\\ufffds done. Thanks to some hints in the source code of Jokosher I was able to implement selectable layers in PiTiVi. The problem is that some widgets in Gtk+ don\\ufffd\\ufffd\\ufffdt have gdk screens. This means that you can not change their background color, which is a really important thing for showing if a layer [\\ufffd\\ufffd\\ufffd]<img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=34&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Finally, it\\ufffd\\ufffd\\ufffds done. Thanks to some hints in the source code of Jokosher I was able to implement selectable layers in PiTiVi.<br/> The problem is that some widgets in Gtk+ don\\ufffd\\ufffd\\ufffdt have gdk screens. This means that you can not change their background color, which is a really important thing for showing if a layer is selected or not.</p> <p>The solution for this problem is to derive the widget from EventBox. This gives the possibility to modify the background using the modify_bg(\\ufffd\\ufffd\\ufffd) function.</p> <p>Based on that work I was able to implement proper selectable layers. So if you click on a layer control widget or a<br/> layer in the canvas now, the layer gets selected and changes its background color. You can see a selected layer in the following screenshot. Note that I disabled all non-functional widgets (the entry, sliders, buttons\\ufffd\\ufffd\\ufffd) for now, so this isn\\ufffd\\ufffd\\ufffdt the final look.</p> <p><a href=\"https://palango.wordpress.com/2012/07/17/selectable-layers/bildschirmfoto-vom-2012-07-17-193652-2/\" rel=\"attachment wp-att-36\"><img alt=\"Selected video layer\" class=\"aligncenter size-full wp-image-36\" src=\"https://palango.files.wordpress.com/2012/07/bildschirmfoto-vom-2012-07-17-1936521.png?w=519\" title=\"Selected video layer\"/></a></p> <p>This work builds the base for more nice stuff like drag and drop layer reordering or menu actions on layers. I\\ufffd\\ufffd\\ufffdll cover these in the next post.</p><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/palango.wordpress.com/34/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/palango.wordpress.com/34/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=34&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2012-07-17T17:47:09Z</updated>     <category term=\"GSoC\"/>     <category term=\"gsoc\"/>     <category term=\"pitivi\"/>     <author>       <name>palango</name>     </author>     <source>       <id>https://palango.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://palango.wordpress.com/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://palango.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://palango.wordpress.com/osd.xml\" rel=\"search\" title=\"Moving pictures...\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://palango.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>PiTiVi development</subtitle>       <title>Moving pictures...</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://palango.wordpress.com/?p=18</id>     <link href=\"https://palango.wordpress.com/2012/06/27/week-1-2-2/\" rel=\"alternate\" type=\"text/html\"/>     <title>Week 1 &amp; 2</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Back from holidays I worked on including the newly created widgets in the user interface. Before all video or audio layers only had one label. Now we want one widget for every audio/video layer. Therefore I had to change the internal logic quite a bit. Afterwards I noticed that hard coded layer heights didn\\ufffd\\ufffd\\ufffdt work [\\ufffd\\ufffd\\ufffd]<img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=18&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Back from holidays I worked on including the newly created widgets in the user interface.</p> <p>Before all video or audio layers only had one label. Now we want one widget for every audio/video layer. Therefore I had to change the internal logic quite a bit.</p> <p>Afterwards I noticed that hard coded layer heights didn\\ufffd\\ufffd\\ufffdt work well with the new widgets. The more layers you had the more you saw that they weren\\ufffd\\ufffd\\ufffdt properly aligned. My solution for this problem is that I adjust the layer height to the height of the layer control widget. This also gives us basic folding support as well.</p> <p>The current UI now looks like this:</p> <div class=\"wp-caption aligncenter\" id=\"attachment_19\" style=\"width: 310px;\"><a href=\"https://palango.wordpress.com/2012/06/27/week-1-2-2/pitivi-full/\" rel=\"attachment wp-att-19\"><img alt=\"\" class=\"size-medium wp-image-19\" height=\"181\" src=\"https://palango.files.wordpress.com/2012/06/pitivi-full.png?w=300&amp;h=181\" title=\"pitivi-full\" width=\"300\"/></a><p class=\"wp-caption-text\">PiTiVi screenshot with new layer control widgets.</p></div> <p style=\"text-align: left;\">You can find my branch on <a href=\"https://github.com/palango/pitivi/tree/new-layer-controls\">github</a>. I\\ufffd\\ufffd\\ufffdm also happy to hear your comments, hints or whatever you want to say <span class=\"wp-smiley wp-emoji wp-emoji-smile\" title=\":)\">:)</span></p><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/palango.wordpress.com/18/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/palango.wordpress.com/18/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=18&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2012-06-27T14:24:14Z</updated>     <category term=\"GSoC\"/>     <category term=\"gsoc\"/>     <category term=\"pitivi\"/>     <author>       <name>palango</name>     </author>     <source>       <id>https://palango.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://palango.wordpress.com/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://palango.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://palango.wordpress.com/osd.xml\" rel=\"search\" title=\"Moving pictures...\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://palango.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>PiTiVi development</subtitle>       <title>Moving pictures...</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://palango.wordpress.com/2012/06/27/week-1-2/</id>     <link href=\"https://palango.wordpress.com/2012/06/19/week-1-2/\" rel=\"alternate\" type=\"text/html\"/>     <title>Week -1</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Because I didn\\ufffd\\ufffd\\ufffdt have time to work on my project after the official start because of exams and vacation I started working the weeks before. The first part consisted of designing and implementing new control widgets for layers with more functionality. After some inital atteps that didn\\ufffd\\ufffd\\ufffdt look good, nekohayo (btw my super helpful mentor) [\\ufffd\\ufffd\\ufffd]<img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=11&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>Because I didn\\ufffd\\ufffd\\ufffdt have time to work on my project after the official start because of exams and vacation I started working the weeks before.</p> <p>The first part consisted of designing and implementing new control widgets for layers with more functionality. After some inital atteps that didn\\ufffd\\ufffd\\ufffdt look good, <a href=\"http://jeff.ecchi.ca/blog/\">nekohayo</a> (btw my super helpful mentor) jumped in and helped me to review and improve the designs. We ended with these mockups in Glade:</p> <p><a href=\"https://palango.wordpress.com/2012/06/27/week-1-2/mockup-2/\" rel=\"attachment wp-att-12\"><img alt=\"\" class=\"aligncenter size-full wp-image-12\" src=\"https://palango.files.wordpress.com/2012/06/mockup1.png?w=519\" title=\"mockup\"/></a></p> <p>Then I started implementing them using pygtk. <a href=\"http://jeff.ecchi.ca/blog/2012/02/28/y-u-no-gtk3-yet/\">Unfortunately</a> we still have to use Gtk+ 2 so we don\\ufffd\\ufffd\\ufffdt get the cool new style. Furthermore I didn\\ufffd\\ufffd\\ufffdt yet find a way to make a container widget selectable, so I added the \\ufffd\\ufffd\\ufffdDelete\\ufffd\\ufffd\\ufffd button to delete layers. However this should be gone in the final version.<img alt=\"\" class=\"aligncenter size-full wp-image-13\" src=\"https://palango.files.wordpress.com/2012/06/layer-controls.png?w=519\" title=\"layer-controls\"/></p> <p>The next step was to use these new widgets in the PiTiVi interface. I\\ufffd\\ufffd\\ufffdll cover this in the next post!</p><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/palango.wordpress.com/11/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/palango.wordpress.com/11/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=11&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2012-06-19T14:04:27Z</updated>     <category term=\"GSoC\"/>     <category term=\"gsoc\"/>     <category term=\"pitivi\"/>     <author>       <name>palango</name>     </author>     <source>       <id>https://palango.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://palango.wordpress.com/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://palango.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://palango.wordpress.com/osd.xml\" rel=\"search\" title=\"Moving pictures...\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://palango.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>PiTiVi development</subtitle>       <title>Moving pictures...</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en\">     <id>http://palango.wordpress.com/?p=8</id>     <link href=\"https://palango.wordpress.com/2012/05/20/advanced-layers-for-pitivi/\" rel=\"alternate\" type=\"text/html\"/>     <title>Advanced Layers for PiTiVi</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I\\ufffd\\ufffd\\ufffdm happy to announce that my project proposal for the summer of code 2012 has been accepted! I\\ufffd\\ufffd\\ufffdll be working on creating an advanced layer system for the PiTiVi video editor under the umbrella of the GStreamer project! Thanks to everyone who helped me! About my project: The current approach of layers in PiTiVi does [\\ufffd\\ufffd\\ufffd]<img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=8&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </summary>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><p>I\\ufffd\\ufffd\\ufffdm happy to announce that my project proposal for the summer of code 2012 has been accepted!</p> <p>I\\ufffd\\ufffd\\ufffdll be working on creating an advanced layer system for the <a href=\"http://pitivi.org/\">PiTiVi</a> video editor under the umbrella of the <a href=\"http://gstreamer.freedesktop.org/\">GStreamer</a> project! Thanks to everyone who helped me!</p> <p>About my project:</p> <blockquote><p>The current approach of layers in PiTiVi does not provide more functionality than grouping video and audio sources in different levels. I want to add an advanced layer system to the PiTiVi video editor to improve the video editing workflow and user experience. This is based on two ideas. On the one hand putting more functionality into layers helps to avoid repetitive tasks like adjusting volume and panning, muting or applying effects to clips. On the other hand improving the management of layers by offering to name, reorder, fold and resize them makes working with layers more convenient.</p></blockquote><br/>  <a href=\"http://feeds.wordpress.com/1.0/gocomments/palango.wordpress.com/8/\" rel=\"nofollow\"><img alt=\"\" border=\"0\" src=\"http://feeds.wordpress.com/1.0/comments/palango.wordpress.com/8/\"/></a> <img alt=\"\" border=\"0\" height=\"1\" src=\"https://pixel.wp.com/b.gif?host=palango.wordpress.com&amp;blog=4614864&amp;post=8&amp;subd=palango&amp;ref=&amp;feed=1\" width=\"1\"/></div>     </content>     <updated>2012-05-20T13:57:33Z</updated>     <category term=\"GSoC\"/>     <category term=\"gsoc\"/>     <category term=\"pitivi\"/>     <author>       <name>palango</name>     </author>     <source>       <id>https://palango.wordpress.com</id>       <logo>https://s2.wp.com/i/buttonw-com.png</logo>       <link href=\"https://palango.wordpress.com/feed/\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"https://palango.wordpress.com\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"https://palango.wordpress.com/osd.xml\" rel=\"search\" title=\"Moving pictures...\" type=\"application/opensearchdescription+xml\"/>       <link href=\"https://palango.wordpress.com/?pushpress=hub\" rel=\"hub\" type=\"text/html\"/>       <subtitle>PiTiVi development</subtitle>       <title>Moving pictures...</title>       <updated>2015-03-19T08:45:06Z</updated>     </source>   </entry>    <entry xml:lang=\"en-US\">     <id>http://8na.de/?p=91</id>     <link href=\"http://8na.de/?p=91\" rel=\"alternate\" type=\"text/html\"/>     <title>Getting video properties out of GStreamer</title>     <summary>GStreamer is a pretty nice piece of software for handling almost all of your multimedia needs but the time will come that you get to the point where seemingly easy things are pretty hard to figure out. I hit this point when working on the thumbnailing code of PiTiVi and realizing that there is no [\\ufffd\\ufffd\\ufffd]</summary>     <updated>2012-04-27T14:07:13Z</updated>     <category term=\"Software\"/>     <category term=\"Framerate\"/>     <category term=\"GStreamer\"/>     <category term=\"Height\"/>     <category term=\"PiTiVi\"/>     <category term=\"Properties\"/>     <category term=\"Python\"/>     <category term=\"Video\"/>     <category term=\"Width\"/>     <author>       <name>Daniel</name>     </author>     <source>       <id>http://8na.de</id>       <link href=\"http://8na.de/?feed=rss2&amp;tag=pitivi\" rel=\"self\" type=\"application/rss+xml\"/>       <link href=\"http://8na.de\" rel=\"alternate\" type=\"text/html\"/>       <title>8na \\ufffd\\ufffd PiTiVi</title>       <updated>2014-08-11T10:00:09Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-2750852840563144504.post-256491536986765357</id>     <link href=\"http://mathieuduponchelle.blogspot.com/feeds/256491536986765357/comments/default\" rel=\"replies\" title=\"Publier les commentaires\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/10/homework.html#comment-form\" rel=\"replies\" title=\"26 commentaires\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/256491536986765357\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/256491536986765357\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/10/homework.html\" rel=\"alternate\" title=\"Homework :)\" type=\"text/html\"/>     <title>Homework :)</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I had plenty of other things to do today, so I iterated from that code :<br/>http://encrypt3d.wordpress.com/2007/06/19/level-order-traversal/ , which I found pretty elegant.<br/><br/><span style=\"font-size: large;\">Function of the code: </span><br/><br/>Breadth first tree traversal, display the level and show if the node is the first one of its level (starting from the left).<br/><br/><span style=\"font-size: large;\">Missing:</span><br/><br/>As it was homework, I had to give the is_first property. What would be better would be to display the order of the node in the level.<br/>Also, wondering about the best way to display a tree.<br/>May'be starting by the bottom ?<br/><span style=\"font-size: large;\"><br/></span><br/><span style=\"font-size: large;\">Code:</span><br/><br/><br/>typedef struct s_infos<br/>{<br/>\\ufffd\\ufffd int is_first;<br/>\\ufffd\\ufffd int level;<br/>\\ufffd\\ufffd t_btree *node;<br/>} t_infos;<br/><br/>t_infos\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd*create_new(t_infos *par, t_btree *n, int first)<br/>{<br/>\\ufffd\\ufffd t_infos\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd*q;<br/><br/>\\ufffd\\ufffd q = malloc(sizeof(t_infos));<br/>\\ufffd\\ufffd q-&gt;node = n;<br/>\\ufffd\\ufffd q-&gt;is_first = first ? 0 : 1;<br/>\\ufffd\\ufffd if (par)<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd q-&gt;level = par-&gt;level + 1;<br/>\\ufffd\\ufffd else<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd q-&gt;level = 0;<br/>\\ufffd\\ufffd return(q);<br/>}<br/><br/>void\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffdlevelorder(t_btree *p,<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffdvoid (*applyf)(void *item,<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd int current_level,<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd int is_first_elem),<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffdint *size,<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffdint *qptr)<br/>{<br/>\\ufffd\\ufffd t_infos\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd**queue;<br/>\\ufffd\\ufffd int\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd*tab;<br/>\\ufffd\\ufffd t_infos\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd*q;<br/><br/>\\ufffd\\ufffd q = create_new(0, p, 0);<br/>\\ufffd\\ufffd tab = malloc(sizeof(int) * 100);<br/>\\ufffd\\ufffd queue = malloc(sizeof(t_infos *) * 100);<br/>\\ufffd\\ufffd while(q)<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd {<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd applyf(q-&gt;node-&gt;item, q-&gt;level, q-&gt;is_first);<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd if(q-&gt;node-&gt;left)<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd{<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd queue[*size] = create_new(q, q-&gt;node-&gt;left, tab[q-&gt;level + 1]);<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd *size += 1;<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd tab[q-&gt;level + 1] = 1;<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd}<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd if(q-&gt;node-&gt;right)<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd{<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd queue[*size] = create_new(q, q-&gt;node-&gt;right, tab[q-&gt;level + 1]);<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd *size += 1;<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd\\ufffd\\ufffd tab[q-&gt;level + 1] = 1;<br/>\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffd}<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd q = queue[*qptr];<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd *qptr += 1;<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd }<br/>}<br/><br/>void\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd *btree_apply_by_level(t_btree *root,<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd void (*applyf)(void *item,<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd int current_level,<br/>\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd\\ufffd int is_first_elem))<br/>{<br/>\\ufffd\\ufffd int\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffdsize;<br/>\\ufffd\\ufffd int\\ufffd\\ufffd\\ufffd\\ufffd \\ufffd\\ufffdqptr;<br/><br/>\\ufffd\\ufffd size = 0;<br/>\\ufffd\\ufffd qptr = 0;<br/>\\ufffd\\ufffd levelorder(root, applyf, &amp;size, &amp;qptr);<br/>}<br/><br/><span style=\"font-size: large;\">Usage:</span><br/><br/>Let root be the root of the tree, and applyf the adress of a function returning void and using as arguments the data of each processed node, its level and its is_first property (Crap how useless is that ..) Also, t_btree is a classical node structure containing the left child, the right child and the data.<br/><br/>Also, today I coded a function that allows you to insert a data in a red black tree.<br/>I'll try to post that\\ufffd\\ufffd when I have time, it's a little longer but I think it's worth it.</div>     </content>     <updated>2011-10-28T21:55:20Z</updated>     <published>2011-10-28T21:50:00Z</published>     <author>       <name>Mathieu Duponchelle</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/06500866716456569717</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-2750852840563144504</id>       <author>         <name>Mathieu Duponchelle</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/06500866716456569717</uri>       </author>       <link href=\"http://mathieuduponchelle.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://mathieuduponchelle.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Gstreamer-editing-services, Pitivi and other hacks.</subtitle>       <title>Mathieu Duponchelle</title>       <updated>2014-10-19T13:14:49Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-8113711320148671046.post-3773416372390702914</id>     <link href=\"http://thiblahute.blogspot.com/feeds/3773416372390702914/comments/default\" rel=\"replies\" title=\"Enviar comentarios\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/09/pitivi-015-is-out.html#comment-form\" rel=\"replies\" title=\"2 comentarios\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/3773416372390702914\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/3773416372390702914\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/09/pitivi-015-is-out.html\" rel=\"alternate\" title=\"PiTiVi 0.15 is out\" type=\"text/html\"/>     <title>PiTiVi 0.15 is out</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"ace-line\" id=\"magicdomid94\" style=\"text-align: justify;\"><div class=\"ace-line\" id=\"magicdomid135\"><span class=\"author-g-wdo0nc53c22qlc85\">The PiTiVi team is proud to announce the <a href=\"https://wiki.pitivi.org/wiki/0.15\">0.15 release</a></span><span class=\"author-g-wdo0nc53c22qlc85\">.</span><span class=\"author-g-ubu9iid79aw145sw\">   This will be the last release using the \"traditional\" core/engine of    PiTiVi. The next releases will be based on GStreamer Editing Services    (GES) and should thus depart significantly from this release in terms   of  performance, features and stability.</span></div></div><br/><div class=\"ace-line\" id=\"magicdomid6\"><br/><br/><a href=\"http://4.bp.blogspot.com/-7orP0pp3ylo/ToM5v83rKaI/AAAAAAAAHcc/rWbkfP6CyaE/s1600/lubosz%2Bthe%2Bmagician.png\"><img alt=\"\" border=\"0\" id=\"BLOGGER_PHOTO_ID_5657429052863752610\" src=\"http://4.bp.blogspot.com/-7orP0pp3ylo/ToM5v83rKaI/AAAAAAAAHcc/rWbkfP6CyaE/s320/lubosz%2Bthe%2Bmagician.png\" style=\"display: block; margin: 0px auto 10px; text-align: center; cursor: pointer; cursor: hand; width: 320px; height: 200px;\"/></a><br/><br/></div><div class=\"ace-line\" id=\"magicdomid99\"><div style=\"text-align: justify;\"><span class=\"author-g-wdo0nc53c22qlc85\">Jean Fran\\ufffd\\ufffdois did a great </span><span class=\"author-g-ubu9iid79aw145sw\">screencast</span><span class=\"author-g-wdo0nc53c22qlc85\"> that sums up what has been done during the last 2 years:</span></div><br/><br/><br/><br/><br/><div class=\"ace-line\" id=\"magicdomid72\"><span class=\"author-g-ubu9iid79aw145sw\">H</span><span class=\"author-g-wdo0nc53c22qlc85\">e also</span><span class=\"author-g-ubu9iid79aw145sw\"> published the video of the 2011 desktop summit and PiTiVi/GES hackfest</span><span class=\"author-g-wdo0nc53c22qlc85\"> </span><span class=\"author-g-ubu9iid79aw145sw\">for your enjoyment</span><span class=\"author-g-wdo0nc53c22qlc85\">:<br/><br/><br/><br/></span><br/>All those videos are also accessible in HTML5 versions on the <a href=\"http://pitivi.org/?go=showcase\">showcase</a> page.<br/><br/><br/><br/></div><div class=\"ace-line\" id=\"magicdomid84\"><span class=\"author-g-wdo0nc53c22qlc85\">Thanks to </span><span class=\"author-g-ubu9iid79aw145sw\">everybody who</span><span class=\"author-g-wdo0nc53c22qlc85\"> made this release possible</span><span class=\"author-g-ubu9iid79aw145sw\">!</span></div><div class=\"ace-line\" id=\"magicdomid14\"><br/></div></div></div>     </content>     <updated>2011-09-28T15:53:01Z</updated>     <published>2011-09-28T14:29:00Z</published>     <author>       <name>Thibault Saunier</name>       <email>noreply@blogger.com</email>       <uri>https://plus.google.com/103637668808391628590</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-8113711320148671046</id>       <category term=\"open source\"/>       <category term=\"development\"/>       <category term=\"gnome\"/>       <category term=\"gvfs\"/>       <category term=\"nautilus\"/>       <category term=\"android\"/>       <category term=\"gsoc\"/>       <category term=\"gsoc2010\"/>       <author>         <name>Thibault Saunier</name>         <email>noreply@blogger.com</email>         <uri>https://plus.google.com/103637668808391628590</uri>       </author>       <link href=\"http://thiblahute.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://thiblahute.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Thiblahute's hacks</subtitle>       <title>Thibault Saunier</title>       <updated>2014-10-07T03:21:30Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-2750852840563144504.post-8781808133715355653</id>     <link href=\"http://mathieuduponchelle.blogspot.com/feeds/8781808133715355653/comments/default\" rel=\"replies\" title=\"Publier les commentaires\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/07/weekly-report-number-6-and-7-for-my.html#comment-form\" rel=\"replies\" title=\"3 commentaires\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/8781808133715355653\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/8781808133715355653\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/07/weekly-report-number-6-and-7-for-my.html\" rel=\"alternate\" title=\"Weekly report number 6 and 7 for my GSoC\" type=\"text/html\"/>     <title>Weekly report number 6 and 7 for my GSoC</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Hi everyone !<br/><br/>These last two weeks were pretty busy for me.<br/>First off, last week I reached my mid-term evaluation goal, which was to  load a GESTimeline with xptv projects thanks to my GESPitiviFormatter,  then load a GESTimelinePipeline with the timeline, then connect it to  the viewer in Pitivi, all of this using my python bindings for GES. This  was a long sentence but quite a short job, and this was still pretty  hacky.<br/>Afterwards, I played around a little with projects, only to realize that  I had a nasty bug with the interaction of effects and transitions,  which obviously came from my formatter. This was in the middle of last  week.<br/><br/>After this discovery, I moved in to another flat, and the end of the week was not really filled with working.<br/><br/>I started to tackle this bug by the beginning of this week, and I must  admit it took me a long time to figure out where it came from (the  respective priorities of transitions and effects, which determine which  object is \"above\" and which is \"under\" had to be set in the appropriate  way), and still longer to fix it : once I made out how everything had to  fit together, I also realized that the calculating of the needs in  terms of transitions had to be refactored, I needed to compare the  sorted track objects one after another, and not the track objects  belonging to the sorted timeline objects one after another. I hope I'm  clear enough, anyway I had to add a function to the GESTrack API to  achieve this, which makes me think I'll also have to update the bindings  aha.<br/><br/>Also, during this week I broke my scooter, and that didn't help me in  concentrating on my problems. It now lies in pieces in my yard waiting  for me to fix it or for someone to steal it xD.<br/><br/>Anyway.<br/><br/>These bugs are now fixed, and I can now attack the rest of the integration with a free mind.<br/><br/>I will now explain you how to checkout my work and give it a try, if you find bugs don't hesitate to contact me.<br/><br/>This is if you don't use jhbuild :<br/><br/>First, you'll need pitivi. After that, you'll need the latest  gst-python, then you'll have to get to my GES repository, which is at  https://github.com/Mathieu69 as usual. You'll want to checkout the  \"integration\" branch, autogen it *without* prefix (this is due to the  CONFIGURED_PYTHON_PATH in pitivi, will fix that when I'll have time),  make and make install.<br/><br/>To test the bindings : ipython, from gst import ges. If it imports, fine  ! You're nearly done. Otherwise, mail me with the traceback.<br/><br/>Afterwards, all you'll have to do is go to my pitivi repo, and checkout  the \"intcheck\" branch. Just switch to it, launch pitivi, and load a  project *using the start up wizard*. You'll then be able to press play  and profit :D You can also pause, undock the viewer, and that's pretty  much all xD.<br/><br/>Anyway, what's interesting is to compare the playback between master and  my branch, you'll be able to see the difference in smoothness ;) GES  makes playback nearly smooth, it only lags a little when transitions  start or if you think that a clip is way cooler with agingtv, chromium,  color lookup table filter, vertigo TV, and whatever effect *at the same  time*, where in pitivi and with my computer you can only see one picture  every 2/3 seconds, with no transitions. When transitions or effects  kick in, you just want to switch to pause and go ahead by hand, it's  nearly smoother ;)<br/><br/>If you have issues at any point of the testing, mail me or directly come to pitivi's IRC channel, my nick is Mathieu_Du.<br/><br/>Voila !</div>     </content>     <updated>2011-07-09T02:49:56Z</updated>     <published>2011-07-09T02:49:00Z</published>     <author>       <name>Mathieu Duponchelle</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/06500866716456569717</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-2750852840563144504</id>       <author>         <name>Mathieu Duponchelle</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/06500866716456569717</uri>       </author>       <link href=\"http://mathieuduponchelle.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://mathieuduponchelle.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Gstreamer-editing-services, Pitivi and other hacks.</subtitle>       <title>Mathieu Duponchelle</title>       <updated>2014-10-19T13:14:49Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-8113711320148671046.post-3870628516539843837</id>     <link href=\"http://thiblahute.blogspot.com/feeds/3870628516539843837/comments/default\" rel=\"replies\" title=\"Enviar comentarios\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/06/pitivi-lets-go-faster.html#comment-form\" rel=\"replies\" title=\"7 comentarios\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/3870628516539843837\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/3870628516539843837\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/06/pitivi-lets-go-faster.html\" rel=\"alternate\" title=\"PiTiVi: Let's go faster!\" type=\"text/html\"/>     <title>PiTiVi: Let's go faster!</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">As I said<a href=\"http://thiblahute.blogspot.com/2011/05/pitivi-014-no-longer-kills-kittens.html\"> in the last release announcement post,</a> the PiTiVi community needs changes in the releasing process, and as <a href=\"http://twitter.com/#%21/bilboed/status/74398993144233984\"> newly appointed release manager</a>  I have the primary goal of making the development as dynamic as  possible. The last release cycle lasted 8 months, which is way too long  when we are supposed to be following the \"<a href=\"http://en.wikipedia.org/wiki/Release_early,_release_often\">release early, release often</a>\"  philosophy. Avoiding it, is something we really want to work on, but I  think a little explanation of why it happened is well needed:<ul style=\"text-align: justify;\"><li>We had blocker bugs that could only be fixed by the main developers, and it was difficult for them to do so.<br/></li><li>The  person in charge of releasing was much too busy to do the job, which is  why I have now been appointed as new release manager and will do my  best to find the time to do it well.<br/></li><li>We did not have any release schedule, which meant that we did not have any obligation concerning releases.<br/></li></ul><div style=\"text-align: justify;\">    Also I want to explain a few of the reasons why I do believe this is something we really want to avoid:<br/></div><ul style=\"text-align: justify;\"><li>Users  think nothing is happening, that the project is dying. Yet, as the  activity on our git repository shows, rumors of our death have been  greatly exaggerated.<br/></li><li>Potential contributors are hesitant to invest in the project because they think the project is dormant.<br/></li><li>Without  a feature freeze, bugs tend to accumulate as new features land  Contributors may be discouraged by the fact that they do not see their  work reach the users quickly enough.<br/></li><li>There are many  more reasons, as you can guess, but listing them all here would take too  much time and I would have to delay the release ;-)<br/></li></ul><div style=\"text-align: justify;\">     Therefore, we decided to take a set of measures concerning our  release process to keep our current developers active and attract as  many new contributors as possible.  So here are the changes that are  going to occur in the near future:</div><ul style=\"text-align: justify;\"><li>        First and foremost, starting from now, PiTiVi should follow the <a href=\"https://live.gnome.org/ThreePointOne#Schedule\">Gnome release schedule</a>.   This is not going to be easy, since our manpower is quite limited, but  this is something that is really needed to ensure a healthy development  pace.</li><li>Have an official patch review policy: we want to  \"guarantee\" that any patch  that is sent to us will be reviewed *within 3  weeks*. This is also a great opportunity for new contributors who have  experience in programming in general and would like to start by reading  and improving other's code. Collaboration towards making a great patch  is a great motivator! Upholding this goal will be a challenge, and your  help in reviewing patches is very welcome.<br/></li><li>We want to  make sure that deprecated libraries or broken/unmaintained features get  removed as fast as possible. Dead code must die.<br/></li></ul><div style=\"text-align: justify;\">        The project is pretty active these days, and I believe it is the  right time to get those changes done. The feature list is becoming  bigger and bigger and thanks to our very close relationship with the  GStreamer multimedia framework, implementing new ones is becoming very  simple. Also, the GStreamer community is very active and we are looking  forward the <a href=\"http://blogs.gnome.org/uraeus/2011/06/14/on-the-path-to-gstreamer-1-0/\">GStreamer 1.0</a>  release which should come out soon and will bring us new opportunities  toward our goal of creating a video editor that can serve the needs of  professional video editors.<br/><br/>So if you are interested in helping us making those changes happen, you are very welcome to have a look at our <a href=\"http://wiki.pitivi.org/wiki/Main_Page\">wiki</a> page and <a href=\"http://wiki.pitivi.org/wiki/PiTiVi_Love\">our task list</a>.  I also warmly encourage you to join us on #pitivi on the freenode irc  server, I am sure people will be happy to help you getting involved in  this great software development project!<br/><br/></div></div>     </content>     <updated>2011-06-16T16:40:10Z</updated>     <published>2011-06-16T16:39:00Z</published>     <author>       <name>Thibault Saunier</name>       <email>noreply@blogger.com</email>       <uri>https://plus.google.com/103637668808391628590</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-8113711320148671046</id>       <category term=\"open source\"/>       <category term=\"development\"/>       <category term=\"gnome\"/>       <category term=\"gvfs\"/>       <category term=\"nautilus\"/>       <category term=\"android\"/>       <category term=\"gsoc\"/>       <category term=\"gsoc2010\"/>       <author>         <name>Thibault Saunier</name>         <email>noreply@blogger.com</email>         <uri>https://plus.google.com/103637668808391628590</uri>       </author>       <link href=\"http://thiblahute.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://thiblahute.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Thiblahute's hacks</subtitle>       <title>Thibault Saunier</title>       <updated>2014-10-07T03:21:30Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-6827527823540310316.post-2422383758753555889</id>     <link href=\"http://dotsony.blogspot.com/2011/06/calendar-update-part-ii-after-release.html\" rel=\"alternate\" type=\"text/html\"/>     <title>Calendar Update Part II - After The Release</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Following up on my promise to detail some of my future plans. But first, a word about that nasty memory leak.<br/><br/><b>Memory leak in pycairo or pango/cairo.</b><br/><b><br/></b><br/>I am 80% confident that there's a bug in the python bindings shipped on ubuntu 10.10. I developed a minimal example, (<a href=\"http://pastebin.com/5ZDp8QKS\">full source here</a>), which just draws some text repeatedly in a window. The relevant bit of this example is the following function:<br/><br/><pre>def draw_text(self, cr, text, x, y, width):<br/>        pcr = pangocairo.CairoContext(cr)<br/>        lyt = pcr.create_layout()<br/>        lyt.set_text(text)<br/>        lyt.set_width(pango.units_from_double(width))<br/>        lyt.set_wrap(pango.WRAP_WORD_CHAR)<br/>        cr.move_to(x, y)<br/>        pcr.show_layout(lyt)<br/>        return lyt.get_pixel_size()[1]<br/></pre><br/>This little script will om nom nom your memory -- over 100 mb of memory after just a few minutes, and I think we can all agree that even if this it's not the most efficient example, its memory usage should be nearly constant. I haven't yet opened a bug, because I still don't know which component(s) contain the actual leak. At least feel better that it's probably not something I'm doing wrong, which gives me the confidence to move forward with the release.<br/><br/>To mitigate against the leak, I threw in an optimization that ensures only one pangocairo context and one text layout is created, per expose event, per widget. This seems like a reasonable thing to do in general, so I will probably leave this optimization in even after the bug is fixed.\\ufffd\\ufffdUnfortunately, all this does is slow down the leak. The leak is still there, which means you still wouldn't want to leave the calendar application running indefinitely.<br/><br/>In passing I'd like to say that the idea that a pango layout needs to be associated to a particular context bothers me a lot. I wonder if I can get away with re-using layouts with different pangocairo contexts.<br/><b><br class=\"Apple-interchange-newline\"/>A better grammar</b></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><b><br/></b></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">The current parser for recurrence expressions could use some serious help. The parser for the existing grammar is in the \"proof-of-concept\" stage of development. It's intuitive for simple things, but you will notice that parenthesis are needed to get correct parsing of more complicated examples. This is due to unresolved ambiguities in the grammar.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Most of the ambiguity could likely be resolved with associativity and precedence declarations, but when you're developing a new notation it's difficult to know in advance what the intiutive associativity is. Basically I didn't bother trying to get it right at all, and rely on parenthesis as a crutch.\\ufffd\\ufffd<i>I recognize that this neither intuitive nor natural.</i>\\ufffd\\ufffdEven I am surprised at how wrong the unparenthesized parse can be.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">I am also aware that this approach is horribly anglo-centric. You would have to write separate parsers for \\ufffd\\ufffdevery language you wanted to support, and it's a good bet that language constructs don't always map onto each other so neatly.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">I am also playing around with graphical approaches to the same problem, but to be perfectly honest they've all sucked so far. I might do a separate posting on one of them just to show you how god-awful it is.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><b><br/></b></div></div><div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><b>A mouse-driven way to add\\ufffd\\ufffd<i>recurrence exceptions</i>.</b></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">When dragging a recurring event, the current behaviour is to shift the entire recurrence pattern.\\ufffd\\ufffdThis is a deliberate choice on my part: it's a novel feature that I want to highlight it.\\ufffd\\ufffdUnfortunately, many times time what you actually want to do is shift<i>\\ufffd\\ufffdjust the occurrence you've selected</i>, and occasionally you want to move\\ufffd\\ufffd<i>all the events\\ufffd\\ufffd</i>after<i>\\ufffd\\ufffdthe selected occurrence</i>.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Note, you can do this now: however, you have to go through the text interface. Even I find this quite tedious. The solution most obvious to me is to introduce control and meta modifier keys, but I have found that other users do not share my enthusiasm for mouse modifiers. In usability parlance, we say that \\ufffd\\ufffd modifiers are less discoverable than more explicit features.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Another idea would be to add some tool bar buttons that silently add modify the recurrence rules of the selected event. This would be fairly easy to do, but I have a couple of misgivings. The first is that the toolbar is getting crowded already. The second is that it won't be obvious what those buttons do at first. Clicking on the \"except this occurrence\" button will not produce an immediately visible change, only modify the behavior of future interaction. This would be especially be confusing if you hit the button by accident.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">A more radical idea would be to place special \"handles\" on the clip itself. That way dragging from a handle could have a different meaning from dragging the clip itself. I am leaning towards this approach, but it is not without drawbacks of its own. For example, the handles compete for space with the event text. They will necessarily be small, which could hurt usability in a tablet.</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><b>Integration with other calendars</b></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">Syncing with Google Calendar and / or EDS</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\">importing from, and exporting to, .ics.<br/><br/>This work ought to be pretty straight-forward given how the code is organized, but I haven't really looked in detail at the APIs / File formats I'd be working with. If you're interested in helping out with that, you know where to find me ;)</div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><b>Event alarms</b></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><br/></div><div style=\"margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;\"><i/>This might not be necessary if I can use something like EDS as the default back-end. But we'll see. Depending on how hard it is to map the concepts in my application onto the APIs exposed by EDS, it might be easier to roll my own implementation.</div></div></div>     </summary>     <updated>2011-06-10T18:14:00Z</updated>     <author>       <name>brandon lewis</name>       <email>noreply@blogger.com</email>     </author>     <source>       <id>tag:blogger.com,1999:blog-6827527823540310316</id>       <author>         <name>brandon lewis</name>         <email>noreply@blogger.com</email>       </author>       <link href=\"http://dotsony.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://dotsony.blogspot.com/feeds/posts/default?alt=rss\" rel=\"self\" type=\"application/rss+xml\"/>       <title>.sony</title>       <updated>2015-03-19T08:45:09Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-6827527823540310316.post-8335854503403744117</id>     <link href=\"http://dotsony.blogspot.com/2011/06/calendar-update.html\" rel=\"alternate\" type=\"text/html\"/>     <title>Calendar Update</title>     <summary type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://1.bp.blogspot.com/-uyJUk4JmDfM/TfBdT_4JqyI/AAAAAAAAAdA/qhf39BKZgoI/s1600/IMG_20110607_193736.jpg\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"240\" src=\"http://1.bp.blogspot.com/-uyJUk4JmDfM/TfBdT_4JqyI/AAAAAAAAAdA/qhf39BKZgoI/s320/IMG_20110607_193736.jpg\" width=\"320\"/></a></div><br/><br/>What a crazy couple of months it's been. I have been back in San Francisco since late February, but not found the motivation or time to post until now. Among other things, I've been to racing school, and I've taken up drumming as a new hobby. I also attended the meego conference here, where I was showing off my QML GES demo (another post about this is still in progress).<br/><br/>I thought I'd take some time to write about the work I've done on my desktop calendar application over the past several months. This will stop me from pestering my friends about it, which will make them a lot happier.<br/><br/><ul><li>Major cosmetic face-lift.</li><li>Added an infinite-scrolling month view.</li><li>Added support for all-day events, which are displayed in a pane along the top row.</li><li>Added support for recurring events via a natural-ish language parser which supports english-like recurrence expressions such as \"every two days from now until october\", or \"the 3rd wednesday of every month except this wednesday\"</li><li>You can easily shift the entire recurrence pattern by dragging a single occurrence with the mouse</li><li>Possible to select the same block of time across multiple days.</li><li>Added support for editable event text.</li><li>Removed dependency on goocanvas. Since all the drawing code is custom, and the entire widget is re-painted on every expose, there really is no point in using goocanvas.</li></ul><br/><br/><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://3.bp.blogspot.com/-y9YRs-LqmKY/TfBd7ED-bnI/AAAAAAAAAdE/VAi1ncvDJnA/s1600/calendar-6-2011.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"320\" src=\"http://3.bp.blogspot.com/-y9YRs-LqmKY/TfBd7ED-bnI/AAAAAAAAAdE/VAi1ncvDJnA/s320/calendar-6-2011.png\" width=\"306\"/></a></div><br/><div class=\"separator\" style=\"clear: both; text-align: center;\"/><div class=\"separator\" style=\"clear: both; text-align: center;\"><a href=\"http://4.bp.blogspot.com/-SDm_z8tbyaw/TfBklv6i-7I/AAAAAAAAAdc/nHaU69VzH38/s1600/calendar-6-2011-detail.png\" style=\"margin-left: 1em; margin-right: 1em;\"><img border=\"0\" height=\"41\" src=\"http://4.bp.blogspot.com/-SDm_z8tbyaw/TfBklv6i-7I/AAAAAAAAAdc/nHaU69VzH38/s320/calendar-6-2011-detail.png\" width=\"320\"/></a></div><div class=\"separator\" style=\"clear: both; text-align: center;\"><br/></div>I am considering making an initial release, but would like to address the following issues:<br/><ul><li>I need to come up with a name. As my music teacher once told me, \"Name your children.\" Anything is better than <i>cal.py</i>.</li><li>Adopt some system for installation, most likely distutils.</li><li>Currently the calendar widget leaks about 100kb of memory for every expose event. After a few minutes of scrolling and dragging it's pushing 100mb. It's obviously a bug, and I've narrowed it down to the functions I wrote to simplify drawing text. Disabling these functions reduces the memory consumption to a much more reasonable 15-ish mb, Either I am doing something memory inefficient in python, or I've found a leak in pango / cairo. I would very much like to understand that better.</li><li>I recently added all-day events. You can create an event as an all-day event, or you can drag an existing event to the all-day area. But you can't drag an all-day event back into the timed area.</li></ul><div>I did some \"usability testing\" on a hapless friend of mine, and the results were encouraging but showed there was a great deal of room for improvement. Unfortunately, my select-then-add paradigm of creating new events is confusing for those used to applications like google calendar and evolution. In evolution I find the click-to-create behaviour frustrating. Google calendar, on the other hand, seems to get it right.</div><div><br/></div><div><span class=\"Apple-style-span\" style=\"font-size: large;\"><b>After the release</b></span><br/>This post is getting long enough already. I've also got some ideas for subsequent improvements, which I will summarize here. TTFN<br/><br/><ul><li>A better grammar</li><li>A mouse-driven way to add <i>recurrence exceptions</i>.</li><li>Integration with other calendars</li><li>Event alarms</li></ul></div></div>     </summary>     <updated>2011-06-09T05:58:00Z</updated>     <author>       <name>brandon lewis</name>       <email>noreply@blogger.com</email>     </author>     <source>       <id>tag:blogger.com,1999:blog-6827527823540310316</id>       <author>         <name>brandon lewis</name>         <email>noreply@blogger.com</email>       </author>       <link href=\"http://dotsony.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://dotsony.blogspot.com/feeds/posts/default?alt=rss\" rel=\"self\" type=\"application/rss+xml\"/>       <title>.sony</title>       <updated>2015-03-19T08:45:09Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-2750852840563144504.post-8562432879202445164</id>     <link href=\"http://mathieuduponchelle.blogspot.com/feeds/8562432879202445164/comments/default\" rel=\"replies\" title=\"Publier les commentaires\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/06/second-weekly-report-for-gsoc.html#comment-form\" rel=\"replies\" title=\"16 commentaires\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/8562432879202445164\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/8562432879202445164\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/06/second-weekly-report-for-gsoc.html\" rel=\"alternate\" title=\"Second weekly report for GSoC\" type=\"text/html\"/>     <title>Second weekly report for GSoC</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Here is my weekly report for the second week of GSoC :<br/><br/>Hi ! <br/><br/>I've spent my week refactoring my formatter, and after successfully  integrating the effects handling, I've banged my head against the track  objects wall. <br/><br/>My first version worked fine, but I had worked around the following  problem in a way that was not the ideal one : <br/><br/>When you create a timeline object, the track objects are not immediately  created, and when timeline objects are ungrouped in Pitivi, you want to  access the track objects of the timeline file sources to move them  accordingly. I worked that around by creating two file sources when  needed, and setting one mute and the other blind. <br/><br/>My new version added a \"track-object-added\" signal to GESTimelineObject,  which I caught to move the track objects accordingly. This worked fine,  but there is now another trouble : transitions added after track objects  were created are not taken into account, even if GST_DEBUG tells me they  were really added. I have a good test case that shows that, and I pushed  that yesterday for bilboed and thiblahute to have a look. <br/><br/>I just started to have a look at the unhandled argtypes in the bindings,  and I will work this week-end to get back in my schedule. <br/><br/>I'll be able to use the old version of the formatter to start  integrating it anyway, for the API will not change when the refactoring  is done. <br/><br/>By the next report, I plan to have finished the bindings, to have them  merged soon, cause other GSoCers will need them. I will then start the  integration, to reach the goal of my mid-term evaluation : having pitivi  load projects, and see them in the viewer. <br/><br/>Have a good week-end <span class=\"moz-smiley-s1\" title=\":)\"><span>:)</span></span></div>     </content>     <updated>2011-06-03T18:18:48Z</updated>     <published>2011-06-03T18:18:00Z</published>     <author>       <name>Mathieu Duponchelle</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/06500866716456569717</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-2750852840563144504</id>       <author>         <name>Mathieu Duponchelle</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/06500866716456569717</uri>       </author>       <link href=\"http://mathieuduponchelle.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://mathieuduponchelle.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Gstreamer-editing-services, Pitivi and other hacks.</subtitle>       <title>Mathieu Duponchelle</title>       <updated>2014-10-19T13:14:49Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-8113711320148671046.post-5764975106168306445</id>     <link href=\"http://thiblahute.blogspot.com/feeds/5764975106168306445/comments/default\" rel=\"replies\" title=\"Enviar comentarios\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/05/pitivi-014-no-longer-kills-kittens.html#comment-form\" rel=\"replies\" title=\"13 comentarios\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/5764975106168306445\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/5764975106168306445\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/05/pitivi-014-no-longer-kills-kittens.html\" rel=\"alternate\" title=\"PiTiVi 0.14 &quot;No longer kills kittens&quot;\" type=\"text/html\"/>     <title>PiTiVi 0.14 \"No longer kills kittens\"</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"ace-line\" id=\"magicdomid1817\" style=\"text-align: justify;\"><span class=\"author-g-o536cfcy73qm7wpq\">The PiTiVi team is proud to announce</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> the immediate availability of our new <a href=\"http://ftp.acc.umu.se/pub/GNOME/sources/pitivi/0.14/pitivi-0.14.0.tar.bz2\">0.14 release</a></span><span class=\"author-g-fuiwc1yg1a5l5cva\">, with </span><span class=\"author-g-p82rb927kbntnz122zyc\">major <a href=\"http://ftp.acc.umu.se/pub/GNOME/sources/pitivi/0.13/pitivi-0.13.9.90.news\">new features, bug fixes and usability improvements</a>.</span><span class=\"author-g-o536cfcy73qm7wpq\"> We </span><span class=\"author-g-fuiwc1yg1a5l5cva\">hope you can use and enjoy the improvements in </span><span class=\"author-g-o536cfcy73qm7wpq\">PiTiVi</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> 0.14,</span><span class=\"author-g-o536cfcy73qm7wpq\"> and report bugs </span><span class=\"author-g-fuiwc1yg1a5l5cva\">you may encounter</span><span class=\"author-g-o536cfcy73qm7wpq\"> (</span><span class=\"author-g-fuiwc1yg1a5l5cva\">bugs are a fact of life! Help us hunt them out!</span><span class=\"author-g-o536cfcy73qm7wpq\">).</span></div><div class=\"ace-line\" id=\"magicdomid1992\" style=\"text-align: justify;\"><br/></div><div class=\"ace-line\" id=\"magicdomid2186\" style=\"text-align: justify;\"><span class=\"author-g-fuiwc1yg1a5l5cva\">Some of the m</span><span class=\"author-g-p82rb927kbntnz122zyc\">ajor new features</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> </span><span class=\"author-g-o536cfcy73qm7wpq\">deserve to be enhanced in here such as:</span><br/></div><div class=\"ace-line\" id=\"magicdomid1486\" style=\"text-align: justify;\"><ul><li><span class=\"author-g-o536cfcy73qm7wpq\">Audio and video effects: </span><span class=\"author-g-fuiwc1yg1a5l5cva\">w</span><span class=\"author-g-o536cfcy73qm7wpq\">ith PiTiVi 0.14, it is now possible to add all the effects </span><span class=\"author-g-fuiwc1yg1a5l5cva\">provided</span><span class=\"author-g-o536cfcy73qm7wpq\"> by GStreamer</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> and some other libraries</span><span class=\"author-g-o536cfcy73qm7wpq\">, which</span><span class=\"author-g-fuiwc1yg1a5l5cva\">, depending on what is installed on your system, means \"a lot\". The user interface for managing th</span><span class=\"author-g-o536cfcy73qm7wpq\">o</span><span class=\"author-g-fuiwc1yg1a5l5cva\">se effects will improve in future releases.</span></li></ul></div><div class=\"ace-line\" id=\"magicdomid1827\" style=\"text-align: justify;\"><ul><li><span class=\"author-g-o536cfcy73qm7wpq\">Ability to preview video, audio and image files before importing: the file chooser dialog</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> now lets</span><span class=\"author-g-o536cfcy73qm7wpq\"> you </span><span class=\"author-g-p82rb927kbntnz122zyc\">directly </span><span class=\"author-g-o536cfcy73qm7wpq\">preview the files you want to import. This is pretty useful when you do</span><span class=\"author-g-fuiwc1yg1a5l5cva\">n't remember the name of a file you wanted to import, or when you're just \"looking around\" for media to use in your project</span><span class=\"author-g-o536cfcy73qm7wpq\">.</span></li></ul></div><div class=\"ace-line\" id=\"magicdomid482\" style=\"text-align: justify;\"><ul><li><span class=\"author-g-o536cfcy73qm7wpq\">Welcome dialog: </span><span class=\"author-g-fuiwc1yg1a5l5cva\">w</span><span class=\"author-g-o536cfcy73qm7wpq\">hen starting PiTiVi</span><span class=\"author-g-fuiwc1yg1a5l5cva\">, a startup assistant now helps you load recently used projects in two clicks or create a new project</span><span class=\"author-g-o536cfcy73qm7wpq\">. </span><span class=\"author-g-fuiwc1yg1a5l5cva\">Don't  feel like using this dialog? Just click its Close button or press the  \"Escape\" key on your keyboard. However, we trust that this little fella  will make you much more efficient, not less. We hate useless windows.  See also </span><a href=\"http://jeff.ecchi.ca/blog/2010/11/23/startup-assistant/\"><span class=\"author-g-fuiwc1yg1a5l5cva url\">this post</span></a><span class=\"author-g-fuiwc1yg1a5l5cva\">, for some explanation of the design process that went into this welcome dialog.</span></li></ul></div><div class=\"ace-line\" id=\"magicdomid2190\" style=\"text-align: justify;\">...And more. See the full <a href=\"http://git.pitivi.org/?p=pitivi.git;a=blob_plain;f=RELEASE;h=9ac8ea4830aaabb15b9d5a3599e5c8174b407c4b;hb=3cfd226c3ac42b6c878be9f86e2e8d8c42a2e590\">release notes</a><span class=\"author-g-fuiwc1yg1a5l5cva\"> for a more exhaustive list of goodies.</span></div><div class=\"ace-line\" id=\"magicdomid1474\" style=\"text-align: justify;\"><br/></div><div class=\"ace-line\" id=\"magicdomid1500\" style=\"text-align: justify;\"><span class=\"author-g-o536cfcy73qm7wpq\">Th</span><span class=\"author-g-fuiwc1yg1a5l5cva\">is release</span><span class=\"author-g-o536cfcy73qm7wpq\"> cycle has been </span><span class=\"author-g-fuiwc1yg1a5l5cva\">very eventful. A</span><span class=\"author-g-o536cfcy73qm7wpq\">s the list of contributors </span><span class=\"author-g-fuiwc1yg1a5l5cva\">reveals</span><span class=\"author-g-o536cfcy73qm7wpq\">, lot</span><span class=\"author-g-fuiwc1yg1a5l5cva\">s</span><span class=\"author-g-o536cfcy73qm7wpq\"> of people got involved in the </span><span class=\"author-g-fuiwc1yg1a5l5cva\">software </span><span class=\"author-g-o536cfcy73qm7wpq\">development.</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> </span><span class=\"author-g-o536cfcy73qm7wpq\">I also want to thank all the people who work</span><span class=\"author-g-fuiwc1yg1a5l5cva\">ed hard on</span><span class=\"author-g-o536cfcy73qm7wpq\"> translating PiTiVi</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> in a timely manner and reporting localization issues</span><span class=\"author-g-o536cfcy73qm7wpq\">.</span></div><div class=\"ace-line\" id=\"magicdomid1479\" style=\"text-align: justify;\"><br/></div><div class=\"ace-line\" id=\"magicdomid1507\" style=\"text-align: justify;\"><span class=\"author-g-fuiwc1yg1a5l5cva\">We are now entering </span><span class=\"author-g-o536cfcy73qm7wpq\">a new cycle </span><span class=\"author-g-fuiwc1yg1a5l5cva\">o</span><span class=\"author-g-o536cfcy73qm7wpq\">n the road to maturity.</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> Four</span><span class=\"author-g-o536cfcy73qm7wpq\"> student</span><span class=\"author-g-fuiwc1yg1a5l5cva\">s</span><span class=\"author-g-o536cfcy73qm7wpq\"> are working </span><span class=\"author-g-fuiwc1yg1a5l5cva\">full time </span><span class=\"author-g-o536cfcy73qm7wpq\">on PiTiVi</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> this summer, thanks to the </span><span class=\"author-g-o536cfcy73qm7wpq\">Google Summer of Code program, </span><span class=\"author-g-fuiwc1yg1a5l5cva\">and we will try to increase the general development pace to </span><span class=\"author-g-o536cfcy73qm7wpq\">keep th</span><span class=\"author-g-fuiwc1yg1a5l5cva\">e</span><span class=\"author-g-o536cfcy73qm7wpq\"> great </span><span class=\"author-g-fuiwc1yg1a5l5cva\">momentum we had in the past few weeks. Stay tuned for another blog post on how we plan to achieve this</span><span class=\"author-g-o536cfcy73qm7wpq\">!</span></div><div class=\"ace-line\" id=\"magicdomid619\" style=\"text-align: justify;\"><br/></div><div class=\"ace-line\" id=\"magicdomid1803\" style=\"text-align: justify;\"><span class=\"author-g-fuiwc1yg1a5l5cva\">T</span><span class=\"author-g-o536cfcy73qm7wpq\">o celebrate</span><span class=\"author-g-35dsi8gqguo3xvk6\">,</span><span class=\"author-g-o536cfcy73qm7wpq\"> I </span><span class=\"author-g-fuiwc1yg1a5l5cva\">personally </span><span class=\"author-g-o536cfcy73qm7wpq\">wanted to </span><span class=\"author-g-fuiwc1yg1a5l5cva\">do some <a href=\"http://en.wikipedia.org/wiki/Eating_your_own_dog_food\">dogfooding</a> </span><span class=\"author-g-fuiwc1yg1a5l5cva\">by making this little video, with the additional constraint of using  only footage coming from my own camera (no, I am not a video artist!):</span></div><br/><br/><br/><br/><div><a href=\"http://www.youtube.com/watch?v=dBlpbF8sypM\"><span style=\"font-style: italic;\">here</span></a> or <a href=\"http://dl.dropbox.com/u/2804070/pitivi-0.14_final.webm\"> here</a></div><br/><br/><div class=\"ace-line\" id=\"magicdomid1288\" style=\"text-align: justify;\"><br/><div class=\"ace-line\" id=\"magicdomid1849\" style=\"text-align: justify;\"><span class=\"author-g-fuiwc1yg1a5l5cva\">But this is for sure, not the best </span><span class=\"author-g-p82rb927kbntnz122zyc\">P</span><span class=\"author-g-fuiwc1yg1a5l5cva\">i</span><span class=\"author-g-p82rb927kbntnz122zyc\">T</span><span class=\"author-g-fuiwc1yg1a5l5cva\">i</span><span class=\"author-g-p82rb927kbntnz122zyc\">V</span><span class=\"author-g-fuiwc1yg1a5l5cva\">i can do. See our <a href=\"http://www.pitivi.org/?go=showcase\">showcase page</a> </span><span class=\"author-g-fuiwc1yg1a5l5cva\">for examples of videos we found to be aesthetically interesting</span><span class=\"author-g-p82rb927kbntnz122zyc\">, and feel free to submit your own! P</span><span class=\"author-g-fuiwc1yg1a5l5cva\">ost links to your videos in comments</span><span class=\"author-g-p82rb927kbntnz122zyc\">, </span><span class=\"author-g-fuiwc1yg1a5l5cva\">and if they're really cool, they could end up in our showcase! ;)</span></div><div class=\"ace-line\" id=\"magicdomid1844\" style=\"text-align: justify;\"><br/></div></div></div>     </content>     <updated>2011-06-01T23:30:08Z</updated>     <published>2011-06-01T05:19:00Z</published>     <author>       <name>Thibault Saunier</name>       <email>noreply@blogger.com</email>       <uri>https://plus.google.com/103637668808391628590</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-8113711320148671046</id>       <category term=\"open source\"/>       <category term=\"development\"/>       <category term=\"gnome\"/>       <category term=\"gvfs\"/>       <category term=\"nautilus\"/>       <category term=\"android\"/>       <category term=\"gsoc\"/>       <category term=\"gsoc2010\"/>       <author>         <name>Thibault Saunier</name>         <email>noreply@blogger.com</email>         <uri>https://plus.google.com/103637668808391628590</uri>       </author>       <link href=\"http://thiblahute.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://thiblahute.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Thiblahute's hacks</subtitle>       <title>Thibault Saunier</title>       <updated>2014-10-07T03:21:30Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-8113711320148671046.post-3828711388779292147</id>     <link href=\"http://thiblahute.blogspot.com/feeds/3828711388779292147/comments/default\" rel=\"replies\" title=\"Enviar comentarios\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/05/pitivi-pre-release.html#comment-form\" rel=\"replies\" title=\"6 comentarios\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/3828711388779292147\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default/3828711388779292147\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://thiblahute.blogspot.com/2011/05/pitivi-pre-release.html\" rel=\"alternate\" title=\"PiTiVi pre-release\" type=\"text/html\"/>     <title>PiTiVi pre-release</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"\" id=\"magicdomid2\"><span class=\"author-g-o536cfcy73qm7wpq\">The whole PiTiVi team is pleased to announce a pre-release of the PiTiVi video editor.</span></div><div class=\"\" id=\"magicdomid3\"><br/></div><div class=\"\" id=\"magicdomid4\"><span class=\"author-g-o536cfcy73qm7wpq\">This pre-release contains the past 7 months of work, implementing this pretty new feature list:</span></div><div class=\"\" id=\"magicdomid6\"><ul><li><span class=\"author-g-fuiwc1yg1a5l5cva\">A</span><span class=\"author-g-o536cfcy73qm7wpq\">udio and </span><span class=\"author-g-fuiwc1yg1a5l5cva\">v</span><span class=\"author-g-o536cfcy73qm7wpq\">ideo effects</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Completely redesigned project settings dialog, with the ability to create presets</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Completely redesigned rendering dialog</span></li><li>W<span class=\"author-g-o536cfcy73qm7wpq\">elcome </span><span class=\"author-g-fuiwc1yg1a5l5cva\">dialog that helps you start a project or load recent projects in two clicks</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Ability to preview video, audio and image files before importing</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Add a \"best fit\" zoom button</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Ability to jump to an exact position in the timeline</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Ability to specify custom aspect ratios and framerates</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Show a progress bar when loading projects</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">300% faster project timeline loading</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Search bar in the Media Library</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Ability to detach all the tabs and the previewer</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">N</span><span class=\"author-g-o536cfcy73qm7wpq\">ew manpage</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">Commandline render mode</span></li><li><span class=\"author-g-o536cfcy73qm7wpq\">Use </span><span class=\"author-g-fuiwc1yg1a5l5cva\">the standard </span><span class=\"author-g-o536cfcy73qm7wpq\">infobar</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> widget</span><span class=\"author-g-o536cfcy73qm7wpq\"> all around</span></li><li><span class=\"author-g-fuiwc1yg1a5l5cva\">And</span><span class=\"author-g-o536cfcy73qm7wpq\"> </span><a href=\"https://bugzilla.gnome.org/buglist.cgi?product=pitivi;target_milestone=0.14\"><span class=\"author-g-fuiwc1yg1a5l5cva\">l</span><span class=\"author-g-o536cfcy73qm7wpq\">ot</span><span class=\"author-g-fuiwc1yg1a5l5cva\">s</span></a> of bug fixing<br/></li></ul></div><div class=\"\" id=\"magicdomid22\"><span class=\"author-g-o536cfcy73qm7wpq\"><br/></span></div><div class=\"\" id=\"magicdomid25\"><span class=\"author-g-o536cfcy73qm7wpq\">Unless anything critical or regressions pop up, expect the 0.14 release next tuesday (</span><span class=\"author-g-fuiwc1yg1a5l5cva\">May </span><span class=\"author-g-o536cfcy73qm7wpq\">31st).</span></div><div class=\"\" id=\"magicdomid26\"><br/></div><div class=\"\" id=\"magicdomid27\"><span class=\"author-g-o536cfcy73qm7wpq\">Please test it and abuse it and report bugs at:</span></div><div class=\"\" id=\"magicdomid28\"><span class=\"author-g-o536cfcy73qm7wpq url\"><a href=\"https://bugzilla.gnome.org/enter_bug.cgi?product=pitivi\">https://bugzilla.gnome.org/enter_bug.cgi?product=</a></span><span class=\"author-g-fuiwc1yg1a5l5cva url\"><a href=\"https://bugzilla.gnome.org/enter_bug.cgi?product=pitivi\">pitivi</a></span></div><div class=\"\" id=\"magicdomid29\"><br/></div><div class=\"\" id=\"magicdomid30\"><span class=\"author-g-o536cfcy73qm7wpq\">Tarballs are available here:</span></div><div class=\"ace-line\" id=\"magicdomid45\"><span class=\"author-g-o536cfcy73qm7wpq url\"><a href=\"http://ftp.gnome.org/pub/GNOME/sources/pitivi/0.13/pitivi-0.13.9.90.tar.gz\">http://ftp.gnome.org/pub/GNOME/sources/pitivi/0.13/pitivi-0.13.9.90.tar.gz</a><br/><br/></span><div class=\"ace-line\" id=\"magicdomid49\"><span class=\"author-g-fuiwc1yg1a5l5cva\">E</span><span class=\"author-g-o536cfcy73qm7wpq\">xpect updated Ubuntu packages soon on the </span><span class=\"author-g-fuiwc1yg1a5l5cva\">GS</span><span class=\"author-g-o536cfcy73qm7wpq\">treamer </span><span class=\"author-g-fuiwc1yg1a5l5cva\">D</span><span class=\"author-g-o536cfcy73qm7wpq\">evelopers</span><span class=\"author-g-fuiwc1yg1a5l5cva\"> </span><span class=\"author-g-o536cfcy73qm7wpq\">PPA:</span></div><div class=\"ace-line\" id=\"magicdomid50\"><span class=\"author-g-o536cfcy73qm7wpq url\"><a href=\"https://launchpad.net/%7Egstreamer-developers/+archive/ppa\">https://launchpad.net/~gstreamer-developers/+archive/ppa</a></span></div><br/></div><div class=\"\" id=\"magicdomid36\"><span class=\"author-g-o536cfcy73qm7wpq\">Thanks for testing and help</span><span class=\"author-g-fuiwc1yg1a5l5cva\">ing</span><span class=\"author-g-o536cfcy73qm7wpq\"> us mak</span><span class=\"author-g-fuiwc1yg1a5l5cva\">e</span><span class=\"author-g-o536cfcy73qm7wpq\"> this the best release ever :)</span></div></div>     </content>     <updated>2011-06-01T03:28:18Z</updated>     <published>2011-05-25T16:22:00Z</published>     <author>       <name>Thibault Saunier</name>       <email>noreply@blogger.com</email>       <uri>https://plus.google.com/103637668808391628590</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-8113711320148671046</id>       <category term=\"open source\"/>       <category term=\"development\"/>       <category term=\"gnome\"/>       <category term=\"gvfs\"/>       <category term=\"nautilus\"/>       <category term=\"android\"/>       <category term=\"gsoc\"/>       <category term=\"gsoc2010\"/>       <author>         <name>Thibault Saunier</name>         <email>noreply@blogger.com</email>         <uri>https://plus.google.com/103637668808391628590</uri>       </author>       <link href=\"http://thiblahute.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/8113711320148671046/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://thiblahute.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Thiblahute's hacks</subtitle>       <title>Thibault Saunier</title>       <updated>2014-10-07T03:21:30Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-2750852840563144504.post-1208609617334228117</id>     <link href=\"http://mathieuduponchelle.blogspot.com/feeds/1208609617334228117/comments/default\" rel=\"replies\" title=\"Publier les commentaires\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/05/i-have-been-lurking-and-hacking-pitivis.html#comment-form\" rel=\"replies\" title=\"52 commentaires\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/1208609617334228117\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/1208609617334228117\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/05/i-have-been-lurking-and-hacking-pitivis.html\" rel=\"alternate\" title=\"\" type=\"text/html\"/>     <title/>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">I have been lurking and hacking Pitivi's source code for quite a while now, and I think it is now time for me to sum up my opinions about it.<br/><br/><br/>The first time I launched it, I had just installed Ubuntu and the version I had was 0.13.4, without the effects and anything. I was new to coding, so the only thing I could judge about it was the user interface and how everything fitted together. And I must admit that I thought : \"Wow ! This is not what I would use if I wanted to make a short movie or anything ..\"<br/><br/>Anyway, I started messing up with the code, making my way through the architecture with wild prints and crazy changes, and I quicly reckoned that Pitivi was only the visible part of a greater framework, namely GStreamer, and that this framework really <b>rocked</b>, and gave Pitivi an unprecedented advantage on what existed before : A solid community, with hundreds of active members, all of them dedicated on taming the wild beast which is media handling, writing a great number of plugins ranging from codec handling to effect creation or object transformation !<br/><br/>Pitivi was nothing but the editing emerged part of the iceberg, and a part which was still to grow to its real size. After all, the version naming is not random, the 0.13.x name means that it really is not mature yet, and misses a bunch of basic features essential to video editing, listing them would be too fastidious.<br/><br/>But the whole point of my argumentation is that I think Pitivi has bet on the good horse, cause now that I begin to know a little more about GStreamer's internals, I realize the power that lies in its architecture : Flexibility and Modularity, through the use of combinable elements to form new elements, which in turn can be combined to finally make complex pipelines, ready to be played or rendered at will.<br/><br/>I don't know well the other available frameworks, for example MLT, but what I know is that I love GStreamer, and a lot of other people look like they love it as well, shaping up the biggest media framework community by far.<br/><br/>That's why I stuck up to pitivi until now, eventually applying for a Summer of Code to be able to give it still more of my time, and I can say now I'm happy of my choice. Indeed, a long-awaited release has just arrived, shipping a whole lot of goodies, first of them being the effects handling, and I can see some lines moving. Pitivi's IRC channel has never been so active, and new enthusiastic developers wannabe's pop up every day. On top of that, Gstreamer and Gnome have allocated no less than <b>4</b> Summer of codes to us (against only one last year) which means we're gonna be able to take this software to a new level :<br/><ol><li>One GSoCer is going to implement complex object recognition algorithms (robust estimation of Optical flow), which will make pitivi conscious of the different layers (background, foreground) and moving objects in a video.</li><li>Another will use Gstreamer filters to provide object's transformation options to the user, and also give titling support to Pitivi, another essential feature that it was lacking until now.</li><li>The third one will allow users to upload videos to streaming websites such as youtube or dailymotion, and also provide them with rendering presets (IPod, YouTube, Android Phone etc..).</li><li> I will integrate a new C library in pitivi, which will replace a lot of its backend with C optimized functions, making it more performant in the process, and allowing new features<br/>\\ufffd\\ufffdintegration (for example new kinds of transitions, the default one for now being the classical overused crossfade).</li></ol>This is exciting isn't it ? I can't wait to see the next release, which will hopefully come way faster than the previous one. Kudos to thiblahute for bringing it to us !</div>     </content>     <updated>2011-05-27T21:44:53Z</updated>     <published>2011-05-27T21:43:00Z</published>     <author>       <name>Mathieu Duponchelle</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/06500866716456569717</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-2750852840563144504</id>       <author>         <name>Mathieu Duponchelle</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/06500866716456569717</uri>       </author>       <link href=\"http://mathieuduponchelle.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://mathieuduponchelle.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Gstreamer-editing-services, Pitivi and other hacks.</subtitle>       <title>Mathieu Duponchelle</title>       <updated>2014-10-19T13:14:49Z</updated>     </source>   </entry>    <entry>     <id>tag:blogger.com,1999:blog-2750852840563144504.post-6307125514968322542</id>     <link href=\"http://mathieuduponchelle.blogspot.com/feeds/6307125514968322542/comments/default\" rel=\"replies\" title=\"Publier les commentaires\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/05/my-google-summer-of-code-weekly-report.html#comment-form\" rel=\"replies\" title=\"28 commentaires\" type=\"text/html\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/6307125514968322542\" rel=\"edit\" type=\"application/atom+xml\"/>     <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default/6307125514968322542\" rel=\"self\" type=\"application/atom+xml\"/>     <link href=\"http://mathieuduponchelle.blogspot.com/2011/05/my-google-summer-of-code-weekly-report.html\" rel=\"alternate\" title=\"My Google summer of code weekly report number 1.\" type=\"text/html\"/>     <title>My Google summer of code weekly report number 1.</title>     <content type=\"xhtml\"><div xmlns=\"http://www.w3.org/1999/xhtml\">Hi everyone !<br/><br/>I started working on my project before the actual Summer of Code began, and I already successfully compiled the static bindings with a code coverage of about 90 %, wrote the beginning of a test suite for them and a basic example script.<br/><br/>Since then, effects have been merged in GES master, so the .xptv file formatter I had written has got outdated, and since it's a critical component of my project, I decided to update it before going on with the bindings, in the hope of getting a near 100% code coverage.<br/><br/>This has involved some massive refactoring, since I had not clearly envisioned the way the formatter would work with the effects (shame on me ;), and I'm not done yet : effects are integrated, but I still have to re-integrate the transitions properly).<br/><br/>However, work is going well, and I'm not blocked anymore on my way to integrating GES in pitivi, given one of the members of the IRC channel gave me a hand on solving the problem of GST argtypes that were not properly handled by the code generator I use to create the bindings.<br/><br/>By the end of next week, I will surely have finished my work on the formatter (code cleanup, fixing of the tests), and I hope to have solved the GST argtypes problem completely as well (This could be the matter of 2 or 3 hours of coding if everything goes as intended). With some luck, I'll be able to write overrides for the last 10 or 12 functions as well, which will leave me free to attack the real meat of my project, i.e. integration in pitivi proper.<br/><br/>Most of my problems this week were very specific to my project, and I don't think they'd be very useful to anyone.</div>     </content>     <updated>2011-05-27T21:01:04Z</updated>     <published>2011-05-27T21:01:00Z</published>     <author>       <name>Mathieu Duponchelle</name>       <email>noreply@blogger.com</email>       <uri>http://www.blogger.com/profile/06500866716456569717</uri>     </author>     <source>       <id>tag:blogger.com,1999:blog-2750852840563144504</id>       <author>         <name>Mathieu Duponchelle</name>         <email>noreply@blogger.com</email>         <uri>http://www.blogger.com/profile/06500866716456569717</uri>       </author>       <link href=\"http://mathieuduponchelle.blogspot.com/feeds/posts/default\" rel=\"http://schemas.google.com/g/2005#feed\" type=\"application/atom+xml\"/>       <link href=\"http://www.blogger.com/feeds/2750852840563144504/posts/default\" rel=\"self\" type=\"application/atom+xml\"/>       <link href=\"http://mathieuduponchelle.blogspot.com/\" rel=\"alternate\" type=\"text/html\"/>       <link href=\"http://pubsubhubbub.appspot.com/\" rel=\"hub\" type=\"text/html\"/>       <subtitle>Gstreamer-editing-services, Pitivi and other hacks.</subtitle>       <title>Mathieu Duponchelle</title>       <updated>2014-10-19T13:14:49Z</updated>     </source>   </entry> </feed> ", 
    "identity": {
        "subtype": "", 
        "is_error": false, 
        "version": "", 
        "protocol": "", 
        "language": "", 
        "service": "", 
        "has_dataset": false, 
        "has_metadata": false
    }, 
    "digest": "84ad07410e23e63a02a7ee1a749b7bfc", 
    "source_url": "http://www.pitivi.org/planet/atom.xml"
}